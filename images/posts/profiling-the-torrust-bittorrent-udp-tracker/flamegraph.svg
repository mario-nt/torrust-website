<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1910" onload="init(evt)" viewBox="0 0 1200 1910" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1910" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1893.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1893.00"> </text><svg id="frames" x="10" width="1180" total_samples="42352"><g><title>[unknown] (154 samples, 0.36%)</title><rect x="0.0094%" y="1813" width="0.3636%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="154"/><text x="0.2594%" y="1823.50"></text></g><g><title>[unknown] (154 samples, 0.36%)</title><rect x="0.0094%" y="1797" width="0.3636%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="154"/><text x="0.2594%" y="1807.50"></text></g><g><title>[unknown] (150 samples, 0.35%)</title><rect x="0.0189%" y="1781" width="0.3542%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="150"/><text x="0.2689%" y="1791.50"></text></g><g><title>[unknown] (149 samples, 0.35%)</title><rect x="0.0213%" y="1765" width="0.3518%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="149"/><text x="0.2713%" y="1775.50"></text></g><g><title>[unknown] (146 samples, 0.34%)</title><rect x="0.0283%" y="1749" width="0.3447%" height="15" fill="rgb(208,68,35)" fg:x="12" fg:w="146"/><text x="0.2783%" y="1759.50"></text></g><g><title>[unknown] (139 samples, 0.33%)</title><rect x="0.0449%" y="1733" width="0.3282%" height="15" fill="rgb(232,128,0)" fg:x="19" fg:w="139"/><text x="0.2949%" y="1743.50"></text></g><g><title>[unknown] (80 samples, 0.19%)</title><rect x="0.1842%" y="1717" width="0.1889%" height="15" fill="rgb(207,160,47)" fg:x="78" fg:w="80"/><text x="0.4342%" y="1727.50"></text></g><g><title>[unknown] (80 samples, 0.19%)</title><rect x="0.1842%" y="1701" width="0.1889%" height="15" fill="rgb(228,23,34)" fg:x="78" fg:w="80"/><text x="0.4342%" y="1711.50"></text></g><g><title>[unknown] (76 samples, 0.18%)</title><rect x="0.1936%" y="1685" width="0.1794%" height="15" fill="rgb(218,30,26)" fg:x="82" fg:w="76"/><text x="0.4436%" y="1695.50"></text></g><g><title>[unknown] (63 samples, 0.15%)</title><rect x="0.2243%" y="1669" width="0.1488%" height="15" fill="rgb(220,122,19)" fg:x="95" fg:w="63"/><text x="0.4743%" y="1679.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="0.3542%" y="1653" width="0.0189%" height="15" fill="rgb(250,228,42)" fg:x="150" fg:w="8"/><text x="0.6042%" y="1663.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="0.3542%" y="1637" width="0.0189%" height="15" fill="rgb(240,193,28)" fg:x="150" fg:w="8"/><text x="0.6042%" y="1647.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="0.3542%" y="1621" width="0.0189%" height="15" fill="rgb(216,20,37)" fg:x="150" fg:w="8"/><text x="0.6042%" y="1631.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="0.3565%" y="1605" width="0.0165%" height="15" fill="rgb(206,188,39)" fg:x="151" fg:w="7"/><text x="0.6065%" y="1615.50"></text></g><g><title>[unknown] (155 samples, 0.37%)</title><rect x="0.0094%" y="1829" width="0.3660%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="155"/><text x="0.2594%" y="1839.50"></text></g><g><title>profiling (174 samples, 0.41%)</title><rect x="0.0094%" y="1845" width="0.4108%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="174"/><text x="0.2594%" y="1855.50"></text></g><g><title>clone3 (17 samples, 0.04%)</title><rect x="0.3801%" y="1829" width="0.0401%" height="15" fill="rgb(225,20,46)" fg:x="161" fg:w="17"/><text x="0.6301%" y="1839.50"></text></g><g><title>start_thread (16 samples, 0.04%)</title><rect x="0.3825%" y="1813" width="0.0378%" height="15" fill="rgb(210,31,41)" fg:x="162" fg:w="16"/><text x="0.6325%" y="1823.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (15 samples, 0.04%)</title><rect x="0.3849%" y="1797" width="0.0354%" height="15" fill="rgb(221,200,47)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1807.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (15 samples, 0.04%)</title><rect x="0.3849%" y="1781" width="0.0354%" height="15" fill="rgb(226,26,5)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1791.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (15 samples, 0.04%)</title><rect x="0.3849%" y="1765" width="0.0354%" height="15" fill="rgb(249,33,26)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1775.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (15 samples, 0.04%)</title><rect x="0.3849%" y="1749" width="0.0354%" height="15" fill="rgb(235,183,28)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1759.50"></text></g><g><title>__GI___mmap64 (15 samples, 0.04%)</title><rect x="0.3849%" y="1733" width="0.0354%" height="15" fill="rgb(221,5,38)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1743.50"></text></g><g><title>__GI___mmap64 (15 samples, 0.04%)</title><rect x="0.3849%" y="1717" width="0.0354%" height="15" fill="rgb(247,18,42)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1727.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="0.3849%" y="1701" width="0.0354%" height="15" fill="rgb(241,131,45)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1711.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="0.3849%" y="1685" width="0.0354%" height="15" fill="rgb(249,31,29)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1695.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="0.3849%" y="1669" width="0.0354%" height="15" fill="rgb(225,111,53)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1679.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="0.3849%" y="1653" width="0.0354%" height="15" fill="rgb(238,160,17)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1663.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="0.3849%" y="1637" width="0.0354%" height="15" fill="rgb(214,148,48)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1647.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="0.3849%" y="1621" width="0.0354%" height="15" fill="rgb(232,36,49)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1631.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="0.3849%" y="1605" width="0.0354%" height="15" fill="rgb(209,103,24)" fg:x="163" fg:w="15"/><text x="0.6349%" y="1615.50"></text></g><g><title>[unknown] (14 samples, 0.03%)</title><rect x="0.3872%" y="1589" width="0.0331%" height="15" fill="rgb(229,88,8)" fg:x="164" fg:w="14"/><text x="0.6372%" y="1599.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="0.3920%" y="1573" width="0.0283%" height="15" fill="rgb(213,181,19)" fg:x="166" fg:w="12"/><text x="0.6420%" y="1583.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="0.4581%" y="1813" width="0.0331%" height="15" fill="rgb(254,191,54)" fg:x="194" fg:w="14"/><text x="0.7081%" y="1823.50"></text></g><g><title>[[vdso]] (102 samples, 0.24%)</title><rect x="0.4911%" y="1813" width="0.2408%" height="15" fill="rgb(241,83,37)" fg:x="208" fg:w="102"/><text x="0.7411%" y="1823.50"></text></g><g><title>&lt;torrust_tracker::shared::crypto::ephemeral_instance_keys::RANDOM_SEED as core::ops::deref::Deref&gt;::deref::__stability::LAZY (119 samples, 0.28%)</title><rect x="0.4581%" y="1829" width="0.2810%" height="15" fill="rgb(233,36,39)" fg:x="194" fg:w="119"/><text x="0.7081%" y="1839.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (13 samples, 0.03%)</title><rect x="0.7390%" y="1813" width="0.0307%" height="15" fill="rgb(226,3,54)" fg:x="313" fg:w="13"/><text x="0.9890%" y="1823.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (7 samples, 0.02%)</title><rect x="0.7532%" y="1797" width="0.0165%" height="15" fill="rgb(245,192,40)" fg:x="319" fg:w="7"/><text x="1.0032%" y="1807.50"></text></g><g><title>[[vdso]] (63 samples, 0.15%)</title><rect x="0.7745%" y="1813" width="0.1488%" height="15" fill="rgb(238,167,29)" fg:x="328" fg:w="63"/><text x="1.0245%" y="1823.50"></text></g><g><title>__GI___clock_gettime (6 samples, 0.01%)</title><rect x="0.9232%" y="1813" width="0.0142%" height="15" fill="rgb(232,182,51)" fg:x="391" fg:w="6"/><text x="1.1732%" y="1823.50"></text></g><g><title>__GI___libc_write (5 samples, 0.01%)</title><rect x="0.9397%" y="1813" width="0.0118%" height="15" fill="rgb(231,60,39)" fg:x="398" fg:w="5"/><text x="1.1897%" y="1823.50"></text></g><g><title>__GI___libc_write (5 samples, 0.01%)</title><rect x="0.9397%" y="1797" width="0.0118%" height="15" fill="rgb(208,69,12)" fg:x="398" fg:w="5"/><text x="1.1897%" y="1807.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (5 samples, 0.01%)</title><rect x="0.9610%" y="1813" width="0.0118%" height="15" fill="rgb(235,93,37)" fg:x="407" fg:w="5"/><text x="1.2110%" y="1823.50"></text></g><g><title>__pow (8 samples, 0.02%)</title><rect x="0.9752%" y="1813" width="0.0189%" height="15" fill="rgb(213,116,39)" fg:x="413" fg:w="8"/><text x="1.2252%" y="1823.50"></text></g><g><title>_int_malloc (18 samples, 0.04%)</title><rect x="0.9988%" y="1813" width="0.0425%" height="15" fill="rgb(222,207,29)" fg:x="423" fg:w="18"/><text x="1.2488%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (60 samples, 0.14%)</title><rect x="1.0460%" y="1813" width="0.1417%" height="15" fill="rgb(206,96,30)" fg:x="443" fg:w="60"/><text x="1.2960%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (28 samples, 0.07%)</title><rect x="1.1216%" y="1797" width="0.0661%" height="15" fill="rgb(218,138,4)" fg:x="475" fg:w="28"/><text x="1.3716%" y="1807.50"></text></g><g><title>tokio::runtime::context::with_scheduler (10 samples, 0.02%)</title><rect x="1.1900%" y="1813" width="0.0236%" height="15" fill="rgb(250,191,14)" fg:x="504" fg:w="10"/><text x="1.4400%" y="1823.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (13 samples, 0.03%)</title><rect x="1.2136%" y="1813" width="0.0307%" height="15" fill="rgb(239,60,40)" fg:x="514" fg:w="13"/><text x="1.4636%" y="1823.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (10 samples, 0.02%)</title><rect x="1.2207%" y="1797" width="0.0236%" height="15" fill="rgb(206,27,48)" fg:x="517" fg:w="10"/><text x="1.4707%" y="1807.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (12 samples, 0.03%)</title><rect x="1.2443%" y="1813" width="0.0283%" height="15" fill="rgb(225,35,8)" fg:x="527" fg:w="12"/><text x="1.4943%" y="1823.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="1.2774%" y="1797" width="0.0142%" height="15" fill="rgb(250,213,24)" fg:x="541" fg:w="6"/><text x="1.5274%" y="1807.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="1.2774%" y="1781" width="0.0142%" height="15" fill="rgb(247,123,22)" fg:x="541" fg:w="6"/><text x="1.5274%" y="1791.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (5 samples, 0.01%)</title><rect x="1.2798%" y="1765" width="0.0118%" height="15" fill="rgb(231,138,38)" fg:x="542" fg:w="5"/><text x="1.5298%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (25 samples, 0.06%)</title><rect x="1.2727%" y="1813" width="0.0590%" height="15" fill="rgb(231,145,46)" fg:x="539" fg:w="25"/><text x="1.5227%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (17 samples, 0.04%)</title><rect x="1.2916%" y="1797" width="0.0401%" height="15" fill="rgb(251,118,11)" fg:x="547" fg:w="17"/><text x="1.5416%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.04%)</title><rect x="1.2939%" y="1781" width="0.0378%" height="15" fill="rgb(217,147,25)" fg:x="548" fg:w="16"/><text x="1.5439%" y="1791.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.04%)</title><rect x="1.2939%" y="1765" width="0.0378%" height="15" fill="rgb(247,81,37)" fg:x="548" fg:w="16"/><text x="1.5439%" y="1775.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (7 samples, 0.02%)</title><rect x="1.3388%" y="1781" width="0.0165%" height="15" fill="rgb(209,12,38)" fg:x="567" fg:w="7"/><text x="1.5888%" y="1791.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (7 samples, 0.02%)</title><rect x="1.3388%" y="1765" width="0.0165%" height="15" fill="rgb(227,1,9)" fg:x="567" fg:w="7"/><text x="1.5888%" y="1775.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="1.3553%" y="1749" width="0.0236%" height="15" fill="rgb(248,47,43)" fg:x="574" fg:w="10"/><text x="1.6053%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (21 samples, 0.05%)</title><rect x="1.3317%" y="1813" width="0.0496%" height="15" fill="rgb(221,10,30)" fg:x="564" fg:w="21"/><text x="1.5817%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (18 samples, 0.04%)</title><rect x="1.3388%" y="1797" width="0.0425%" height="15" fill="rgb(210,229,1)" fg:x="567" fg:w="18"/><text x="1.5888%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (11 samples, 0.03%)</title><rect x="1.3553%" y="1781" width="0.0260%" height="15" fill="rgb(222,148,37)" fg:x="574" fg:w="11"/><text x="1.6053%" y="1791.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.03%)</title><rect x="1.3553%" y="1765" width="0.0260%" height="15" fill="rgb(234,67,33)" fg:x="574" fg:w="11"/><text x="1.6053%" y="1775.50"></text></g><g><title>std::sync::poison::Flag::done (16 samples, 0.04%)</title><rect x="1.3907%" y="1733" width="0.0378%" height="15" fill="rgb(247,98,35)" fg:x="589" fg:w="16"/><text x="1.6407%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (17 samples, 0.04%)</title><rect x="1.3907%" y="1765" width="0.0401%" height="15" fill="rgb(247,138,52)" fg:x="589" fg:w="17"/><text x="1.6407%" y="1775.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.04%)</title><rect x="1.3907%" y="1749" width="0.0401%" height="15" fill="rgb(213,79,30)" fg:x="589" fg:w="17"/><text x="1.6407%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (25 samples, 0.06%)</title><rect x="1.3836%" y="1813" width="0.0590%" height="15" fill="rgb(246,177,23)" fg:x="586" fg:w="25"/><text x="1.6336%" y="1823.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (23 samples, 0.05%)</title><rect x="1.3884%" y="1797" width="0.0543%" height="15" fill="rgb(230,62,27)" fg:x="588" fg:w="23"/><text x="1.6384%" y="1807.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (22 samples, 0.05%)</title><rect x="1.3907%" y="1781" width="0.0519%" height="15" fill="rgb(216,154,8)" fg:x="589" fg:w="22"/><text x="1.6407%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.01%)</title><rect x="1.4734%" y="1765" width="0.0118%" height="15" fill="rgb(244,35,45)" fg:x="624" fg:w="5"/><text x="1.7234%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="1.4734%" y="1749" width="0.0118%" height="15" fill="rgb(251,115,12)" fg:x="624" fg:w="5"/><text x="1.7234%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (12 samples, 0.03%)</title><rect x="1.4852%" y="1765" width="0.0283%" height="15" fill="rgb(240,54,50)" fg:x="629" fg:w="12"/><text x="1.7352%" y="1775.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="1.4946%" y="1749" width="0.0189%" height="15" fill="rgb(233,84,52)" fg:x="633" fg:w="8"/><text x="1.7446%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (34 samples, 0.08%)</title><rect x="1.4427%" y="1813" width="0.0803%" height="15" fill="rgb(207,117,47)" fg:x="611" fg:w="34"/><text x="1.6927%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (25 samples, 0.06%)</title><rect x="1.4639%" y="1797" width="0.0590%" height="15" fill="rgb(249,43,39)" fg:x="620" fg:w="25"/><text x="1.7139%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (25 samples, 0.06%)</title><rect x="1.4639%" y="1781" width="0.0590%" height="15" fill="rgb(209,38,44)" fg:x="620" fg:w="25"/><text x="1.7139%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (34 samples, 0.08%)</title><rect x="1.5230%" y="1813" width="0.0803%" height="15" fill="rgb(236,212,23)" fg:x="645" fg:w="34"/><text x="1.7730%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (31 samples, 0.07%)</title><rect x="1.5300%" y="1797" width="0.0732%" height="15" fill="rgb(242,79,21)" fg:x="648" fg:w="31"/><text x="1.7800%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (21 samples, 0.05%)</title><rect x="1.5536%" y="1781" width="0.0496%" height="15" fill="rgb(211,96,35)" fg:x="658" fg:w="21"/><text x="1.8036%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (18 samples, 0.04%)</title><rect x="1.5607%" y="1765" width="0.0425%" height="15" fill="rgb(253,215,40)" fg:x="661" fg:w="18"/><text x="1.8107%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (8 samples, 0.02%)</title><rect x="1.7378%" y="1429" width="0.0189%" height="15" fill="rgb(211,81,21)" fg:x="736" fg:w="8"/><text x="1.9878%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (8 samples, 0.02%)</title><rect x="1.8039%" y="1413" width="0.0189%" height="15" fill="rgb(208,190,38)" fg:x="764" fg:w="8"/><text x="2.0539%" y="1423.50"></text></g><g><title>std::sync::poison::Flag::done (12 samples, 0.03%)</title><rect x="1.8252%" y="1349" width="0.0283%" height="15" fill="rgb(235,213,38)" fg:x="773" fg:w="12"/><text x="2.0752%" y="1359.50"></text></g><g><title>std::thread::panicking (8 samples, 0.02%)</title><rect x="1.8346%" y="1333" width="0.0189%" height="15" fill="rgb(237,122,38)" fg:x="777" fg:w="8"/><text x="2.0846%" y="1343.50"></text></g><g><title>std::panicking::panicking (8 samples, 0.02%)</title><rect x="1.8346%" y="1317" width="0.0189%" height="15" fill="rgb(244,218,35)" fg:x="777" fg:w="8"/><text x="2.0846%" y="1327.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (8 samples, 0.02%)</title><rect x="1.8346%" y="1301" width="0.0189%" height="15" fill="rgb(240,68,47)" fg:x="777" fg:w="8"/><text x="2.0846%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (19 samples, 0.04%)</title><rect x="1.8252%" y="1381" width="0.0449%" height="15" fill="rgb(210,16,53)" fg:x="773" fg:w="19"/><text x="2.0752%" y="1391.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.04%)</title><rect x="1.8252%" y="1365" width="0.0449%" height="15" fill="rgb(235,124,12)" fg:x="773" fg:w="19"/><text x="2.0752%" y="1375.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (7 samples, 0.02%)</title><rect x="1.8535%" y="1349" width="0.0165%" height="15" fill="rgb(224,169,11)" fg:x="785" fg:w="7"/><text x="2.1035%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (5 samples, 0.01%)</title><rect x="1.8582%" y="1333" width="0.0118%" height="15" fill="rgb(250,166,2)" fg:x="787" fg:w="5"/><text x="2.1082%" y="1343.50"></text></g><g><title>core::sync::atomic::atomic_swap (5 samples, 0.01%)</title><rect x="1.8582%" y="1317" width="0.0118%" height="15" fill="rgb(242,216,29)" fg:x="787" fg:w="5"/><text x="2.1082%" y="1327.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (55 samples, 0.13%)</title><rect x="1.9905%" y="1333" width="0.1299%" height="15" fill="rgb(230,116,27)" fg:x="843" fg:w="55"/><text x="2.2405%" y="1343.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (55 samples, 0.13%)</title><rect x="1.9905%" y="1317" width="0.1299%" height="15" fill="rgb(228,99,48)" fg:x="843" fg:w="55"/><text x="2.2405%" y="1327.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (140 samples, 0.33%)</title><rect x="1.8700%" y="1381" width="0.3306%" height="15" fill="rgb(253,11,6)" fg:x="792" fg:w="140"/><text x="2.1200%" y="1391.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (140 samples, 0.33%)</title><rect x="1.8700%" y="1365" width="0.3306%" height="15" fill="rgb(247,143,39)" fg:x="792" fg:w="140"/><text x="2.1200%" y="1375.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (140 samples, 0.33%)</title><rect x="1.8700%" y="1349" width="0.3306%" height="15" fill="rgb(236,97,10)" fg:x="792" fg:w="140"/><text x="2.1200%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.08%)</title><rect x="2.1203%" y="1333" width="0.0803%" height="15" fill="rgb(233,208,19)" fg:x="898" fg:w="34"/><text x="2.3703%" y="1343.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (34 samples, 0.08%)</title><rect x="2.1203%" y="1317" width="0.0803%" height="15" fill="rgb(216,164,2)" fg:x="898" fg:w="34"/><text x="2.3703%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (165 samples, 0.39%)</title><rect x="1.8252%" y="1397" width="0.3896%" height="15" fill="rgb(220,129,5)" fg:x="773" fg:w="165"/><text x="2.0752%" y="1407.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="2.2006%" y="1381" width="0.0142%" height="15" fill="rgb(242,17,10)" fg:x="932" fg:w="6"/><text x="2.4506%" y="1391.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="2.2006%" y="1365" width="0.0142%" height="15" fill="rgb(242,107,0)" fg:x="932" fg:w="6"/><text x="2.4506%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (167 samples, 0.39%)</title><rect x="1.8228%" y="1413" width="0.3943%" height="15" fill="rgb(251,28,31)" fg:x="772" fg:w="167"/><text x="2.0728%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (20 samples, 0.05%)</title><rect x="2.2313%" y="1381" width="0.0472%" height="15" fill="rgb(233,223,10)" fg:x="945" fg:w="20"/><text x="2.4813%" y="1391.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.05%)</title><rect x="2.2313%" y="1365" width="0.0472%" height="15" fill="rgb(215,21,27)" fg:x="945" fg:w="20"/><text x="2.4813%" y="1375.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (20 samples, 0.05%)</title><rect x="2.2313%" y="1349" width="0.0472%" height="15" fill="rgb(232,23,21)" fg:x="945" fg:w="20"/><text x="2.4813%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (10 samples, 0.02%)</title><rect x="2.2549%" y="1333" width="0.0236%" height="15" fill="rgb(244,5,23)" fg:x="955" fg:w="10"/><text x="2.5049%" y="1343.50"></text></g><g><title>core::sync::atomic::atomic_swap (10 samples, 0.02%)</title><rect x="2.2549%" y="1317" width="0.0236%" height="15" fill="rgb(226,81,46)" fg:x="955" fg:w="10"/><text x="2.5049%" y="1327.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.02%)</title><rect x="2.2785%" y="1381" width="0.0236%" height="15" fill="rgb(247,70,30)" fg:x="965" fg:w="10"/><text x="2.5285%" y="1391.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.02%)</title><rect x="2.2785%" y="1365" width="0.0236%" height="15" fill="rgb(212,68,19)" fg:x="965" fg:w="10"/><text x="2.5285%" y="1375.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (7 samples, 0.02%)</title><rect x="2.2856%" y="1349" width="0.0165%" height="15" fill="rgb(240,187,13)" fg:x="968" fg:w="7"/><text x="2.5356%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (5 samples, 0.01%)</title><rect x="2.2903%" y="1333" width="0.0118%" height="15" fill="rgb(223,113,26)" fg:x="970" fg:w="5"/><text x="2.5403%" y="1343.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="2.2903%" y="1317" width="0.0118%" height="15" fill="rgb(206,192,2)" fg:x="970" fg:w="5"/><text x="2.5403%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (39 samples, 0.09%)</title><rect x="2.2289%" y="1397" width="0.0921%" height="15" fill="rgb(241,108,4)" fg:x="944" fg:w="39"/><text x="2.4789%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (8 samples, 0.02%)</title><rect x="2.3021%" y="1381" width="0.0189%" height="15" fill="rgb(247,173,49)" fg:x="975" fg:w="8"/><text x="2.5521%" y="1391.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.02%)</title><rect x="2.3021%" y="1365" width="0.0189%" height="15" fill="rgb(224,114,35)" fg:x="975" fg:w="8"/><text x="2.5521%" y="1375.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.02%)</title><rect x="2.3021%" y="1349" width="0.0189%" height="15" fill="rgb(245,159,27)" fg:x="975" fg:w="8"/><text x="2.5521%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (6 samples, 0.01%)</title><rect x="2.3777%" y="1381" width="0.0142%" height="15" fill="rgb(245,172,44)" fg:x="1007" fg:w="6"/><text x="2.6277%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (6 samples, 0.01%)</title><rect x="2.3777%" y="1365" width="0.0142%" height="15" fill="rgb(236,23,11)" fg:x="1007" fg:w="6"/><text x="2.6277%" y="1375.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.01%)</title><rect x="2.3777%" y="1349" width="0.0142%" height="15" fill="rgb(205,117,38)" fg:x="1007" fg:w="6"/><text x="2.6277%" y="1359.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="2.3777%" y="1333" width="0.0142%" height="15" fill="rgb(237,72,25)" fg:x="1007" fg:w="6"/><text x="2.6277%" y="1343.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="2.3919%" y="1365" width="0.0142%" height="15" fill="rgb(244,70,9)" fg:x="1013" fg:w="6"/><text x="2.6419%" y="1375.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (6 samples, 0.01%)</title><rect x="2.3919%" y="1349" width="0.0142%" height="15" fill="rgb(217,125,39)" fg:x="1013" fg:w="6"/><text x="2.6419%" y="1359.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="2.3919%" y="1333" width="0.0142%" height="15" fill="rgb(235,36,10)" fg:x="1013" fg:w="6"/><text x="2.6419%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (6 samples, 0.01%)</title><rect x="2.4367%" y="1333" width="0.0142%" height="15" fill="rgb(251,123,47)" fg:x="1032" fg:w="6"/><text x="2.6867%" y="1343.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="2.4367%" y="1317" width="0.0142%" height="15" fill="rgb(221,13,13)" fg:x="1032" fg:w="6"/><text x="2.6867%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (32 samples, 0.08%)</title><rect x="2.3919%" y="1381" width="0.0756%" height="15" fill="rgb(238,131,9)" fg:x="1013" fg:w="32"/><text x="2.6419%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (26 samples, 0.06%)</title><rect x="2.4060%" y="1365" width="0.0614%" height="15" fill="rgb(211,50,8)" fg:x="1019" fg:w="26"/><text x="2.6560%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (13 samples, 0.03%)</title><rect x="2.4367%" y="1349" width="0.0307%" height="15" fill="rgb(245,182,24)" fg:x="1032" fg:w="13"/><text x="2.6867%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (7 samples, 0.02%)</title><rect x="2.4509%" y="1333" width="0.0165%" height="15" fill="rgb(242,14,37)" fg:x="1038" fg:w="7"/><text x="2.7009%" y="1343.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.02%)</title><rect x="2.4509%" y="1317" width="0.0165%" height="15" fill="rgb(246,228,12)" fg:x="1038" fg:w="7"/><text x="2.7009%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (63 samples, 0.15%)</title><rect x="2.3210%" y="1397" width="0.1488%" height="15" fill="rgb(213,55,15)" fg:x="983" fg:w="63"/><text x="2.5710%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (299 samples, 0.71%)</title><rect x="1.7662%" y="1429" width="0.7060%" height="15" fill="rgb(209,9,3)" fg:x="748" fg:w="299"/><text x="2.0162%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (108 samples, 0.26%)</title><rect x="2.2171%" y="1413" width="0.2550%" height="15" fill="rgb(230,59,30)" fg:x="939" fg:w="108"/><text x="2.4671%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (5 samples, 0.01%)</title><rect x="2.4816%" y="1413" width="0.0118%" height="15" fill="rgb(209,121,21)" fg:x="1051" fg:w="5"/><text x="2.7316%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (13 samples, 0.03%)</title><rect x="2.4721%" y="1429" width="0.0307%" height="15" fill="rgb(220,109,13)" fg:x="1047" fg:w="13"/><text x="2.7221%" y="1439.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (20 samples, 0.05%)</title><rect x="2.5571%" y="1381" width="0.0472%" height="15" fill="rgb(232,18,1)" fg:x="1083" fg:w="20"/><text x="2.8071%" y="1391.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (14 samples, 0.03%)</title><rect x="2.6067%" y="1381" width="0.0331%" height="15" fill="rgb(215,41,42)" fg:x="1104" fg:w="14"/><text x="2.8567%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.03%)</title><rect x="2.6067%" y="1365" width="0.0331%" height="15" fill="rgb(224,123,36)" fg:x="1104" fg:w="14"/><text x="2.8567%" y="1375.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (446 samples, 1.05%)</title><rect x="1.6741%" y="1621" width="1.0531%" height="15" fill="rgb(240,125,3)" fg:x="709" fg:w="446"/><text x="1.9241%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (446 samples, 1.05%)</title><rect x="1.6741%" y="1605" width="1.0531%" height="15" fill="rgb(205,98,50)" fg:x="709" fg:w="446"/><text x="1.9241%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (446 samples, 1.05%)</title><rect x="1.6741%" y="1589" width="1.0531%" height="15" fill="rgb(205,185,37)" fg:x="709" fg:w="446"/><text x="1.9241%" y="1599.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (446 samples, 1.05%)</title><rect x="1.6741%" y="1573" width="1.0531%" height="15" fill="rgb(238,207,15)" fg:x="709" fg:w="446"/><text x="1.9241%" y="1583.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (446 samples, 1.05%)</title><rect x="1.6741%" y="1557" width="1.0531%" height="15" fill="rgb(213,199,42)" fg:x="709" fg:w="446"/><text x="1.9241%" y="1567.50"></text></g><g><title>tokio::runtime::context::set_scheduler (446 samples, 1.05%)</title><rect x="1.6741%" y="1541" width="1.0531%" height="15" fill="rgb(235,201,11)" fg:x="709" fg:w="446"/><text x="1.9241%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (446 samples, 1.05%)</title><rect x="1.6741%" y="1525" width="1.0531%" height="15" fill="rgb(207,46,11)" fg:x="709" fg:w="446"/><text x="1.9241%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (446 samples, 1.05%)</title><rect x="1.6741%" y="1509" width="1.0531%" height="15" fill="rgb(241,35,35)" fg:x="709" fg:w="446"/><text x="1.9241%" y="1519.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (446 samples, 1.05%)</title><rect x="1.6741%" y="1493" width="1.0531%" height="15" fill="rgb(243,32,47)" fg:x="709" fg:w="446"/><text x="1.9241%" y="1503.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (446 samples, 1.05%)</title><rect x="1.6741%" y="1477" width="1.0531%" height="15" fill="rgb(247,202,23)" fg:x="709" fg:w="446"/><text x="1.9241%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (446 samples, 1.05%)</title><rect x="1.6741%" y="1461" width="1.0531%" height="15" fill="rgb(219,102,11)" fg:x="709" fg:w="446"/><text x="1.9241%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (446 samples, 1.05%)</title><rect x="1.6741%" y="1445" width="1.0531%" height="15" fill="rgb(243,110,44)" fg:x="709" fg:w="446"/><text x="1.9241%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (95 samples, 0.22%)</title><rect x="2.5028%" y="1429" width="0.2243%" height="15" fill="rgb(222,74,54)" fg:x="1060" fg:w="95"/><text x="2.7528%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (86 samples, 0.20%)</title><rect x="2.5241%" y="1413" width="0.2031%" height="15" fill="rgb(216,99,12)" fg:x="1069" fg:w="86"/><text x="2.7741%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (82 samples, 0.19%)</title><rect x="2.5335%" y="1397" width="0.1936%" height="15" fill="rgb(226,22,26)" fg:x="1073" fg:w="82"/><text x="2.7835%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::pack (35 samples, 0.08%)</title><rect x="2.6445%" y="1381" width="0.0826%" height="15" fill="rgb(217,163,10)" fg:x="1120" fg:w="35"/><text x="2.8945%" y="1391.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (12 samples, 0.03%)</title><rect x="2.7271%" y="1557" width="0.0283%" height="15" fill="rgb(213,25,53)" fg:x="1155" fg:w="12"/><text x="2.9771%" y="1567.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (12 samples, 0.03%)</title><rect x="2.7271%" y="1541" width="0.0283%" height="15" fill="rgb(252,105,26)" fg:x="1155" fg:w="12"/><text x="2.9771%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (14 samples, 0.03%)</title><rect x="2.7271%" y="1621" width="0.0331%" height="15" fill="rgb(220,39,43)" fg:x="1155" fg:w="14"/><text x="2.9771%" y="1631.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="2.7271%" y="1605" width="0.0331%" height="15" fill="rgb(229,68,48)" fg:x="1155" fg:w="14"/><text x="2.9771%" y="1615.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (14 samples, 0.03%)</title><rect x="2.7271%" y="1589" width="0.0331%" height="15" fill="rgb(252,8,32)" fg:x="1155" fg:w="14"/><text x="2.9771%" y="1599.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.03%)</title><rect x="2.7271%" y="1573" width="0.0331%" height="15" fill="rgb(223,20,43)" fg:x="1155" fg:w="14"/><text x="2.9771%" y="1583.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (480 samples, 1.13%)</title><rect x="1.6292%" y="1653" width="1.1334%" height="15" fill="rgb(229,81,49)" fg:x="690" fg:w="480"/><text x="1.8792%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (479 samples, 1.13%)</title><rect x="1.6316%" y="1637" width="1.1310%" height="15" fill="rgb(236,28,36)" fg:x="691" fg:w="479"/><text x="1.8816%" y="1647.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9 samples, 0.02%)</title><rect x="2.7720%" y="1621" width="0.0213%" height="15" fill="rgb(249,185,26)" fg:x="1174" fg:w="9"/><text x="3.0220%" y="1631.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (9 samples, 0.02%)</title><rect x="2.7720%" y="1605" width="0.0213%" height="15" fill="rgb(249,174,33)" fg:x="1174" fg:w="9"/><text x="3.0220%" y="1615.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (500 samples, 1.18%)</title><rect x="1.6292%" y="1669" width="1.1806%" height="15" fill="rgb(233,201,37)" fg:x="690" fg:w="500"/><text x="1.8792%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (20 samples, 0.05%)</title><rect x="2.7626%" y="1653" width="0.0472%" height="15" fill="rgb(221,78,26)" fg:x="1170" fg:w="20"/><text x="3.0126%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (18 samples, 0.04%)</title><rect x="2.7673%" y="1637" width="0.0425%" height="15" fill="rgb(250,127,30)" fg:x="1172" fg:w="18"/><text x="3.0173%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (7 samples, 0.02%)</title><rect x="2.7933%" y="1621" width="0.0165%" height="15" fill="rgb(230,49,44)" fg:x="1183" fg:w="7"/><text x="3.0433%" y="1631.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (7 samples, 0.02%)</title><rect x="2.7933%" y="1605" width="0.0165%" height="15" fill="rgb(229,67,23)" fg:x="1183" fg:w="7"/><text x="3.0433%" y="1615.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.02%)</title><rect x="2.7933%" y="1589" width="0.0165%" height="15" fill="rgb(249,83,47)" fg:x="1183" fg:w="7"/><text x="3.0433%" y="1599.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::{{closure}} (6 samples, 0.01%)</title><rect x="2.7956%" y="1573" width="0.0142%" height="15" fill="rgb(215,43,3)" fg:x="1184" fg:w="6"/><text x="3.0456%" y="1583.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.01%)</title><rect x="2.7956%" y="1557" width="0.0142%" height="15" fill="rgb(238,154,13)" fg:x="1184" fg:w="6"/><text x="3.0456%" y="1567.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="2.7956%" y="1541" width="0.0142%" height="15" fill="rgb(219,56,2)" fg:x="1184" fg:w="6"/><text x="3.0456%" y="1551.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (504 samples, 1.19%)</title><rect x="1.6292%" y="1765" width="1.1900%" height="15" fill="rgb(233,0,4)" fg:x="690" fg:w="504"/><text x="1.8792%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (504 samples, 1.19%)</title><rect x="1.6292%" y="1749" width="1.1900%" height="15" fill="rgb(235,30,7)" fg:x="690" fg:w="504"/><text x="1.8792%" y="1759.50"></text></g><g><title>std::panicking::try (504 samples, 1.19%)</title><rect x="1.6292%" y="1733" width="1.1900%" height="15" fill="rgb(250,79,13)" fg:x="690" fg:w="504"/><text x="1.8792%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (504 samples, 1.19%)</title><rect x="1.6292%" y="1717" width="1.1900%" height="15" fill="rgb(211,146,34)" fg:x="690" fg:w="504"/><text x="1.8792%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (504 samples, 1.19%)</title><rect x="1.6292%" y="1701" width="1.1900%" height="15" fill="rgb(228,22,38)" fg:x="690" fg:w="504"/><text x="1.8792%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (504 samples, 1.19%)</title><rect x="1.6292%" y="1685" width="1.1900%" height="15" fill="rgb(235,168,5)" fg:x="690" fg:w="504"/><text x="1.8792%" y="1695.50"></text></g><g><title>tokio::runtime::task::raw::poll (512 samples, 1.21%)</title><rect x="1.6174%" y="1813" width="1.2089%" height="15" fill="rgb(221,155,16)" fg:x="685" fg:w="512"/><text x="1.8674%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (510 samples, 1.20%)</title><rect x="1.6221%" y="1797" width="1.2042%" height="15" fill="rgb(215,215,53)" fg:x="687" fg:w="510"/><text x="1.8721%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (510 samples, 1.20%)</title><rect x="1.6221%" y="1781" width="1.2042%" height="15" fill="rgb(223,4,10)" fg:x="687" fg:w="510"/><text x="1.8721%" y="1791.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (5 samples, 0.01%)</title><rect x="2.8263%" y="1813" width="0.0118%" height="15" fill="rgb(234,103,6)" fg:x="1197" fg:w="5"/><text x="3.0763%" y="1823.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (5 samples, 0.01%)</title><rect x="2.8263%" y="1797" width="0.0118%" height="15" fill="rgb(227,97,0)" fg:x="1197" fg:w="5"/><text x="3.0763%" y="1807.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (8 samples, 0.02%)</title><rect x="2.8641%" y="1797" width="0.0189%" height="15" fill="rgb(234,150,53)" fg:x="1213" fg:w="8"/><text x="3.1141%" y="1807.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (8 samples, 0.02%)</title><rect x="2.8971%" y="1797" width="0.0189%" height="15" fill="rgb(228,201,54)" fg:x="1227" fg:w="8"/><text x="3.1471%" y="1807.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (32 samples, 0.08%)</title><rect x="2.8452%" y="1813" width="0.0756%" height="15" fill="rgb(222,22,37)" fg:x="1205" fg:w="32"/><text x="3.0952%" y="1823.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (5 samples, 0.01%)</title><rect x="2.9562%" y="1781" width="0.0118%" height="15" fill="rgb(237,53,32)" fg:x="1252" fg:w="5"/><text x="3.2062%" y="1791.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (15 samples, 0.04%)</title><rect x="2.9396%" y="1797" width="0.0354%" height="15" fill="rgb(233,25,53)" fg:x="1245" fg:w="15"/><text x="3.1896%" y="1807.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (23 samples, 0.05%)</title><rect x="2.9231%" y="1813" width="0.0543%" height="15" fill="rgb(210,40,34)" fg:x="1238" fg:w="23"/><text x="3.1731%" y="1823.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (7 samples, 0.02%)</title><rect x="2.9869%" y="1797" width="0.0165%" height="15" fill="rgb(241,220,44)" fg:x="1265" fg:w="7"/><text x="3.2369%" y="1807.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (16 samples, 0.04%)</title><rect x="2.9774%" y="1813" width="0.0378%" height="15" fill="rgb(235,28,35)" fg:x="1261" fg:w="16"/><text x="3.2274%" y="1823.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::{{closure}} (32 samples, 0.08%)</title><rect x="3.0152%" y="1813" width="0.0756%" height="15" fill="rgb(210,56,17)" fg:x="1277" fg:w="32"/><text x="3.2652%" y="1823.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::{{closure}}::{{closure}} (25 samples, 0.06%)</title><rect x="3.0317%" y="1797" width="0.0590%" height="15" fill="rgb(224,130,29)" fg:x="1284" fg:w="25"/><text x="3.2817%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (14 samples, 0.03%)</title><rect x="3.1309%" y="1797" width="0.0331%" height="15" fill="rgb(235,212,8)" fg:x="1326" fg:w="14"/><text x="3.3809%" y="1807.50"></text></g><g><title>alloc::vec::from_elem (19 samples, 0.04%)</title><rect x="3.1758%" y="1781" width="0.0449%" height="15" fill="rgb(223,33,50)" fg:x="1345" fg:w="19"/><text x="3.4258%" y="1791.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (19 samples, 0.04%)</title><rect x="3.1758%" y="1765" width="0.0449%" height="15" fill="rgb(219,149,13)" fg:x="1345" fg:w="19"/><text x="3.4258%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (19 samples, 0.04%)</title><rect x="3.1758%" y="1749" width="0.0449%" height="15" fill="rgb(250,156,29)" fg:x="1345" fg:w="19"/><text x="3.4258%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (19 samples, 0.04%)</title><rect x="3.1758%" y="1733" width="0.0449%" height="15" fill="rgb(216,193,19)" fg:x="1345" fg:w="19"/><text x="3.4258%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (19 samples, 0.04%)</title><rect x="3.1758%" y="1717" width="0.0449%" height="15" fill="rgb(216,135,14)" fg:x="1345" fg:w="19"/><text x="3.4258%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.04%)</title><rect x="3.1758%" y="1701" width="0.0449%" height="15" fill="rgb(241,47,5)" fg:x="1345" fg:w="19"/><text x="3.4258%" y="1711.50"></text></g><g><title>alloc::alloc::alloc_zeroed (19 samples, 0.04%)</title><rect x="3.1758%" y="1685" width="0.0449%" height="15" fill="rgb(233,42,35)" fg:x="1345" fg:w="19"/><text x="3.4258%" y="1695.50"></text></g><g><title>__rdl_alloc_zeroed (19 samples, 0.04%)</title><rect x="3.1758%" y="1669" width="0.0449%" height="15" fill="rgb(231,13,6)" fg:x="1345" fg:w="19"/><text x="3.4258%" y="1679.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (19 samples, 0.04%)</title><rect x="3.1758%" y="1653" width="0.0449%" height="15" fill="rgb(207,181,40)" fg:x="1345" fg:w="19"/><text x="3.4258%" y="1663.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (58 samples, 0.14%)</title><rect x="3.1026%" y="1813" width="0.1369%" height="15" fill="rgb(254,173,49)" fg:x="1314" fg:w="58"/><text x="3.3526%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (32 samples, 0.08%)</title><rect x="3.1640%" y="1797" width="0.0756%" height="15" fill="rgb(221,1,38)" fg:x="1340" fg:w="32"/><text x="3.4140%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_packet::{{closure}} (7 samples, 0.02%)</title><rect x="3.2230%" y="1781" width="0.0165%" height="15" fill="rgb(206,124,46)" fg:x="1365" fg:w="7"/><text x="3.4730%" y="1791.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to::{{closure}} (6 samples, 0.01%)</title><rect x="3.2253%" y="1765" width="0.0142%" height="15" fill="rgb(249,21,11)" fg:x="1366" fg:w="6"/><text x="3.4753%" y="1775.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}} (6 samples, 0.01%)</title><rect x="3.2253%" y="1749" width="0.0142%" height="15" fill="rgb(222,201,40)" fg:x="1366" fg:w="6"/><text x="3.4753%" y="1759.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (6 samples, 0.01%)</title><rect x="3.2253%" y="1733" width="0.0142%" height="15" fill="rgb(235,61,29)" fg:x="1366" fg:w="6"/><text x="3.4753%" y="1743.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}}::{{closure}} (6 samples, 0.01%)</title><rect x="3.2253%" y="1717" width="0.0142%" height="15" fill="rgb(219,207,3)" fg:x="1366" fg:w="6"/><text x="3.4753%" y="1727.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to (6 samples, 0.01%)</title><rect x="3.2253%" y="1701" width="0.0142%" height="15" fill="rgb(222,56,46)" fg:x="1366" fg:w="6"/><text x="3.4753%" y="1711.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (6 samples, 0.01%)</title><rect x="3.2253%" y="1685" width="0.0142%" height="15" fill="rgb(239,76,54)" fg:x="1366" fg:w="6"/><text x="3.4753%" y="1695.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (6 samples, 0.01%)</title><rect x="3.2253%" y="1669" width="0.0142%" height="15" fill="rgb(231,124,27)" fg:x="1366" fg:w="6"/><text x="3.4753%" y="1679.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to::{{closure}} (6 samples, 0.01%)</title><rect x="3.2253%" y="1653" width="0.0142%" height="15" fill="rgb(249,195,6)" fg:x="1366" fg:w="6"/><text x="3.4753%" y="1663.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (6 samples, 0.01%)</title><rect x="3.2253%" y="1637" width="0.0142%" height="15" fill="rgb(237,174,47)" fg:x="1366" fg:w="6"/><text x="3.4753%" y="1647.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (6 samples, 0.01%)</title><rect x="3.2253%" y="1621" width="0.0142%" height="15" fill="rgb(206,201,31)" fg:x="1366" fg:w="6"/><text x="3.4753%" y="1631.50"></text></g><g><title>std::sys::pal::unix::cvt (6 samples, 0.01%)</title><rect x="3.2253%" y="1605" width="0.0142%" height="15" fill="rgb(231,57,52)" fg:x="1366" fg:w="6"/><text x="3.4753%" y="1615.50"></text></g><g><title>[[heap]] (1,068 samples, 2.52%)</title><rect x="0.7390%" y="1829" width="2.5217%" height="15" fill="rgb(248,177,22)" fg:x="313" fg:w="1068"/><text x="0.9890%" y="1839.50">[[..</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (8 samples, 0.02%)</title><rect x="3.2419%" y="1813" width="0.0189%" height="15" fill="rgb(215,211,37)" fg:x="1373" fg:w="8"/><text x="3.4919%" y="1823.50"></text></g><g><title>uuid::rng::bytes (8 samples, 0.02%)</title><rect x="3.2419%" y="1797" width="0.0189%" height="15" fill="rgb(241,128,51)" fg:x="1373" fg:w="8"/><text x="3.4919%" y="1807.50"></text></g><g><title>rand::random (8 samples, 0.02%)</title><rect x="3.2419%" y="1781" width="0.0189%" height="15" fill="rgb(227,165,31)" fg:x="1373" fg:w="8"/><text x="3.4919%" y="1791.50"></text></g><g><title>rand::rng::Rng::gen (8 samples, 0.02%)</title><rect x="3.2419%" y="1765" width="0.0189%" height="15" fill="rgb(228,167,24)" fg:x="1373" fg:w="8"/><text x="3.4919%" y="1775.50"></text></g><g><title>rand::distributions::other::&lt;impl rand::distributions::distribution::Distribution&lt;[T: _]&gt; for rand::distributions::Standard&gt;::sample (8 samples, 0.02%)</title><rect x="3.2419%" y="1749" width="0.0189%" height="15" fill="rgb(228,143,12)" fg:x="1373" fg:w="8"/><text x="3.4919%" y="1759.50"></text></g><g><title>rand::rng::Rng::gen (8 samples, 0.02%)</title><rect x="3.2419%" y="1733" width="0.0189%" height="15" fill="rgb(249,149,8)" fg:x="1373" fg:w="8"/><text x="3.4919%" y="1743.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u8&gt; for rand::distributions::Standard&gt;::sample (8 samples, 0.02%)</title><rect x="3.2419%" y="1717" width="0.0189%" height="15" fill="rgb(243,35,44)" fg:x="1373" fg:w="8"/><text x="3.4919%" y="1727.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (8 samples, 0.02%)</title><rect x="3.2419%" y="1701" width="0.0189%" height="15" fill="rgb(246,89,9)" fg:x="1373" fg:w="8"/><text x="3.4919%" y="1711.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (8 samples, 0.02%)</title><rect x="3.2419%" y="1685" width="0.0189%" height="15" fill="rgb(233,213,13)" fg:x="1373" fg:w="8"/><text x="3.4919%" y="1695.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (8 samples, 0.02%)</title><rect x="3.2419%" y="1669" width="0.0189%" height="15" fill="rgb(233,141,41)" fg:x="1373" fg:w="8"/><text x="3.4919%" y="1679.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (7 samples, 0.02%)</title><rect x="3.2442%" y="1653" width="0.0165%" height="15" fill="rgb(239,167,4)" fg:x="1374" fg:w="7"/><text x="3.4942%" y="1663.50"></text></g><g><title>[[vdso]] (104 samples, 0.25%)</title><rect x="3.2608%" y="1829" width="0.2456%" height="15" fill="rgb(209,217,16)" fg:x="1381" fg:w="104"/><text x="3.5108%" y="1839.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (29 samples, 0.07%)</title><rect x="3.5181%" y="1813" width="0.0685%" height="15" fill="rgb(219,88,35)" fg:x="1490" fg:w="29"/><text x="3.7681%" y="1823.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="3.5701%" y="1797" width="0.0165%" height="15" fill="rgb(220,193,23)" fg:x="1512" fg:w="7"/><text x="3.8201%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.02%)</title><rect x="3.5701%" y="1781" width="0.0165%" height="15" fill="rgb(230,90,52)" fg:x="1512" fg:w="7"/><text x="3.8201%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.02%)</title><rect x="3.5701%" y="1765" width="0.0165%" height="15" fill="rgb(252,106,19)" fg:x="1512" fg:w="7"/><text x="3.8201%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.02%)</title><rect x="3.5701%" y="1749" width="0.0165%" height="15" fill="rgb(206,74,20)" fg:x="1512" fg:w="7"/><text x="3.8201%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="3.5866%" y="1813" width="0.0165%" height="15" fill="rgb(230,138,44)" fg:x="1519" fg:w="7"/><text x="3.8366%" y="1823.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.02%)</title><rect x="3.6669%" y="1781" width="0.0213%" height="15" fill="rgb(235,182,43)" fg:x="1553" fg:w="9"/><text x="3.9169%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (23 samples, 0.05%)</title><rect x="3.6504%" y="1797" width="0.0543%" height="15" fill="rgb(242,16,51)" fg:x="1546" fg:w="23"/><text x="3.9004%" y="1807.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.02%)</title><rect x="3.6881%" y="1781" width="0.0165%" height="15" fill="rgb(248,9,4)" fg:x="1562" fg:w="7"/><text x="3.9381%" y="1791.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.02%)</title><rect x="3.7047%" y="1797" width="0.0165%" height="15" fill="rgb(210,31,22)" fg:x="1569" fg:w="7"/><text x="3.9547%" y="1807.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52 samples, 0.12%)</title><rect x="3.6031%" y="1813" width="0.1228%" height="15" fill="rgb(239,54,39)" fg:x="1526" fg:w="52"/><text x="3.8531%" y="1823.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="3.7259%" y="1813" width="0.0189%" height="15" fill="rgb(230,99,41)" fg:x="1578" fg:w="8"/><text x="3.9759%" y="1823.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (5 samples, 0.01%)</title><rect x="3.7495%" y="1733" width="0.0118%" height="15" fill="rgb(253,106,12)" fg:x="1588" fg:w="5"/><text x="3.9995%" y="1743.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="3.7495%" y="1717" width="0.0118%" height="15" fill="rgb(213,46,41)" fg:x="1588" fg:w="5"/><text x="3.9995%" y="1727.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.02%)</title><rect x="3.7448%" y="1813" width="0.0213%" height="15" fill="rgb(215,133,35)" fg:x="1586" fg:w="9"/><text x="3.9948%" y="1823.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.02%)</title><rect x="3.7495%" y="1797" width="0.0165%" height="15" fill="rgb(213,28,5)" fg:x="1588" fg:w="7"/><text x="3.9995%" y="1807.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (7 samples, 0.02%)</title><rect x="3.7495%" y="1781" width="0.0165%" height="15" fill="rgb(215,77,49)" fg:x="1588" fg:w="7"/><text x="3.9995%" y="1791.50"></text></g><g><title>tokio::runtime::context::budget (7 samples, 0.02%)</title><rect x="3.7495%" y="1765" width="0.0165%" height="15" fill="rgb(248,100,22)" fg:x="1588" fg:w="7"/><text x="3.9995%" y="1775.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.02%)</title><rect x="3.7495%" y="1749" width="0.0165%" height="15" fill="rgb(208,67,9)" fg:x="1588" fg:w="7"/><text x="3.9995%" y="1759.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (35 samples, 0.08%)</title><rect x="3.7661%" y="1813" width="0.0826%" height="15" fill="rgb(219,133,21)" fg:x="1595" fg:w="35"/><text x="4.0161%" y="1823.50"></text></g><g><title>tokio::io::ready::Ready::intersection (9 samples, 0.02%)</title><rect x="3.8274%" y="1797" width="0.0213%" height="15" fill="rgb(246,46,29)" fg:x="1621" fg:w="9"/><text x="4.0774%" y="1807.50"></text></g><g><title>tokio::io::ready::Ready::from_interest (9 samples, 0.02%)</title><rect x="3.8274%" y="1781" width="0.0213%" height="15" fill="rgb(246,185,52)" fg:x="1621" fg:w="9"/><text x="4.0774%" y="1791.50"></text></g><g><title>tokio::io::interest::Interest::is_readable (8 samples, 0.02%)</title><rect x="3.8298%" y="1765" width="0.0189%" height="15" fill="rgb(252,136,11)" fg:x="1622" fg:w="8"/><text x="4.0798%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (6 samples, 0.01%)</title><rect x="4.0140%" y="1797" width="0.0142%" height="15" fill="rgb(219,138,53)" fg:x="1700" fg:w="6"/><text x="4.2640%" y="1807.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="4.0140%" y="1781" width="0.0142%" height="15" fill="rgb(211,51,23)" fg:x="1700" fg:w="6"/><text x="4.2640%" y="1791.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (44 samples, 0.10%)</title><rect x="4.0376%" y="1749" width="0.1039%" height="15" fill="rgb(247,221,28)" fg:x="1710" fg:w="44"/><text x="4.2876%" y="1759.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (44 samples, 0.10%)</title><rect x="4.0376%" y="1733" width="0.1039%" height="15" fill="rgb(251,222,45)" fg:x="1710" fg:w="44"/><text x="4.2876%" y="1743.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (52 samples, 0.12%)</title><rect x="4.0281%" y="1797" width="0.1228%" height="15" fill="rgb(217,162,53)" fg:x="1706" fg:w="52"/><text x="4.2781%" y="1807.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (49 samples, 0.12%)</title><rect x="4.0352%" y="1781" width="0.1157%" height="15" fill="rgb(229,93,14)" fg:x="1709" fg:w="49"/><text x="4.2852%" y="1791.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (49 samples, 0.12%)</title><rect x="4.0352%" y="1765" width="0.1157%" height="15" fill="rgb(209,67,49)" fg:x="1709" fg:w="49"/><text x="4.2852%" y="1775.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (129 samples, 0.30%)</title><rect x="3.8487%" y="1813" width="0.3046%" height="15" fill="rgb(213,87,29)" fg:x="1630" fg:w="129"/><text x="4.0987%" y="1823.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.02%)</title><rect x="4.2383%" y="1781" width="0.0165%" height="15" fill="rgb(205,151,52)" fg:x="1795" fg:w="7"/><text x="4.4883%" y="1791.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.02%)</title><rect x="4.2383%" y="1765" width="0.0165%" height="15" fill="rgb(253,215,39)" fg:x="1795" fg:w="7"/><text x="4.4883%" y="1775.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (46 samples, 0.11%)</title><rect x="4.1533%" y="1813" width="0.1086%" height="15" fill="rgb(221,220,41)" fg:x="1759" fg:w="46"/><text x="4.4033%" y="1823.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (18 samples, 0.04%)</title><rect x="4.2194%" y="1797" width="0.0425%" height="15" fill="rgb(218,133,21)" fg:x="1787" fg:w="18"/><text x="4.4694%" y="1807.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (6 samples, 0.01%)</title><rect x="4.2950%" y="1733" width="0.0142%" height="15" fill="rgb(221,193,43)" fg:x="1819" fg:w="6"/><text x="4.5450%" y="1743.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (6 samples, 0.01%)</title><rect x="4.2950%" y="1717" width="0.0142%" height="15" fill="rgb(240,128,52)" fg:x="1819" fg:w="6"/><text x="4.5450%" y="1727.50"></text></g><g><title>&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.05%)</title><rect x="4.2666%" y="1813" width="0.0543%" height="15" fill="rgb(253,114,12)" fg:x="1807" fg:w="23"/><text x="4.5166%" y="1823.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (23 samples, 0.05%)</title><rect x="4.2666%" y="1797" width="0.0543%" height="15" fill="rgb(215,223,47)" fg:x="1807" fg:w="23"/><text x="4.5166%" y="1807.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.03%)</title><rect x="4.2902%" y="1781" width="0.0307%" height="15" fill="rgb(248,225,23)" fg:x="1817" fg:w="13"/><text x="4.5402%" y="1791.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.03%)</title><rect x="4.2902%" y="1765" width="0.0307%" height="15" fill="rgb(250,108,0)" fg:x="1817" fg:w="13"/><text x="4.5402%" y="1775.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (11 samples, 0.03%)</title><rect x="4.2950%" y="1749" width="0.0260%" height="15" fill="rgb(228,208,7)" fg:x="1819" fg:w="11"/><text x="4.5450%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (5 samples, 0.01%)</title><rect x="4.3091%" y="1733" width="0.0118%" height="15" fill="rgb(244,45,10)" fg:x="1825" fg:w="5"/><text x="4.5591%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="4.3091%" y="1717" width="0.0118%" height="15" fill="rgb(207,125,25)" fg:x="1825" fg:w="5"/><text x="4.5591%" y="1727.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (22 samples, 0.05%)</title><rect x="4.3304%" y="1781" width="0.0519%" height="15" fill="rgb(210,195,18)" fg:x="1834" fg:w="22"/><text x="4.5804%" y="1791.50"></text></g><g><title>[profiling] (24 samples, 0.06%)</title><rect x="4.3280%" y="1797" width="0.0567%" height="15" fill="rgb(249,80,12)" fg:x="1833" fg:w="24"/><text x="4.5780%" y="1807.50"></text></g><g><title>&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash as core::fmt::Display&gt;::fmt (32 samples, 0.08%)</title><rect x="4.3209%" y="1813" width="0.0756%" height="15" fill="rgb(221,65,9)" fg:x="1830" fg:w="32"/><text x="4.5709%" y="1823.50"></text></g><g><title>[[vdso]] (359 samples, 0.85%)</title><rect x="4.3965%" y="1813" width="0.8477%" height="15" fill="rgb(235,49,36)" fg:x="1862" fg:w="359"/><text x="4.6465%" y="1823.50"></text></g><g><title>__GI___libc_free (47 samples, 0.11%)</title><rect x="5.2512%" y="1813" width="0.1110%" height="15" fill="rgb(225,32,20)" fg:x="2224" fg:w="47"/><text x="5.5012%" y="1823.50"></text></g><g><title>arena_for_chunk (9 samples, 0.02%)</title><rect x="5.3410%" y="1797" width="0.0213%" height="15" fill="rgb(215,141,46)" fg:x="2262" fg:w="9"/><text x="5.5910%" y="1807.50"></text></g><g><title>arena_for_chunk (8 samples, 0.02%)</title><rect x="5.3433%" y="1781" width="0.0189%" height="15" fill="rgb(250,160,47)" fg:x="2263" fg:w="8"/><text x="5.5933%" y="1791.50"></text></g><g><title>heap_for_ptr (8 samples, 0.02%)</title><rect x="5.3433%" y="1765" width="0.0189%" height="15" fill="rgb(216,222,40)" fg:x="2263" fg:w="8"/><text x="5.5933%" y="1775.50"></text></g><g><title>__GI___libc_malloc (48 samples, 0.11%)</title><rect x="5.3622%" y="1813" width="0.1133%" height="15" fill="rgb(234,217,39)" fg:x="2271" fg:w="48"/><text x="5.6122%" y="1823.50"></text></g><g><title>tcache_get (7 samples, 0.02%)</title><rect x="5.4590%" y="1797" width="0.0165%" height="15" fill="rgb(207,178,40)" fg:x="2312" fg:w="7"/><text x="5.7090%" y="1807.50"></text></g><g><title>__GI___lll_lock_wake_private (57 samples, 0.13%)</title><rect x="5.4944%" y="1813" width="0.1346%" height="15" fill="rgb(221,136,13)" fg:x="2327" fg:w="57"/><text x="5.7444%" y="1823.50"></text></g><g><title>__GI___pthread_disable_asynccancel (13 samples, 0.03%)</title><rect x="5.6290%" y="1813" width="0.0307%" height="15" fill="rgb(249,199,10)" fg:x="2384" fg:w="13"/><text x="5.8790%" y="1823.50"></text></g><g><title>__GI_getsockname (115 samples, 0.27%)</title><rect x="5.6621%" y="1813" width="0.2715%" height="15" fill="rgb(249,222,13)" fg:x="2398" fg:w="115"/><text x="5.9121%" y="1823.50"></text></g><g><title>__libc_recvfrom (167 samples, 0.39%)</title><rect x="5.9478%" y="1813" width="0.3943%" height="15" fill="rgb(244,185,38)" fg:x="2519" fg:w="167"/><text x="6.1978%" y="1823.50"></text></g><g><title>__libc_sendto (48 samples, 0.11%)</title><rect x="6.3421%" y="1813" width="0.1133%" height="15" fill="rgb(236,202,9)" fg:x="2686" fg:w="48"/><text x="6.5921%" y="1823.50"></text></g><g><title>__memcmp_evex_movbe (38 samples, 0.09%)</title><rect x="6.4554%" y="1813" width="0.0897%" height="15" fill="rgb(250,229,37)" fg:x="2734" fg:w="38"/><text x="6.7054%" y="1823.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (173 samples, 0.41%)</title><rect x="6.5451%" y="1813" width="0.4085%" height="15" fill="rgb(206,174,23)" fg:x="2772" fg:w="173"/><text x="6.7951%" y="1823.50"></text></g><g><title>__memset_avx512_unaligned_erms (53 samples, 0.13%)</title><rect x="6.9536%" y="1813" width="0.1251%" height="15" fill="rgb(211,33,43)" fg:x="2945" fg:w="53"/><text x="7.2036%" y="1823.50"></text></g><g><title>_int_free (70 samples, 0.17%)</title><rect x="7.0953%" y="1813" width="0.1653%" height="15" fill="rgb(245,58,50)" fg:x="3005" fg:w="70"/><text x="7.3453%" y="1823.50"></text></g><g><title>_int_malloc (151 samples, 0.36%)</title><rect x="7.2606%" y="1813" width="0.3565%" height="15" fill="rgb(244,68,36)" fg:x="3075" fg:w="151"/><text x="7.5106%" y="1823.50"></text></g><g><title>_int_memalign (29 samples, 0.07%)</title><rect x="7.6171%" y="1813" width="0.0685%" height="15" fill="rgb(232,229,15)" fg:x="3226" fg:w="29"/><text x="7.8671%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (11 samples, 0.03%)</title><rect x="7.6879%" y="1813" width="0.0260%" height="15" fill="rgb(254,30,23)" fg:x="3256" fg:w="11"/><text x="7.9379%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="7.7635%" y="1749" width="0.0118%" height="15" fill="rgb(235,160,14)" fg:x="3288" fg:w="5"/><text x="8.0135%" y="1759.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="7.7635%" y="1733" width="0.0118%" height="15" fill="rgb(212,155,44)" fg:x="3288" fg:w="5"/><text x="8.0135%" y="1743.50"></text></g><g><title>&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (15 samples, 0.04%)</title><rect x="7.7753%" y="1749" width="0.0354%" height="15" fill="rgb(226,2,50)" fg:x="3293" fg:w="15"/><text x="8.0253%" y="1759.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (15 samples, 0.04%)</title><rect x="7.7753%" y="1733" width="0.0354%" height="15" fill="rgb(234,177,6)" fg:x="3293" fg:w="15"/><text x="8.0253%" y="1743.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (15 samples, 0.04%)</title><rect x="7.7753%" y="1717" width="0.0354%" height="15" fill="rgb(217,24,9)" fg:x="3293" fg:w="15"/><text x="8.0253%" y="1727.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (15 samples, 0.04%)</title><rect x="7.7753%" y="1701" width="0.0354%" height="15" fill="rgb(220,13,46)" fg:x="3293" fg:w="15"/><text x="8.0253%" y="1711.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (15 samples, 0.04%)</title><rect x="7.7753%" y="1685" width="0.0354%" height="15" fill="rgb(239,221,27)" fg:x="3293" fg:w="15"/><text x="8.0253%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (43 samples, 0.10%)</title><rect x="7.7139%" y="1813" width="0.1015%" height="15" fill="rgb(222,198,25)" fg:x="3267" fg:w="43"/><text x="7.9639%" y="1823.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (40 samples, 0.09%)</title><rect x="7.7210%" y="1797" width="0.0944%" height="15" fill="rgb(211,99,13)" fg:x="3270" fg:w="40"/><text x="7.9710%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (35 samples, 0.08%)</title><rect x="7.7328%" y="1781" width="0.0826%" height="15" fill="rgb(232,111,31)" fg:x="3275" fg:w="35"/><text x="7.9828%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (35 samples, 0.08%)</title><rect x="7.7328%" y="1765" width="0.0826%" height="15" fill="rgb(245,82,37)" fg:x="3275" fg:w="35"/><text x="7.9828%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.03%)</title><rect x="7.8155%" y="1813" width="0.0260%" height="15" fill="rgb(227,149,46)" fg:x="3310" fg:w="11"/><text x="8.0655%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.01%)</title><rect x="7.8296%" y="1797" width="0.0118%" height="15" fill="rgb(218,36,50)" fg:x="3316" fg:w="5"/><text x="8.0796%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.04%)</title><rect x="7.8603%" y="1813" width="0.0354%" height="15" fill="rgb(226,80,48)" fg:x="3329" fg:w="15"/><text x="8.1103%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.03%)</title><rect x="7.8698%" y="1797" width="0.0260%" height="15" fill="rgb(238,224,15)" fg:x="3333" fg:w="11"/><text x="8.1198%" y="1807.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.04%)</title><rect x="7.8981%" y="1813" width="0.0449%" height="15" fill="rgb(241,136,10)" fg:x="3345" fg:w="19"/><text x="8.1481%" y="1823.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="7.9713%" y="1797" width="0.0165%" height="15" fill="rgb(208,32,45)" fg:x="3376" fg:w="7"/><text x="8.2213%" y="1807.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="7.9713%" y="1781" width="0.0165%" height="15" fill="rgb(207,135,9)" fg:x="3376" fg:w="7"/><text x="8.2213%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="7.9713%" y="1765" width="0.0165%" height="15" fill="rgb(206,86,44)" fg:x="3376" fg:w="7"/><text x="8.2213%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.01%)</title><rect x="7.9760%" y="1749" width="0.0118%" height="15" fill="rgb(245,177,15)" fg:x="3378" fg:w="5"/><text x="8.2260%" y="1759.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="7.9713%" y="1813" width="0.0213%" height="15" fill="rgb(206,64,50)" fg:x="3376" fg:w="9"/><text x="8.2213%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;aquatic_udp_protocol::response::Response&gt; (27 samples, 0.06%)</title><rect x="7.9925%" y="1813" width="0.0638%" height="15" fill="rgb(234,36,40)" fg:x="3385" fg:w="27"/><text x="8.2425%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::udp::UdpSocket::send_to&lt;&amp;core::net::socket_addr::SocketAddr&gt;::{{closure}}&gt; (6 samples, 0.01%)</title><rect x="8.0563%" y="1813" width="0.0142%" height="15" fill="rgb(213,64,8)" fg:x="3412" fg:w="6"/><text x="8.3063%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}}&gt;&gt; (41 samples, 0.10%)</title><rect x="8.0705%" y="1813" width="0.0968%" height="15" fill="rgb(210,75,36)" fg:x="3418" fg:w="41"/><text x="8.3205%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}}&gt; (8 samples, 0.02%)</title><rect x="8.1885%" y="1813" width="0.0189%" height="15" fill="rgb(229,88,21)" fg:x="3468" fg:w="8"/><text x="8.4385%" y="1823.50"></text></g><g><title>malloc_consolidate (35 samples, 0.08%)</title><rect x="8.2192%" y="1813" width="0.0826%" height="15" fill="rgb(252,204,47)" fg:x="3481" fg:w="35"/><text x="8.4692%" y="1823.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (5 samples, 0.01%)</title><rect x="8.3019%" y="1813" width="0.0118%" height="15" fill="rgb(208,77,27)" fg:x="3516" fg:w="5"/><text x="8.5519%" y="1823.50"></text></g><g><title>rand_chacha::guts::ChaCha::pos64 (5 samples, 0.01%)</title><rect x="8.3302%" y="1765" width="0.0118%" height="15" fill="rgb(221,76,26)" fg:x="3528" fg:w="5"/><text x="8.5802%" y="1775.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (5 samples, 0.01%)</title><rect x="8.3420%" y="1749" width="0.0118%" height="15" fill="rgb(225,139,18)" fg:x="3533" fg:w="5"/><text x="8.5920%" y="1759.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (5 samples, 0.01%)</title><rect x="8.3420%" y="1733" width="0.0118%" height="15" fill="rgb(230,137,11)" fg:x="3533" fg:w="5"/><text x="8.5920%" y="1743.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (5 samples, 0.01%)</title><rect x="8.3420%" y="1717" width="0.0118%" height="15" fill="rgb(212,28,1)" fg:x="3533" fg:w="5"/><text x="8.5920%" y="1727.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (5 samples, 0.01%)</title><rect x="8.3420%" y="1701" width="0.0118%" height="15" fill="rgb(248,164,17)" fg:x="3533" fg:w="5"/><text x="8.5920%" y="1711.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (8 samples, 0.02%)</title><rect x="8.3632%" y="1717" width="0.0189%" height="15" fill="rgb(222,171,42)" fg:x="3542" fg:w="8"/><text x="8.6132%" y="1727.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (10 samples, 0.02%)</title><rect x="8.3632%" y="1749" width="0.0236%" height="15" fill="rgb(243,84,45)" fg:x="3542" fg:w="10"/><text x="8.6132%" y="1759.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (10 samples, 0.02%)</title><rect x="8.3632%" y="1733" width="0.0236%" height="15" fill="rgb(252,49,23)" fg:x="3542" fg:w="10"/><text x="8.6132%" y="1743.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (6 samples, 0.01%)</title><rect x="8.3869%" y="1749" width="0.0142%" height="15" fill="rgb(215,19,7)" fg:x="3552" fg:w="6"/><text x="8.6369%" y="1759.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (6 samples, 0.01%)</title><rect x="8.3869%" y="1733" width="0.0142%" height="15" fill="rgb(238,81,41)" fg:x="3552" fg:w="6"/><text x="8.6369%" y="1743.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.01%)</title><rect x="8.3869%" y="1717" width="0.0142%" height="15" fill="rgb(210,199,37)" fg:x="3552" fg:w="6"/><text x="8.6369%" y="1727.50"></text></g><g><title>rand_chacha::guts::round (29 samples, 0.07%)</title><rect x="8.3420%" y="1765" width="0.0685%" height="15" fill="rgb(244,192,49)" fg:x="3533" fg:w="29"/><text x="8.5920%" y="1775.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (43 samples, 0.10%)</title><rect x="8.3137%" y="1813" width="0.1015%" height="15" fill="rgb(226,211,11)" fg:x="3521" fg:w="43"/><text x="8.5637%" y="1823.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (43 samples, 0.10%)</title><rect x="8.3137%" y="1797" width="0.1015%" height="15" fill="rgb(236,162,54)" fg:x="3521" fg:w="43"/><text x="8.5637%" y="1807.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (43 samples, 0.10%)</title><rect x="8.3137%" y="1781" width="0.1015%" height="15" fill="rgb(220,229,9)" fg:x="3521" fg:w="43"/><text x="8.5637%" y="1791.50"></text></g><g><title>tokio::runtime::context::with_scheduler (18 samples, 0.04%)</title><rect x="8.4364%" y="1813" width="0.0425%" height="15" fill="rgb(250,87,22)" fg:x="3573" fg:w="18"/><text x="8.6864%" y="1823.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="8.4648%" y="1797" width="0.0142%" height="15" fill="rgb(239,43,17)" fg:x="3585" fg:w="6"/><text x="8.7148%" y="1807.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (6 samples, 0.01%)</title><rect x="8.4648%" y="1781" width="0.0142%" height="15" fill="rgb(231,177,25)" fg:x="3585" fg:w="6"/><text x="8.7148%" y="1791.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="8.4648%" y="1765" width="0.0142%" height="15" fill="rgb(219,179,1)" fg:x="3585" fg:w="6"/><text x="8.7148%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (6 samples, 0.01%)</title><rect x="8.4648%" y="1749" width="0.0142%" height="15" fill="rgb(238,219,53)" fg:x="3585" fg:w="6"/><text x="8.7148%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (6 samples, 0.01%)</title><rect x="8.4648%" y="1733" width="0.0142%" height="15" fill="rgb(232,167,36)" fg:x="3585" fg:w="6"/><text x="8.7148%" y="1743.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (7 samples, 0.02%)</title><rect x="8.4789%" y="1813" width="0.0165%" height="15" fill="rgb(244,19,51)" fg:x="3591" fg:w="7"/><text x="8.7289%" y="1823.50"></text></g><g><title>[unknown] (47 samples, 0.11%)</title><rect x="8.7032%" y="1797" width="0.1110%" height="15" fill="rgb(224,6,22)" fg:x="3686" fg:w="47"/><text x="8.9532%" y="1807.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (213 samples, 0.50%)</title><rect x="8.4955%" y="1813" width="0.5029%" height="15" fill="rgb(224,145,5)" fg:x="3598" fg:w="213"/><text x="8.7455%" y="1823.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (78 samples, 0.18%)</title><rect x="8.8142%" y="1797" width="0.1842%" height="15" fill="rgb(234,130,49)" fg:x="3733" fg:w="78"/><text x="9.0642%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (28 samples, 0.07%)</title><rect x="8.9323%" y="1781" width="0.0661%" height="15" fill="rgb(254,6,2)" fg:x="3783" fg:w="28"/><text x="9.1823%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (76 samples, 0.18%)</title><rect x="8.9984%" y="1813" width="0.1794%" height="15" fill="rgb(208,96,46)" fg:x="3811" fg:w="76"/><text x="9.2484%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (66 samples, 0.16%)</title><rect x="9.0220%" y="1797" width="0.1558%" height="15" fill="rgb(239,3,39)" fg:x="3821" fg:w="66"/><text x="9.2720%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (65 samples, 0.15%)</title><rect x="9.0244%" y="1781" width="0.1535%" height="15" fill="rgb(233,210,1)" fg:x="3822" fg:w="65"/><text x="9.2744%" y="1791.50"></text></g><g><title>core::sync::atomic::atomic_add (65 samples, 0.15%)</title><rect x="9.0244%" y="1765" width="0.1535%" height="15" fill="rgb(244,137,37)" fg:x="3822" fg:w="65"/><text x="9.2744%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (5 samples, 0.01%)</title><rect x="9.1896%" y="1813" width="0.0118%" height="15" fill="rgb(240,136,2)" fg:x="3892" fg:w="5"/><text x="9.4396%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (5 samples, 0.01%)</title><rect x="9.1896%" y="1797" width="0.0118%" height="15" fill="rgb(239,18,37)" fg:x="3892" fg:w="5"/><text x="9.4396%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (5 samples, 0.01%)</title><rect x="9.1896%" y="1781" width="0.0118%" height="15" fill="rgb(218,185,22)" fg:x="3892" fg:w="5"/><text x="9.4396%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (5 samples, 0.01%)</title><rect x="9.1896%" y="1765" width="0.0118%" height="15" fill="rgb(225,218,4)" fg:x="3892" fg:w="5"/><text x="9.4396%" y="1775.50"></text></g><g><title>tokio::runtime::coop::budget (5 samples, 0.01%)</title><rect x="9.2156%" y="1797" width="0.0118%" height="15" fill="rgb(230,182,32)" fg:x="3903" fg:w="5"/><text x="9.4656%" y="1807.50"></text></g><g><title>tokio::runtime::coop::with_budget (5 samples, 0.01%)</title><rect x="9.2156%" y="1781" width="0.0118%" height="15" fill="rgb(242,56,43)" fg:x="3903" fg:w="5"/><text x="9.4656%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (7 samples, 0.02%)</title><rect x="9.2274%" y="1797" width="0.0165%" height="15" fill="rgb(233,99,24)" fg:x="3908" fg:w="7"/><text x="9.4774%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (21 samples, 0.05%)</title><rect x="9.2015%" y="1813" width="0.0496%" height="15" fill="rgb(234,209,42)" fg:x="3897" fg:w="21"/><text x="9.4515%" y="1823.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (9 samples, 0.02%)</title><rect x="9.3030%" y="1733" width="0.0213%" height="15" fill="rgb(227,7,12)" fg:x="3940" fg:w="9"/><text x="9.5530%" y="1743.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="9.3030%" y="1717" width="0.0213%" height="15" fill="rgb(245,203,43)" fg:x="3940" fg:w="9"/><text x="9.5530%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (10 samples, 0.02%)</title><rect x="9.3030%" y="1797" width="0.0236%" height="15" fill="rgb(238,205,33)" fg:x="3940" fg:w="10"/><text x="9.5530%" y="1807.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="9.3030%" y="1781" width="0.0236%" height="15" fill="rgb(231,56,7)" fg:x="3940" fg:w="10"/><text x="9.5530%" y="1791.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (10 samples, 0.02%)</title><rect x="9.3030%" y="1765" width="0.0236%" height="15" fill="rgb(244,186,29)" fg:x="3940" fg:w="10"/><text x="9.5530%" y="1775.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.02%)</title><rect x="9.3030%" y="1749" width="0.0236%" height="15" fill="rgb(234,111,31)" fg:x="3940" fg:w="10"/><text x="9.5530%" y="1759.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (11 samples, 0.03%)</title><rect x="9.3266%" y="1797" width="0.0260%" height="15" fill="rgb(241,149,10)" fg:x="3950" fg:w="11"/><text x="9.5766%" y="1807.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (8 samples, 0.02%)</title><rect x="9.3337%" y="1781" width="0.0189%" height="15" fill="rgb(249,206,44)" fg:x="3953" fg:w="8"/><text x="9.5837%" y="1791.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (45 samples, 0.11%)</title><rect x="9.2534%" y="1813" width="0.1063%" height="15" fill="rgb(251,153,30)" fg:x="3919" fg:w="45"/><text x="9.5034%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::sharded_list::ShardGuard&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt; (8 samples, 0.02%)</title><rect x="9.4541%" y="1781" width="0.0189%" height="15" fill="rgb(239,152,38)" fg:x="4004" fg:w="8"/><text x="9.7041%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="9.4541%" y="1765" width="0.0189%" height="15" fill="rgb(249,139,47)" fg:x="4004" fg:w="8"/><text x="9.7041%" y="1775.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="9.4541%" y="1749" width="0.0189%" height="15" fill="rgb(244,64,35)" fg:x="4004" fg:w="8"/><text x="9.7041%" y="1759.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::pointers (5 samples, 0.01%)</title><rect x="9.4966%" y="1765" width="0.0118%" height="15" fill="rgb(216,46,15)" fg:x="4022" fg:w="5"/><text x="9.7466%" y="1775.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (5 samples, 0.01%)</title><rect x="9.4966%" y="1749" width="0.0118%" height="15" fill="rgb(250,74,19)" fg:x="4022" fg:w="5"/><text x="9.7466%" y="1759.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (37 samples, 0.09%)</title><rect x="9.4423%" y="1797" width="0.0874%" height="15" fill="rgb(249,42,33)" fg:x="3999" fg:w="37"/><text x="9.6923%" y="1807.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (20 samples, 0.05%)</title><rect x="9.4824%" y="1781" width="0.0472%" height="15" fill="rgb(242,149,17)" fg:x="4016" fg:w="20"/><text x="9.7324%" y="1791.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (98 samples, 0.23%)</title><rect x="9.3691%" y="1813" width="0.2314%" height="15" fill="rgb(244,29,21)" fg:x="3968" fg:w="98"/><text x="9.6191%" y="1823.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (30 samples, 0.07%)</title><rect x="9.5297%" y="1797" width="0.0708%" height="15" fill="rgb(220,130,37)" fg:x="4036" fg:w="30"/><text x="9.7797%" y="1807.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (30 samples, 0.07%)</title><rect x="9.5297%" y="1781" width="0.0708%" height="15" fill="rgb(211,67,2)" fg:x="4036" fg:w="30"/><text x="9.7797%" y="1791.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.07%)</title><rect x="9.5297%" y="1765" width="0.0708%" height="15" fill="rgb(235,68,52)" fg:x="4036" fg:w="30"/><text x="9.7797%" y="1775.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.07%)</title><rect x="9.5297%" y="1749" width="0.0708%" height="15" fill="rgb(246,142,3)" fg:x="4036" fg:w="30"/><text x="9.7797%" y="1759.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (30 samples, 0.07%)</title><rect x="9.5297%" y="1733" width="0.0708%" height="15" fill="rgb(241,25,7)" fg:x="4036" fg:w="30"/><text x="9.7797%" y="1743.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (30 samples, 0.07%)</title><rect x="9.5297%" y="1717" width="0.0708%" height="15" fill="rgb(242,119,39)" fg:x="4036" fg:w="30"/><text x="9.7797%" y="1727.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.07%)</title><rect x="9.5297%" y="1701" width="0.0708%" height="15" fill="rgb(241,98,45)" fg:x="4036" fg:w="30"/><text x="9.7797%" y="1711.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (7 samples, 0.02%)</title><rect x="9.6076%" y="1813" width="0.0165%" height="15" fill="rgb(254,28,30)" fg:x="4069" fg:w="7"/><text x="9.8576%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (5 samples, 0.01%)</title><rect x="9.6123%" y="1797" width="0.0118%" height="15" fill="rgb(241,142,54)" fg:x="4071" fg:w="5"/><text x="9.8623%" y="1807.50"></text></g><g><title>tokio::runtime::task::state::State::unset_join_interested (5 samples, 0.01%)</title><rect x="9.6123%" y="1781" width="0.0118%" height="15" fill="rgb(222,85,15)" fg:x="4071" fg:w="5"/><text x="9.8623%" y="1791.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (5 samples, 0.01%)</title><rect x="9.6123%" y="1765" width="0.0118%" height="15" fill="rgb(210,85,47)" fg:x="4071" fg:w="5"/><text x="9.8623%" y="1775.50"></text></g><g><title>tokio::runtime::task::state::State::load (5 samples, 0.01%)</title><rect x="9.6123%" y="1749" width="0.0118%" height="15" fill="rgb(224,206,25)" fg:x="4071" fg:w="5"/><text x="9.8623%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.01%)</title><rect x="9.6123%" y="1733" width="0.0118%" height="15" fill="rgb(243,201,19)" fg:x="4071" fg:w="5"/><text x="9.8623%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="9.6123%" y="1717" width="0.0118%" height="15" fill="rgb(236,59,4)" fg:x="4071" fg:w="5"/><text x="9.8623%" y="1727.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (7 samples, 0.02%)</title><rect x="9.6383%" y="1429" width="0.0165%" height="15" fill="rgb(254,179,45)" fg:x="4082" fg:w="7"/><text x="9.8883%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (6 samples, 0.01%)</title><rect x="9.6406%" y="1413" width="0.0142%" height="15" fill="rgb(226,14,10)" fg:x="4083" fg:w="6"/><text x="9.8906%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (6 samples, 0.01%)</title><rect x="9.6406%" y="1397" width="0.0142%" height="15" fill="rgb(244,27,41)" fg:x="4083" fg:w="6"/><text x="9.8906%" y="1407.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.05%)</title><rect x="9.6359%" y="1621" width="0.0519%" height="15" fill="rgb(235,35,32)" fg:x="4081" fg:w="22"/><text x="9.8859%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (22 samples, 0.05%)</title><rect x="9.6359%" y="1605" width="0.0519%" height="15" fill="rgb(218,68,31)" fg:x="4081" fg:w="22"/><text x="9.8859%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (22 samples, 0.05%)</title><rect x="9.6359%" y="1589" width="0.0519%" height="15" fill="rgb(207,120,37)" fg:x="4081" fg:w="22"/><text x="9.8859%" y="1599.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (22 samples, 0.05%)</title><rect x="9.6359%" y="1573" width="0.0519%" height="15" fill="rgb(227,98,0)" fg:x="4081" fg:w="22"/><text x="9.8859%" y="1583.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (22 samples, 0.05%)</title><rect x="9.6359%" y="1557" width="0.0519%" height="15" fill="rgb(207,7,3)" fg:x="4081" fg:w="22"/><text x="9.8859%" y="1567.50"></text></g><g><title>tokio::runtime::context::set_scheduler (22 samples, 0.05%)</title><rect x="9.6359%" y="1541" width="0.0519%" height="15" fill="rgb(206,98,19)" fg:x="4081" fg:w="22"/><text x="9.8859%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.05%)</title><rect x="9.6359%" y="1525" width="0.0519%" height="15" fill="rgb(217,5,26)" fg:x="4081" fg:w="22"/><text x="9.8859%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.05%)</title><rect x="9.6359%" y="1509" width="0.0519%" height="15" fill="rgb(235,190,38)" fg:x="4081" fg:w="22"/><text x="9.8859%" y="1519.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (22 samples, 0.05%)</title><rect x="9.6359%" y="1493" width="0.0519%" height="15" fill="rgb(247,86,24)" fg:x="4081" fg:w="22"/><text x="9.8859%" y="1503.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (22 samples, 0.05%)</title><rect x="9.6359%" y="1477" width="0.0519%" height="15" fill="rgb(205,101,16)" fg:x="4081" fg:w="22"/><text x="9.8859%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (22 samples, 0.05%)</title><rect x="9.6359%" y="1461" width="0.0519%" height="15" fill="rgb(246,168,33)" fg:x="4081" fg:w="22"/><text x="9.8859%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (22 samples, 0.05%)</title><rect x="9.6359%" y="1445" width="0.0519%" height="15" fill="rgb(231,114,1)" fg:x="4081" fg:w="22"/><text x="9.8859%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (11 samples, 0.03%)</title><rect x="9.6619%" y="1429" width="0.0260%" height="15" fill="rgb(207,184,53)" fg:x="4092" fg:w="11"/><text x="9.9119%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (8 samples, 0.02%)</title><rect x="9.6690%" y="1413" width="0.0189%" height="15" fill="rgb(224,95,51)" fg:x="4095" fg:w="8"/><text x="9.9190%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (7 samples, 0.02%)</title><rect x="9.6713%" y="1397" width="0.0165%" height="15" fill="rgb(212,188,45)" fg:x="4096" fg:w="7"/><text x="9.9213%" y="1407.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (24 samples, 0.06%)</title><rect x="9.6359%" y="1653" width="0.0567%" height="15" fill="rgb(223,154,38)" fg:x="4081" fg:w="24"/><text x="9.8859%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (24 samples, 0.06%)</title><rect x="9.6359%" y="1637" width="0.0567%" height="15" fill="rgb(251,22,52)" fg:x="4081" fg:w="24"/><text x="9.8859%" y="1647.50"></text></g><g><title>tokio::runtime::task::raw::poll (30 samples, 0.07%)</title><rect x="9.6241%" y="1813" width="0.0708%" height="15" fill="rgb(229,209,22)" fg:x="4076" fg:w="30"/><text x="9.8741%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (25 samples, 0.06%)</title><rect x="9.6359%" y="1797" width="0.0590%" height="15" fill="rgb(234,138,34)" fg:x="4081" fg:w="25"/><text x="9.8859%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (25 samples, 0.06%)</title><rect x="9.6359%" y="1781" width="0.0590%" height="15" fill="rgb(212,95,11)" fg:x="4081" fg:w="25"/><text x="9.8859%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (25 samples, 0.06%)</title><rect x="9.6359%" y="1765" width="0.0590%" height="15" fill="rgb(240,179,47)" fg:x="4081" fg:w="25"/><text x="9.8859%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.06%)</title><rect x="9.6359%" y="1749" width="0.0590%" height="15" fill="rgb(240,163,11)" fg:x="4081" fg:w="25"/><text x="9.8859%" y="1759.50"></text></g><g><title>std::panicking::try (25 samples, 0.06%)</title><rect x="9.6359%" y="1733" width="0.0590%" height="15" fill="rgb(236,37,12)" fg:x="4081" fg:w="25"/><text x="9.8859%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.06%)</title><rect x="9.6359%" y="1717" width="0.0590%" height="15" fill="rgb(232,164,16)" fg:x="4081" fg:w="25"/><text x="9.8859%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.06%)</title><rect x="9.6359%" y="1701" width="0.0590%" height="15" fill="rgb(244,205,15)" fg:x="4081" fg:w="25"/><text x="9.8859%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (25 samples, 0.06%)</title><rect x="9.6359%" y="1685" width="0.0590%" height="15" fill="rgb(223,117,47)" fg:x="4081" fg:w="25"/><text x="9.8859%" y="1695.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (25 samples, 0.06%)</title><rect x="9.6359%" y="1669" width="0.0590%" height="15" fill="rgb(244,107,35)" fg:x="4081" fg:w="25"/><text x="9.8859%" y="1679.50"></text></g><g><title>tokio::runtime::task::raw::schedule (5 samples, 0.01%)</title><rect x="9.6949%" y="1813" width="0.0118%" height="15" fill="rgb(205,140,8)" fg:x="4106" fg:w="5"/><text x="9.9449%" y="1823.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (13 samples, 0.03%)</title><rect x="9.7067%" y="1813" width="0.0307%" height="15" fill="rgb(228,84,46)" fg:x="4111" fg:w="13"/><text x="9.9567%" y="1823.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (13 samples, 0.03%)</title><rect x="9.7067%" y="1797" width="0.0307%" height="15" fill="rgb(254,188,9)" fg:x="4111" fg:w="13"/><text x="9.9567%" y="1807.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (6 samples, 0.01%)</title><rect x="9.7374%" y="1813" width="0.0142%" height="15" fill="rgb(206,112,54)" fg:x="4124" fg:w="6"/><text x="9.9874%" y="1823.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (6 samples, 0.01%)</title><rect x="9.7374%" y="1797" width="0.0142%" height="15" fill="rgb(216,84,49)" fg:x="4124" fg:w="6"/><text x="9.9874%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.01%)</title><rect x="9.7374%" y="1781" width="0.0142%" height="15" fill="rgb(214,194,35)" fg:x="4124" fg:w="6"/><text x="9.9874%" y="1791.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.01%)</title><rect x="9.7374%" y="1765" width="0.0142%" height="15" fill="rgb(249,28,3)" fg:x="4124" fg:w="6"/><text x="9.9874%" y="1775.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (12 samples, 0.03%)</title><rect x="9.7516%" y="1813" width="0.0283%" height="15" fill="rgb(222,56,52)" fg:x="4130" fg:w="12"/><text x="10.0016%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (12 samples, 0.03%)</title><rect x="9.7516%" y="1797" width="0.0283%" height="15" fill="rgb(245,217,50)" fg:x="4130" fg:w="12"/><text x="10.0016%" y="1807.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (7 samples, 0.02%)</title><rect x="9.7634%" y="1781" width="0.0165%" height="15" fill="rgb(213,201,24)" fg:x="4135" fg:w="7"/><text x="10.0134%" y="1791.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (7 samples, 0.02%)</title><rect x="9.7634%" y="1765" width="0.0165%" height="15" fill="rgb(248,116,28)" fg:x="4135" fg:w="7"/><text x="10.0134%" y="1775.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (10 samples, 0.02%)</title><rect x="9.7823%" y="1813" width="0.0236%" height="15" fill="rgb(219,72,43)" fg:x="4143" fg:w="10"/><text x="10.0323%" y="1823.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (12 samples, 0.03%)</title><rect x="9.8106%" y="1797" width="0.0283%" height="15" fill="rgb(209,138,14)" fg:x="4155" fg:w="12"/><text x="10.0606%" y="1807.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (17 samples, 0.04%)</title><rect x="9.8059%" y="1813" width="0.0401%" height="15" fill="rgb(222,18,33)" fg:x="4153" fg:w="17"/><text x="10.0559%" y="1823.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (13 samples, 0.03%)</title><rect x="9.8461%" y="1813" width="0.0307%" height="15" fill="rgb(213,199,7)" fg:x="4170" fg:w="13"/><text x="10.0961%" y="1823.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::{{closure}} (17 samples, 0.04%)</title><rect x="9.8767%" y="1813" width="0.0401%" height="15" fill="rgb(250,110,10)" fg:x="4183" fg:w="17"/><text x="10.1267%" y="1823.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::{{closure}}::{{closure}} (7 samples, 0.02%)</title><rect x="9.9004%" y="1797" width="0.0165%" height="15" fill="rgb(248,123,6)" fg:x="4193" fg:w="7"/><text x="10.1504%" y="1807.50"></text></g><g><title>torrust_tracker::core::torrent::Entry::get_stats (15 samples, 0.04%)</title><rect x="9.9547%" y="1813" width="0.0354%" height="15" fill="rgb(206,91,31)" fg:x="4216" fg:w="15"/><text x="10.2047%" y="1823.50"></text></g><g><title>torrust_tracker::core::torrent::Entry::insert_or_update_peer (7 samples, 0.02%)</title><rect x="9.9901%" y="1813" width="0.0165%" height="15" fill="rgb(211,154,13)" fg:x="4231" fg:w="7"/><text x="10.2401%" y="1823.50"></text></g><g><title>torrust_tracker::core::torrent::repository::RepositoryAsyncSingle::get_torrents::{{closure}} (47 samples, 0.11%)</title><rect x="10.0066%" y="1813" width="0.1110%" height="15" fill="rgb(225,148,7)" fg:x="4238" fg:w="47"/><text x="10.2566%" y="1823.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}} (34 samples, 0.08%)</title><rect x="10.0373%" y="1797" width="0.0803%" height="15" fill="rgb(220,160,43)" fg:x="4251" fg:w="34"/><text x="10.2873%" y="1807.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}}::{{closure}} (30 samples, 0.07%)</title><rect x="10.0468%" y="1781" width="0.0708%" height="15" fill="rgb(213,52,39)" fg:x="4255" fg:w="30"/><text x="10.2968%" y="1791.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.02%)</title><rect x="10.1270%" y="1797" width="0.0189%" height="15" fill="rgb(243,137,7)" fg:x="4289" fg:w="8"/><text x="10.3770%" y="1807.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.02%)</title><rect x="10.1270%" y="1781" width="0.0189%" height="15" fill="rgb(230,79,13)" fg:x="4289" fg:w="8"/><text x="10.3770%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.02%)</title><rect x="10.1270%" y="1765" width="0.0189%" height="15" fill="rgb(247,105,23)" fg:x="4289" fg:w="8"/><text x="10.3770%" y="1775.50"></text></g><g><title>&lt;core::time::Duration as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="10.1459%" y="1781" width="0.0165%" height="15" fill="rgb(223,179,41)" fg:x="4297" fg:w="7"/><text x="10.3959%" y="1791.50"></text></g><g><title>&lt;torrust_tracker::shared::clock::time_extent::TimeExtent as core::hash::Hash&gt;::hash (9 samples, 0.02%)</title><rect x="10.1459%" y="1797" width="0.0213%" height="15" fill="rgb(218,9,34)" fg:x="4297" fg:w="9"/><text x="10.3959%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (24 samples, 0.06%)</title><rect x="10.1176%" y="1813" width="0.0567%" height="15" fill="rgb(222,106,8)" fg:x="4285" fg:w="24"/><text x="10.3676%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::peer_builder::from_request (5 samples, 0.01%)</title><rect x="10.1790%" y="1813" width="0.0118%" height="15" fill="rgb(211,220,0)" fg:x="4311" fg:w="5"/><text x="10.4290%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::request::AnnounceWrapper::new (20 samples, 0.05%)</title><rect x="10.1908%" y="1813" width="0.0472%" height="15" fill="rgb(229,52,16)" fg:x="4316" fg:w="20"/><text x="10.4408%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_request::{{closure}} (16 samples, 0.04%)</title><rect x="10.2380%" y="1813" width="0.0378%" height="15" fill="rgb(212,155,18)" fg:x="4336" fg:w="16"/><text x="10.4880%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::udp::UdpSocket&gt;&gt; (7 samples, 0.02%)</title><rect x="10.3395%" y="1797" width="0.0165%" height="15" fill="rgb(242,21,14)" fg:x="4379" fg:w="7"/><text x="10.5895%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="10.3395%" y="1781" width="0.0165%" height="15" fill="rgb(222,19,48)" fg:x="4379" fg:w="7"/><text x="10.5895%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker::core::Tracker&gt;&gt; (27 samples, 0.06%)</title><rect x="10.3561%" y="1797" width="0.0638%" height="15" fill="rgb(232,45,27)" fg:x="4386" fg:w="27"/><text x="10.6061%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.06%)</title><rect x="10.3561%" y="1781" width="0.0638%" height="15" fill="rgb(249,103,42)" fg:x="4386" fg:w="27"/><text x="10.6061%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.06%)</title><rect x="10.3561%" y="1765" width="0.0638%" height="15" fill="rgb(246,81,33)" fg:x="4386" fg:w="27"/><text x="10.6061%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.06%)</title><rect x="10.3561%" y="1749" width="0.0638%" height="15" fill="rgb(252,33,42)" fg:x="4386" fg:w="27"/><text x="10.6061%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::udp::UdpSocket&gt;&gt; (17 samples, 0.04%)</title><rect x="10.4765%" y="1781" width="0.0401%" height="15" fill="rgb(209,212,41)" fg:x="4437" fg:w="17"/><text x="10.7265%" y="1791.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.04%)</title><rect x="10.4765%" y="1765" width="0.0401%" height="15" fill="rgb(207,154,6)" fg:x="4437" fg:w="17"/><text x="10.7265%" y="1775.50"></text></g><g><title>tokio::net::udp::UdpSocket::local_addr (6 samples, 0.01%)</title><rect x="10.5426%" y="1781" width="0.0142%" height="15" fill="rgb(223,64,47)" fg:x="4465" fg:w="6"/><text x="10.7926%" y="1791.50"></text></g><g><title>&lt;tokio::io::poll_evented::PollEvented&lt;E&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="10.5426%" y="1765" width="0.0142%" height="15" fill="rgb(211,161,38)" fg:x="4465" fg:w="6"/><text x="10.7926%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="10.5426%" y="1749" width="0.0142%" height="15" fill="rgb(219,138,40)" fg:x="4465" fg:w="6"/><text x="10.7926%" y="1759.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="10.5426%" y="1733" width="0.0142%" height="15" fill="rgb(241,228,46)" fg:x="4465" fg:w="6"/><text x="10.7926%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::RequestId::make (9 samples, 0.02%)</title><rect x="10.5568%" y="1781" width="0.0213%" height="15" fill="rgb(223,209,38)" fg:x="4471" fg:w="9"/><text x="10.8068%" y="1791.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="10.5591%" y="1765" width="0.0189%" height="15" fill="rgb(236,164,45)" fg:x="4472" fg:w="8"/><text x="10.8091%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_announce::{{closure}} (16 samples, 0.04%)</title><rect x="10.5993%" y="1765" width="0.0378%" height="15" fill="rgb(231,15,5)" fg:x="4489" fg:w="16"/><text x="10.8493%" y="1775.50"></text></g><g><title>torrust_tracker::core::Tracker::announce::{{closure}} (10 samples, 0.02%)</title><rect x="10.6134%" y="1749" width="0.0236%" height="15" fill="rgb(252,35,15)" fg:x="4495" fg:w="10"/><text x="10.8634%" y="1759.50"></text></g><g><title>torrust_tracker::core::Tracker::update_torrent_with_peer_and_get_stats::{{closure}} (6 samples, 0.01%)</title><rect x="10.6229%" y="1733" width="0.0142%" height="15" fill="rgb(248,181,18)" fg:x="4499" fg:w="6"/><text x="10.8729%" y="1743.50"></text></g><g><title>&lt;torrust_tracker::core::torrent::repository::RepositoryAsyncSingle as torrust_tracker::core::torrent::repository::TRepositoryAsync&gt;::update_torrent_with_peer_and_get_stats::{{closure}} (6 samples, 0.01%)</title><rect x="10.6229%" y="1717" width="0.0142%" height="15" fill="rgb(233,39,42)" fg:x="4499" fg:w="6"/><text x="10.8729%" y="1727.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_connect::{{closure}} (6 samples, 0.01%)</title><rect x="10.6370%" y="1765" width="0.0142%" height="15" fill="rgb(238,110,33)" fg:x="4505" fg:w="6"/><text x="10.8870%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_request::{{closure}} (34 samples, 0.08%)</title><rect x="10.5780%" y="1781" width="0.0803%" height="15" fill="rgb(233,195,10)" fg:x="4480" fg:w="34"/><text x="10.8280%" y="1791.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (10 samples, 0.02%)</title><rect x="10.6890%" y="1765" width="0.0236%" height="15" fill="rgb(254,105,3)" fg:x="4527" fg:w="10"/><text x="10.9390%" y="1775.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (5 samples, 0.01%)</title><rect x="10.7173%" y="1765" width="0.0118%" height="15" fill="rgb(221,225,9)" fg:x="4539" fg:w="5"/><text x="10.9673%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request (41 samples, 0.10%)</title><rect x="10.6583%" y="1781" width="0.0968%" height="15" fill="rgb(224,227,45)" fg:x="4514" fg:w="41"/><text x="10.9083%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (156 samples, 0.37%)</title><rect x="10.4269%" y="1797" width="0.3683%" height="15" fill="rgb(229,198,43)" fg:x="4416" fg:w="156"/><text x="10.6769%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_response (17 samples, 0.04%)</title><rect x="10.7551%" y="1781" width="0.0401%" height="15" fill="rgb(206,209,35)" fg:x="4555" fg:w="17"/><text x="11.0051%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (238 samples, 0.56%)</title><rect x="10.2758%" y="1813" width="0.5620%" height="15" fill="rgb(245,195,53)" fg:x="4352" fg:w="238"/><text x="10.5258%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (18 samples, 0.04%)</title><rect x="10.7952%" y="1797" width="0.0425%" height="15" fill="rgb(240,92,26)" fg:x="4572" fg:w="18"/><text x="11.0452%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_packet::{{closure}} (13 samples, 0.03%)</title><rect x="10.8070%" y="1781" width="0.0307%" height="15" fill="rgb(207,40,23)" fg:x="4577" fg:w="13"/><text x="11.0570%" y="1791.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to::{{closure}} (11 samples, 0.03%)</title><rect x="10.8118%" y="1765" width="0.0260%" height="15" fill="rgb(223,111,35)" fg:x="4579" fg:w="11"/><text x="11.0618%" y="1775.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}} (10 samples, 0.02%)</title><rect x="10.8141%" y="1749" width="0.0236%" height="15" fill="rgb(229,147,28)" fg:x="4580" fg:w="10"/><text x="11.0641%" y="1759.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (8 samples, 0.02%)</title><rect x="10.8189%" y="1733" width="0.0189%" height="15" fill="rgb(211,29,28)" fg:x="4582" fg:w="8"/><text x="11.0689%" y="1743.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}}::{{closure}} (6 samples, 0.01%)</title><rect x="10.8236%" y="1717" width="0.0142%" height="15" fill="rgb(228,72,33)" fg:x="4584" fg:w="6"/><text x="11.0736%" y="1727.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to (6 samples, 0.01%)</title><rect x="10.8236%" y="1701" width="0.0142%" height="15" fill="rgb(205,214,31)" fg:x="4584" fg:w="6"/><text x="11.0736%" y="1711.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (6 samples, 0.01%)</title><rect x="10.8236%" y="1685" width="0.0142%" height="15" fill="rgb(224,111,15)" fg:x="4584" fg:w="6"/><text x="11.0736%" y="1695.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (6 samples, 0.01%)</title><rect x="10.8236%" y="1669" width="0.0142%" height="15" fill="rgb(253,21,26)" fg:x="4584" fg:w="6"/><text x="11.0736%" y="1679.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to::{{closure}} (6 samples, 0.01%)</title><rect x="10.8236%" y="1653" width="0.0142%" height="15" fill="rgb(245,139,43)" fg:x="4584" fg:w="6"/><text x="11.0736%" y="1663.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (6 samples, 0.01%)</title><rect x="10.8236%" y="1637" width="0.0142%" height="15" fill="rgb(252,170,7)" fg:x="4584" fg:w="6"/><text x="11.0736%" y="1647.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (6 samples, 0.01%)</title><rect x="10.8236%" y="1621" width="0.0142%" height="15" fill="rgb(231,118,14)" fg:x="4584" fg:w="6"/><text x="11.0736%" y="1631.50"></text></g><g><title>std::sys::pal::unix::cvt (6 samples, 0.01%)</title><rect x="10.8236%" y="1605" width="0.0142%" height="15" fill="rgb(238,83,0)" fg:x="4584" fg:w="6"/><text x="11.0736%" y="1615.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (5 samples, 0.01%)</title><rect x="10.8259%" y="1589" width="0.0118%" height="15" fill="rgb(221,39,39)" fg:x="4585" fg:w="5"/><text x="11.0759%" y="1599.50"></text></g><g><title>tracing::span::Span::log (12 samples, 0.03%)</title><rect x="10.8377%" y="1813" width="0.0283%" height="15" fill="rgb(222,119,46)" fg:x="4590" fg:w="12"/><text x="11.0877%" y="1823.50"></text></g><g><title>tracing::span::Span::record_all (15 samples, 0.04%)</title><rect x="10.8661%" y="1813" width="0.0354%" height="15" fill="rgb(222,165,49)" fg:x="4602" fg:w="15"/><text x="11.1161%" y="1823.50"></text></g><g><title>unlink_chunk (59 samples, 0.14%)</title><rect x="10.9015%" y="1813" width="0.1393%" height="15" fill="rgb(219,113,52)" fg:x="4617" fg:w="59"/><text x="11.1515%" y="1823.50"></text></g><g><title>[anon] (3,194 samples, 7.54%)</title><rect x="3.5063%" y="1829" width="7.5416%" height="15" fill="rgb(214,7,15)" fg:x="1485" fg:w="3194"/><text x="3.7563%" y="1839.50">[anon]</text></g><g><title>[[vdso]] (27 samples, 0.06%)</title><rect x="11.0668%" y="1813" width="0.0638%" height="15" fill="rgb(235,32,4)" fg:x="4687" fg:w="27"/><text x="11.3168%" y="1823.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (35 samples, 0.08%)</title><rect x="11.1518%" y="1813" width="0.0826%" height="15" fill="rgb(238,90,54)" fg:x="4723" fg:w="35"/><text x="11.4018%" y="1823.50"></text></g><g><title>_int_malloc (9 samples, 0.02%)</title><rect x="11.2439%" y="1813" width="0.0213%" height="15" fill="rgb(213,208,19)" fg:x="4762" fg:w="9"/><text x="11.4939%" y="1823.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.02%)</title><rect x="11.2769%" y="1781" width="0.0189%" height="15" fill="rgb(233,156,4)" fg:x="4776" fg:w="8"/><text x="11.5269%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.05%)</title><rect x="11.2698%" y="1813" width="0.0496%" height="15" fill="rgb(207,194,5)" fg:x="4773" fg:w="21"/><text x="11.5198%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.04%)</title><rect x="11.2769%" y="1797" width="0.0425%" height="15" fill="rgb(206,111,30)" fg:x="4776" fg:w="18"/><text x="11.5269%" y="1807.50"></text></g><g><title>syscall (5 samples, 0.01%)</title><rect x="11.3478%" y="1813" width="0.0118%" height="15" fill="rgb(243,70,54)" fg:x="4806" fg:w="5"/><text x="11.5978%" y="1823.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (5 samples, 0.01%)</title><rect x="11.3784%" y="1813" width="0.0118%" height="15" fill="rgb(242,28,8)" fg:x="4819" fg:w="5"/><text x="11.6284%" y="1823.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="11.3973%" y="1797" width="0.0236%" height="15" fill="rgb(219,106,18)" fg:x="4827" fg:w="10"/><text x="11.6473%" y="1807.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="11.3973%" y="1781" width="0.0236%" height="15" fill="rgb(244,222,10)" fg:x="4827" fg:w="10"/><text x="11.6473%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.02%)</title><rect x="11.3973%" y="1765" width="0.0236%" height="15" fill="rgb(236,179,52)" fg:x="4827" fg:w="10"/><text x="11.6473%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.02%)</title><rect x="11.4044%" y="1749" width="0.0165%" height="15" fill="rgb(213,23,39)" fg:x="4830" fg:w="7"/><text x="11.6544%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (11 samples, 0.03%)</title><rect x="11.3973%" y="1813" width="0.0260%" height="15" fill="rgb(238,48,10)" fg:x="4827" fg:w="11"/><text x="11.6473%" y="1823.50"></text></g><g><title>[profiling] (167 samples, 0.39%)</title><rect x="11.0502%" y="1829" width="0.3943%" height="15" fill="rgb(251,196,23)" fg:x="4680" fg:w="167"/><text x="11.3002%" y="1839.50"></text></g><g><title>unlink_chunk (5 samples, 0.01%)</title><rect x="11.4328%" y="1813" width="0.0118%" height="15" fill="rgb(250,152,24)" fg:x="4842" fg:w="5"/><text x="11.6828%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="11.6405%" y="1813" width="0.0165%" height="15" fill="rgb(209,150,17)" fg:x="4930" fg:w="7"/><text x="11.8905%" y="1823.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="11.6594%" y="1813" width="0.0165%" height="15" fill="rgb(234,202,34)" fg:x="4938" fg:w="7"/><text x="11.9094%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="11.6760%" y="1813" width="0.0118%" height="15" fill="rgb(253,148,53)" fg:x="4945" fg:w="5"/><text x="11.9260%" y="1823.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="11.7303%" y="1797" width="0.0165%" height="15" fill="rgb(218,129,16)" fg:x="4968" fg:w="7"/><text x="11.9803%" y="1807.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (39 samples, 0.09%)</title><rect x="11.6878%" y="1813" width="0.0921%" height="15" fill="rgb(216,85,19)" fg:x="4950" fg:w="39"/><text x="11.9378%" y="1823.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.03%)</title><rect x="11.7539%" y="1797" width="0.0260%" height="15" fill="rgb(235,228,7)" fg:x="4978" fg:w="11"/><text x="12.0039%" y="1807.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (13 samples, 0.03%)</title><rect x="11.7798%" y="1813" width="0.0307%" height="15" fill="rgb(245,175,0)" fg:x="4989" fg:w="13"/><text x="12.0298%" y="1823.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddrV4 as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="11.7964%" y="1797" width="0.0142%" height="15" fill="rgb(208,168,36)" fg:x="4996" fg:w="6"/><text x="12.0464%" y="1807.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (20 samples, 0.05%)</title><rect x="11.8105%" y="1813" width="0.0472%" height="15" fill="rgb(246,171,24)" fg:x="5002" fg:w="20"/><text x="12.0605%" y="1823.50"></text></g><g><title>core::ops::function::FnMut::call_mut (17 samples, 0.04%)</title><rect x="11.8176%" y="1797" width="0.0401%" height="15" fill="rgb(215,142,24)" fg:x="5005" fg:w="17"/><text x="12.0676%" y="1807.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (17 samples, 0.04%)</title><rect x="11.8176%" y="1781" width="0.0401%" height="15" fill="rgb(250,187,7)" fg:x="5005" fg:w="17"/><text x="12.0676%" y="1791.50"></text></g><g><title>tokio::runtime::context::budget (17 samples, 0.04%)</title><rect x="11.8176%" y="1765" width="0.0401%" height="15" fill="rgb(228,66,33)" fg:x="5005" fg:w="17"/><text x="12.0676%" y="1775.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.04%)</title><rect x="11.8176%" y="1749" width="0.0401%" height="15" fill="rgb(234,215,21)" fg:x="5005" fg:w="17"/><text x="12.0676%" y="1759.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (11 samples, 0.03%)</title><rect x="11.8318%" y="1733" width="0.0260%" height="15" fill="rgb(222,191,20)" fg:x="5011" fg:w="11"/><text x="12.0818%" y="1743.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::{{closure}} (11 samples, 0.03%)</title><rect x="11.8318%" y="1717" width="0.0260%" height="15" fill="rgb(245,79,54)" fg:x="5011" fg:w="11"/><text x="12.0818%" y="1727.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (40 samples, 0.09%)</title><rect x="11.8578%" y="1813" width="0.0944%" height="15" fill="rgb(240,10,37)" fg:x="5022" fg:w="40"/><text x="12.1078%" y="1823.50"></text></g><g><title>std::sync::poison::Flag::done (6 samples, 0.01%)</title><rect x="12.0301%" y="1765" width="0.0142%" height="15" fill="rgb(214,192,32)" fg:x="5095" fg:w="6"/><text x="12.2801%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (12 samples, 0.03%)</title><rect x="12.0230%" y="1797" width="0.0283%" height="15" fill="rgb(209,36,54)" fg:x="5092" fg:w="12"/><text x="12.2730%" y="1807.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="12.0230%" y="1781" width="0.0283%" height="15" fill="rgb(220,10,11)" fg:x="5092" fg:w="12"/><text x="12.2730%" y="1791.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (8 samples, 0.02%)</title><rect x="12.0514%" y="1765" width="0.0189%" height="15" fill="rgb(221,106,17)" fg:x="5104" fg:w="8"/><text x="12.3014%" y="1775.50"></text></g><g><title>std::sync::poison::Flag::guard (8 samples, 0.02%)</title><rect x="12.0514%" y="1749" width="0.0189%" height="15" fill="rgb(251,142,44)" fg:x="5104" fg:w="8"/><text x="12.3014%" y="1759.50"></text></g><g><title>std::thread::panicking (7 samples, 0.02%)</title><rect x="12.0537%" y="1733" width="0.0165%" height="15" fill="rgb(238,13,15)" fg:x="5105" fg:w="7"/><text x="12.3037%" y="1743.50"></text></g><g><title>std::panicking::panicking (7 samples, 0.02%)</title><rect x="12.0537%" y="1717" width="0.0165%" height="15" fill="rgb(208,107,27)" fg:x="5105" fg:w="7"/><text x="12.3037%" y="1727.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (7 samples, 0.02%)</title><rect x="12.0537%" y="1701" width="0.0165%" height="15" fill="rgb(205,136,37)" fg:x="5105" fg:w="7"/><text x="12.3037%" y="1711.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (20 samples, 0.05%)</title><rect x="12.0726%" y="1749" width="0.0472%" height="15" fill="rgb(250,205,27)" fg:x="5113" fg:w="20"/><text x="12.3226%" y="1759.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (20 samples, 0.05%)</title><rect x="12.0726%" y="1733" width="0.0472%" height="15" fill="rgb(210,80,43)" fg:x="5113" fg:w="20"/><text x="12.3226%" y="1743.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (36 samples, 0.09%)</title><rect x="12.0514%" y="1797" width="0.0850%" height="15" fill="rgb(247,160,36)" fg:x="5104" fg:w="36"/><text x="12.3014%" y="1807.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (36 samples, 0.09%)</title><rect x="12.0514%" y="1781" width="0.0850%" height="15" fill="rgb(234,13,49)" fg:x="5104" fg:w="36"/><text x="12.3014%" y="1791.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (28 samples, 0.07%)</title><rect x="12.0703%" y="1765" width="0.0661%" height="15" fill="rgb(234,122,0)" fg:x="5112" fg:w="28"/><text x="12.3203%" y="1775.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (7 samples, 0.02%)</title><rect x="12.1199%" y="1749" width="0.0165%" height="15" fill="rgb(207,146,38)" fg:x="5133" fg:w="7"/><text x="12.3699%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.02%)</title><rect x="12.1199%" y="1733" width="0.0165%" height="15" fill="rgb(207,177,25)" fg:x="5133" fg:w="7"/><text x="12.3699%" y="1743.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (79 samples, 0.19%)</title><rect x="11.9522%" y="1813" width="0.1865%" height="15" fill="rgb(211,178,42)" fg:x="5062" fg:w="79"/><text x="12.2022%" y="1823.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (6 samples, 0.01%)</title><rect x="12.1930%" y="1797" width="0.0142%" height="15" fill="rgb(230,69,54)" fg:x="5164" fg:w="6"/><text x="12.4430%" y="1807.50"></text></g><g><title>tokio::runtime::context::budget (6 samples, 0.01%)</title><rect x="12.1930%" y="1781" width="0.0142%" height="15" fill="rgb(214,135,41)" fg:x="5164" fg:w="6"/><text x="12.4430%" y="1791.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="12.1930%" y="1765" width="0.0142%" height="15" fill="rgb(237,67,25)" fg:x="5164" fg:w="6"/><text x="12.4430%" y="1775.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (6 samples, 0.01%)</title><rect x="12.1930%" y="1749" width="0.0142%" height="15" fill="rgb(222,189,50)" fg:x="5164" fg:w="6"/><text x="12.4430%" y="1759.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::{{closure}} (6 samples, 0.01%)</title><rect x="12.1930%" y="1733" width="0.0142%" height="15" fill="rgb(245,148,34)" fg:x="5164" fg:w="6"/><text x="12.4430%" y="1743.50"></text></g><g><title>core::mem::drop (8 samples, 0.02%)</title><rect x="12.2426%" y="1781" width="0.0189%" height="15" fill="rgb(222,29,6)" fg:x="5185" fg:w="8"/><text x="12.4926%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::sync::batch_semaphore::Waitlist&gt;&gt; (7 samples, 0.02%)</title><rect x="12.2450%" y="1765" width="0.0165%" height="15" fill="rgb(221,189,43)" fg:x="5186" fg:w="7"/><text x="12.4950%" y="1775.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="12.2450%" y="1749" width="0.0165%" height="15" fill="rgb(207,36,27)" fg:x="5186" fg:w="7"/><text x="12.4950%" y="1759.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (6 samples, 0.01%)</title><rect x="12.2474%" y="1733" width="0.0142%" height="15" fill="rgb(217,90,24)" fg:x="5187" fg:w="6"/><text x="12.4974%" y="1743.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.02%)</title><rect x="12.2733%" y="1781" width="0.0165%" height="15" fill="rgb(224,66,35)" fg:x="5198" fg:w="7"/><text x="12.5233%" y="1791.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.02%)</title><rect x="12.2733%" y="1765" width="0.0165%" height="15" fill="rgb(221,13,50)" fg:x="5198" fg:w="7"/><text x="12.5233%" y="1775.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (69 samples, 0.16%)</title><rect x="12.1387%" y="1813" width="0.1629%" height="15" fill="rgb(236,68,49)" fg:x="5141" fg:w="69"/><text x="12.3887%" y="1823.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (40 samples, 0.09%)</title><rect x="12.2072%" y="1797" width="0.0944%" height="15" fill="rgb(229,146,28)" fg:x="5170" fg:w="40"/><text x="12.4572%" y="1807.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="12.3017%" y="1813" width="0.0118%" height="15" fill="rgb(225,31,38)" fg:x="5210" fg:w="5"/><text x="12.5517%" y="1823.50"></text></g><g><title>&lt;tokio::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="12.3135%" y="1813" width="0.0142%" height="15" fill="rgb(250,208,3)" fg:x="5215" fg:w="6"/><text x="12.5635%" y="1823.50"></text></g><g><title>binascii::bin2hex (11 samples, 0.03%)</title><rect x="12.3465%" y="1797" width="0.0260%" height="15" fill="rgb(246,54,23)" fg:x="5229" fg:w="11"/><text x="12.5965%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="12.3583%" y="1781" width="0.0142%" height="15" fill="rgb(243,76,11)" fg:x="5234" fg:w="6"/><text x="12.6083%" y="1791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="12.3583%" y="1765" width="0.0142%" height="15" fill="rgb(245,21,50)" fg:x="5234" fg:w="6"/><text x="12.6083%" y="1775.50"></text></g><g><title>&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash as core::fmt::Display&gt;::fmt (20 samples, 0.05%)</title><rect x="12.3300%" y="1813" width="0.0472%" height="15" fill="rgb(228,9,43)" fg:x="5222" fg:w="20"/><text x="12.5800%" y="1823.50"></text></g><g><title>[[vdso]] (1,290 samples, 3.05%)</title><rect x="12.3772%" y="1813" width="3.0459%" height="15" fill="rgb(208,100,47)" fg:x="5242" fg:w="1290"/><text x="12.6272%" y="1823.50">[[v..</text></g><g><title>[unknown] (99 samples, 0.23%)</title><rect x="15.1894%" y="1797" width="0.2338%" height="15" fill="rgb(232,26,8)" fg:x="6433" fg:w="99"/><text x="15.4394%" y="1807.50"></text></g><g><title>[unknown] (386 samples, 0.91%)</title><rect x="15.4278%" y="1813" width="0.9114%" height="15" fill="rgb(216,166,38)" fg:x="6534" fg:w="386"/><text x="15.6778%" y="1823.50"></text></g><g><title>[unknown] (295 samples, 0.70%)</title><rect x="15.6427%" y="1797" width="0.6965%" height="15" fill="rgb(251,202,51)" fg:x="6625" fg:w="295"/><text x="15.8927%" y="1807.50"></text></g><g><title>[unknown] (242 samples, 0.57%)</title><rect x="15.7679%" y="1781" width="0.5714%" height="15" fill="rgb(254,216,34)" fg:x="6678" fg:w="242"/><text x="16.0179%" y="1791.50"></text></g><g><title>[unknown] (152 samples, 0.36%)</title><rect x="15.9804%" y="1765" width="0.3589%" height="15" fill="rgb(251,32,27)" fg:x="6768" fg:w="152"/><text x="16.2304%" y="1775.50"></text></g><g><title>[unknown] (64 samples, 0.15%)</title><rect x="16.1881%" y="1749" width="0.1511%" height="15" fill="rgb(208,127,28)" fg:x="6856" fg:w="64"/><text x="16.4381%" y="1759.50"></text></g><g><title>[unknown] (33 samples, 0.08%)</title><rect x="16.2613%" y="1733" width="0.0779%" height="15" fill="rgb(224,137,22)" fg:x="6887" fg:w="33"/><text x="16.5113%" y="1743.50"></text></g><g><title>__GI___clock_gettime (35 samples, 0.08%)</title><rect x="16.3393%" y="1813" width="0.0826%" height="15" fill="rgb(254,70,32)" fg:x="6920" fg:w="35"/><text x="16.5893%" y="1823.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (16 samples, 0.04%)</title><rect x="16.3841%" y="1797" width="0.0378%" height="15" fill="rgb(229,75,37)" fg:x="6939" fg:w="16"/><text x="16.6341%" y="1807.50"></text></g><g><title>__GI___libc_free (44 samples, 0.10%)</title><rect x="16.4219%" y="1813" width="0.1039%" height="15" fill="rgb(252,64,23)" fg:x="6955" fg:w="44"/><text x="16.6719%" y="1823.50"></text></g><g><title>arena_for_chunk (12 samples, 0.03%)</title><rect x="16.4974%" y="1797" width="0.0283%" height="15" fill="rgb(232,162,48)" fg:x="6987" fg:w="12"/><text x="16.7474%" y="1807.50"></text></g><g><title>arena_for_chunk (8 samples, 0.02%)</title><rect x="16.5069%" y="1781" width="0.0189%" height="15" fill="rgb(246,160,12)" fg:x="6991" fg:w="8"/><text x="16.7569%" y="1791.50"></text></g><g><title>heap_for_ptr (5 samples, 0.01%)</title><rect x="16.5140%" y="1765" width="0.0118%" height="15" fill="rgb(247,166,0)" fg:x="6994" fg:w="5"/><text x="16.7640%" y="1775.50"></text></g><g><title>__GI___libc_malloc (46 samples, 0.11%)</title><rect x="16.5258%" y="1813" width="0.1086%" height="15" fill="rgb(249,219,21)" fg:x="6999" fg:w="46"/><text x="16.7758%" y="1823.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.02%)</title><rect x="16.6344%" y="1813" width="0.0165%" height="15" fill="rgb(205,209,3)" fg:x="7045" fg:w="7"/><text x="16.8844%" y="1823.50"></text></g><g><title>__GI___libc_write (22 samples, 0.05%)</title><rect x="16.6509%" y="1813" width="0.0519%" height="15" fill="rgb(243,44,1)" fg:x="7052" fg:w="22"/><text x="16.9009%" y="1823.50"></text></g><g><title>__GI___libc_write (22 samples, 0.05%)</title><rect x="16.6509%" y="1797" width="0.0519%" height="15" fill="rgb(206,159,16)" fg:x="7052" fg:w="22"/><text x="16.9009%" y="1807.50"></text></g><g><title>__GI___lll_lock_wait_private (17 samples, 0.04%)</title><rect x="16.7029%" y="1813" width="0.0401%" height="15" fill="rgb(244,77,30)" fg:x="7074" fg:w="17"/><text x="16.9529%" y="1823.50"></text></g><g><title>futex_wait (9 samples, 0.02%)</title><rect x="16.7218%" y="1797" width="0.0213%" height="15" fill="rgb(218,69,12)" fg:x="7082" fg:w="9"/><text x="16.9718%" y="1807.50"></text></g><g><title>__GI___lll_lock_wake_private (14 samples, 0.03%)</title><rect x="16.7430%" y="1813" width="0.0331%" height="15" fill="rgb(212,87,7)" fg:x="7091" fg:w="14"/><text x="16.9930%" y="1823.50"></text></g><g><title>__GI___pthread_disable_asynccancel (19 samples, 0.04%)</title><rect x="16.7761%" y="1813" width="0.0449%" height="15" fill="rgb(245,114,25)" fg:x="7105" fg:w="19"/><text x="17.0261%" y="1823.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (19 samples, 0.04%)</title><rect x="16.8280%" y="1781" width="0.0449%" height="15" fill="rgb(210,61,42)" fg:x="7127" fg:w="19"/><text x="17.0780%" y="1791.50"></text></g><g><title>__floattidf (23 samples, 0.05%)</title><rect x="16.8233%" y="1813" width="0.0543%" height="15" fill="rgb(211,52,33)" fg:x="7125" fg:w="23"/><text x="17.0733%" y="1823.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (22 samples, 0.05%)</title><rect x="16.8257%" y="1797" width="0.0519%" height="15" fill="rgb(234,58,33)" fg:x="7126" fg:w="22"/><text x="17.0757%" y="1807.50"></text></g><g><title>exp_inline (18 samples, 0.04%)</title><rect x="16.8800%" y="1797" width="0.0425%" height="15" fill="rgb(220,115,36)" fg:x="7149" fg:w="18"/><text x="17.1300%" y="1807.50"></text></g><g><title>__ieee754_pow_fma (30 samples, 0.07%)</title><rect x="16.8776%" y="1813" width="0.0708%" height="15" fill="rgb(243,153,54)" fg:x="7148" fg:w="30"/><text x="17.1276%" y="1823.50"></text></g><g><title>log_inline (11 samples, 0.03%)</title><rect x="16.9225%" y="1797" width="0.0260%" height="15" fill="rgb(251,47,18)" fg:x="7167" fg:w="11"/><text x="17.1725%" y="1807.50"></text></g><g><title>__libc_calloc (19 samples, 0.04%)</title><rect x="16.9484%" y="1813" width="0.0449%" height="15" fill="rgb(242,102,42)" fg:x="7178" fg:w="19"/><text x="17.1984%" y="1823.50"></text></g><g><title>__libc_sendto (92 samples, 0.22%)</title><rect x="16.9933%" y="1813" width="0.2172%" height="15" fill="rgb(234,31,38)" fg:x="7197" fg:w="92"/><text x="17.2433%" y="1823.50"></text></g><g><title>__memcmp_evex_movbe (81 samples, 0.19%)</title><rect x="17.2105%" y="1813" width="0.1913%" height="15" fill="rgb(221,117,51)" fg:x="7289" fg:w="81"/><text x="17.4605%" y="1823.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (484 samples, 1.14%)</title><rect x="17.4018%" y="1813" width="1.1428%" height="15" fill="rgb(212,20,18)" fg:x="7370" fg:w="484"/><text x="17.6518%" y="1823.50"></text></g><g><title>__posix_memalign (35 samples, 0.08%)</title><rect x="18.5446%" y="1813" width="0.0826%" height="15" fill="rgb(245,133,36)" fg:x="7854" fg:w="35"/><text x="18.7946%" y="1823.50"></text></g><g><title>__posix_memalign (24 samples, 0.06%)</title><rect x="18.5706%" y="1797" width="0.0567%" height="15" fill="rgb(212,6,19)" fg:x="7865" fg:w="24"/><text x="18.8206%" y="1807.50"></text></g><g><title>_mid_memalign (21 samples, 0.05%)</title><rect x="18.5776%" y="1781" width="0.0496%" height="15" fill="rgb(218,1,36)" fg:x="7868" fg:w="21"/><text x="18.8276%" y="1791.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.01%)</title><rect x="18.6343%" y="1813" width="0.0118%" height="15" fill="rgb(246,84,54)" fg:x="7892" fg:w="5"/><text x="18.8843%" y="1823.50"></text></g><g><title>[unknown] (18 samples, 0.04%)</title><rect x="19.2860%" y="1797" width="0.0425%" height="15" fill="rgb(242,110,6)" fg:x="8168" fg:w="18"/><text x="19.5360%" y="1807.50"></text></g><g><title>free_perturb (5 samples, 0.01%)</title><rect x="19.3285%" y="1797" width="0.0118%" height="15" fill="rgb(214,47,5)" fg:x="8186" fg:w="5"/><text x="19.5785%" y="1807.50"></text></g><g><title>_int_free (305 samples, 0.72%)</title><rect x="18.6461%" y="1813" width="0.7202%" height="15" fill="rgb(218,159,25)" fg:x="7897" fg:w="305"/><text x="18.8961%" y="1823.50"></text></g><g><title>tcache_put (9 samples, 0.02%)</title><rect x="19.3450%" y="1797" width="0.0213%" height="15" fill="rgb(215,211,28)" fg:x="8193" fg:w="9"/><text x="19.5950%" y="1807.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="19.9046%" y="1797" width="0.0118%" height="15" fill="rgb(238,59,32)" fg:x="8430" fg:w="5"/><text x="20.1546%" y="1807.50"></text></g><g><title>_int_malloc (235 samples, 0.55%)</title><rect x="19.3663%" y="1813" width="0.5549%" height="15" fill="rgb(226,82,3)" fg:x="8202" fg:w="235"/><text x="19.6163%" y="1823.50"></text></g><g><title>_int_memalign (28 samples, 0.07%)</title><rect x="19.9211%" y="1813" width="0.0661%" height="15" fill="rgb(240,164,32)" fg:x="8437" fg:w="28"/><text x="20.1711%" y="1823.50"></text></g><g><title>checked_request2size (7 samples, 0.02%)</title><rect x="19.9707%" y="1797" width="0.0165%" height="15" fill="rgb(232,46,7)" fg:x="8458" fg:w="7"/><text x="20.2207%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="20.0416%" y="1749" width="0.0142%" height="15" fill="rgb(229,129,53)" fg:x="8488" fg:w="6"/><text x="20.2916%" y="1759.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="20.0416%" y="1733" width="0.0142%" height="15" fill="rgb(234,188,29)" fg:x="8488" fg:w="6"/><text x="20.2916%" y="1743.50"></text></g><g><title>&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (20 samples, 0.05%)</title><rect x="20.0557%" y="1749" width="0.0472%" height="15" fill="rgb(246,141,4)" fg:x="8494" fg:w="20"/><text x="20.3057%" y="1759.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (20 samples, 0.05%)</title><rect x="20.0557%" y="1733" width="0.0472%" height="15" fill="rgb(229,23,39)" fg:x="8494" fg:w="20"/><text x="20.3057%" y="1743.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (20 samples, 0.05%)</title><rect x="20.0557%" y="1717" width="0.0472%" height="15" fill="rgb(206,12,3)" fg:x="8494" fg:w="20"/><text x="20.3057%" y="1727.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (20 samples, 0.05%)</title><rect x="20.0557%" y="1701" width="0.0472%" height="15" fill="rgb(252,226,20)" fg:x="8494" fg:w="20"/><text x="20.3057%" y="1711.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (20 samples, 0.05%)</title><rect x="20.0557%" y="1685" width="0.0472%" height="15" fill="rgb(216,123,35)" fg:x="8494" fg:w="20"/><text x="20.3057%" y="1695.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (8 samples, 0.02%)</title><rect x="20.0841%" y="1669" width="0.0189%" height="15" fill="rgb(212,68,40)" fg:x="8506" fg:w="8"/><text x="20.3341%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (55 samples, 0.13%)</title><rect x="19.9872%" y="1813" width="0.1299%" height="15" fill="rgb(254,125,32)" fg:x="8465" fg:w="55"/><text x="20.2372%" y="1823.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (52 samples, 0.12%)</title><rect x="19.9943%" y="1797" width="0.1228%" height="15" fill="rgb(253,97,22)" fg:x="8468" fg:w="52"/><text x="20.2443%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (51 samples, 0.12%)</title><rect x="19.9967%" y="1781" width="0.1204%" height="15" fill="rgb(241,101,14)" fg:x="8469" fg:w="51"/><text x="20.2467%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (51 samples, 0.12%)</title><rect x="19.9967%" y="1765" width="0.1204%" height="15" fill="rgb(238,103,29)" fg:x="8469" fg:w="51"/><text x="20.2467%" y="1775.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (6 samples, 0.01%)</title><rect x="20.1029%" y="1749" width="0.0142%" height="15" fill="rgb(233,195,47)" fg:x="8514" fg:w="6"/><text x="20.3529%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (10 samples, 0.02%)</title><rect x="20.1171%" y="1813" width="0.0236%" height="15" fill="rgb(246,218,30)" fg:x="8520" fg:w="10"/><text x="20.3671%" y="1823.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (6 samples, 0.01%)</title><rect x="20.1266%" y="1797" width="0.0142%" height="15" fill="rgb(219,145,47)" fg:x="8524" fg:w="6"/><text x="20.3766%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (5 samples, 0.01%)</title><rect x="20.1289%" y="1781" width="0.0118%" height="15" fill="rgb(243,12,26)" fg:x="8525" fg:w="5"/><text x="20.3789%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (5 samples, 0.01%)</title><rect x="20.1289%" y="1765" width="0.0118%" height="15" fill="rgb(214,87,16)" fg:x="8525" fg:w="5"/><text x="20.3789%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (10 samples, 0.02%)</title><rect x="20.1502%" y="1797" width="0.0236%" height="15" fill="rgb(208,99,42)" fg:x="8534" fg:w="10"/><text x="20.4002%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.02%)</title><rect x="20.1525%" y="1781" width="0.0213%" height="15" fill="rgb(253,99,2)" fg:x="8535" fg:w="9"/><text x="20.4025%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (9 samples, 0.02%)</title><rect x="20.1525%" y="1765" width="0.0213%" height="15" fill="rgb(220,168,23)" fg:x="8535" fg:w="9"/><text x="20.4025%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (9 samples, 0.02%)</title><rect x="20.1525%" y="1749" width="0.0213%" height="15" fill="rgb(242,38,24)" fg:x="8535" fg:w="9"/><text x="20.4025%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (19 samples, 0.04%)</title><rect x="20.1407%" y="1813" width="0.0449%" height="15" fill="rgb(225,182,9)" fg:x="8530" fg:w="19"/><text x="20.3907%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.02%)</title><rect x="20.1856%" y="1813" width="0.0189%" height="15" fill="rgb(243,178,37)" fg:x="8549" fg:w="8"/><text x="20.4356%" y="1823.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (5 samples, 0.01%)</title><rect x="20.1927%" y="1797" width="0.0118%" height="15" fill="rgb(232,139,19)" fg:x="8552" fg:w="5"/><text x="20.4427%" y="1807.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (5 samples, 0.01%)</title><rect x="20.1927%" y="1781" width="0.0118%" height="15" fill="rgb(225,201,24)" fg:x="8552" fg:w="5"/><text x="20.4427%" y="1791.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="20.1927%" y="1765" width="0.0118%" height="15" fill="rgb(221,47,46)" fg:x="8552" fg:w="5"/><text x="20.4427%" y="1775.50"></text></g><g><title>core::ptr::write (5 samples, 0.01%)</title><rect x="20.1927%" y="1749" width="0.0118%" height="15" fill="rgb(249,23,13)" fg:x="8552" fg:w="5"/><text x="20.4427%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_insert (5 samples, 0.01%)</title><rect x="20.2045%" y="1813" width="0.0118%" height="15" fill="rgb(219,9,5)" fg:x="8557" fg:w="5"/><text x="20.4545%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.01%)</title><rect x="20.2163%" y="1813" width="0.0142%" height="15" fill="rgb(254,171,16)" fg:x="8562" fg:w="6"/><text x="20.4663%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.01%)</title><rect x="20.2186%" y="1797" width="0.0118%" height="15" fill="rgb(230,171,20)" fg:x="8563" fg:w="5"/><text x="20.4686%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.03%)</title><rect x="20.2304%" y="1813" width="0.0307%" height="15" fill="rgb(210,71,41)" fg:x="8568" fg:w="13"/><text x="20.4804%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.03%)</title><rect x="20.2352%" y="1797" width="0.0260%" height="15" fill="rgb(206,173,20)" fg:x="8570" fg:w="11"/><text x="20.4852%" y="1807.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.05%)</title><rect x="20.2611%" y="1813" width="0.0519%" height="15" fill="rgb(233,88,34)" fg:x="8581" fg:w="22"/><text x="20.5111%" y="1823.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (9 samples, 0.02%)</title><rect x="20.2918%" y="1797" width="0.0213%" height="15" fill="rgb(223,209,46)" fg:x="8594" fg:w="9"/><text x="20.5418%" y="1807.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="20.3131%" y="1813" width="0.0189%" height="15" fill="rgb(250,43,18)" fg:x="8603" fg:w="8"/><text x="20.5631%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="20.3131%" y="1797" width="0.0189%" height="15" fill="rgb(208,13,10)" fg:x="8603" fg:w="8"/><text x="20.5631%" y="1807.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.01%)</title><rect x="20.3792%" y="1781" width="0.0118%" height="15" fill="rgb(212,200,36)" fg:x="8631" fg:w="5"/><text x="20.6292%" y="1791.50"></text></g><g><title>alloc_new_heap (26 samples, 0.06%)</title><rect x="20.3320%" y="1813" width="0.0614%" height="15" fill="rgb(225,90,30)" fg:x="8611" fg:w="26"/><text x="20.5820%" y="1823.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (26 samples, 0.06%)</title><rect x="20.3320%" y="1797" width="0.0614%" height="15" fill="rgb(236,182,39)" fg:x="8611" fg:w="26"/><text x="20.5820%" y="1807.50"></text></g><g><title>core::fmt::Formatter::pad_integral (53 samples, 0.13%)</title><rect x="20.3981%" y="1813" width="0.1251%" height="15" fill="rgb(212,144,35)" fg:x="8639" fg:w="53"/><text x="20.6481%" y="1823.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 samples, 0.02%)</title><rect x="20.5232%" y="1813" width="0.0236%" height="15" fill="rgb(228,63,44)" fg:x="8692" fg:w="10"/><text x="20.7732%" y="1823.50"></text></g><g><title>core::fmt::Formatter::pad_integral (6 samples, 0.01%)</title><rect x="20.5468%" y="1813" width="0.0142%" height="15" fill="rgb(228,109,6)" fg:x="8702" fg:w="6"/><text x="20.7968%" y="1823.50"></text></g><g><title>core::fmt::write (11 samples, 0.03%)</title><rect x="20.5610%" y="1813" width="0.0260%" height="15" fill="rgb(238,117,24)" fg:x="8708" fg:w="11"/><text x="20.8110%" y="1823.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="20.5870%" y="1813" width="0.0189%" height="15" fill="rgb(242,26,26)" fg:x="8719" fg:w="8"/><text x="20.8370%" y="1823.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.02%)</title><rect x="20.5870%" y="1797" width="0.0189%" height="15" fill="rgb(221,92,48)" fg:x="8719" fg:w="8"/><text x="20.8370%" y="1807.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.02%)</title><rect x="20.5870%" y="1781" width="0.0189%" height="15" fill="rgb(209,209,32)" fg:x="8719" fg:w="8"/><text x="20.8370%" y="1791.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.02%)</title><rect x="20.5870%" y="1765" width="0.0189%" height="15" fill="rgb(221,70,22)" fg:x="8719" fg:w="8"/><text x="20.8370%" y="1775.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.01%)</title><rect x="20.5917%" y="1749" width="0.0142%" height="15" fill="rgb(248,145,5)" fg:x="8721" fg:w="6"/><text x="20.8417%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}}&gt;&gt; (65 samples, 0.15%)</title><rect x="20.6153%" y="1813" width="0.1535%" height="15" fill="rgb(226,116,26)" fg:x="8731" fg:w="65"/><text x="20.8653%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::server::Udp::receive_request::{{closure}}&gt; (6 samples, 0.01%)</title><rect x="20.8019%" y="1813" width="0.0142%" height="15" fill="rgb(244,5,17)" fg:x="8810" fg:w="6"/><text x="21.0519%" y="1823.50"></text></g><g><title>epoll_wait (76 samples, 0.18%)</title><rect x="20.8255%" y="1813" width="0.1794%" height="15" fill="rgb(252,159,33)" fg:x="8820" fg:w="76"/><text x="21.0755%" y="1823.50"></text></g><g><title>malloc_consolidate (9 samples, 0.02%)</title><rect x="21.0120%" y="1813" width="0.0213%" height="15" fill="rgb(206,71,0)" fg:x="8899" fg:w="9"/><text x="21.2620%" y="1823.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::new (6 samples, 0.01%)</title><rect x="21.1301%" y="1797" width="0.0142%" height="15" fill="rgb(233,118,54)" fg:x="8949" fg:w="6"/><text x="21.3801%" y="1807.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (46 samples, 0.11%)</title><rect x="21.0380%" y="1813" width="0.1086%" height="15" fill="rgb(234,83,48)" fg:x="8910" fg:w="46"/><text x="21.2880%" y="1823.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (34 samples, 0.08%)</title><rect x="21.1466%" y="1813" width="0.0803%" height="15" fill="rgb(228,3,54)" fg:x="8956" fg:w="34"/><text x="21.3966%" y="1823.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (5 samples, 0.01%)</title><rect x="21.2151%" y="1797" width="0.0118%" height="15" fill="rgb(226,155,13)" fg:x="8985" fg:w="5"/><text x="21.4651%" y="1807.50"></text></g><g><title>core::cmp::PartialOrd::ge (5 samples, 0.01%)</title><rect x="21.2151%" y="1781" width="0.0118%" height="15" fill="rgb(241,28,37)" fg:x="8985" fg:w="5"/><text x="21.4651%" y="1791.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (17 samples, 0.04%)</title><rect x="21.2269%" y="1813" width="0.0401%" height="15" fill="rgb(233,93,10)" fg:x="8990" fg:w="17"/><text x="21.4769%" y="1823.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (8 samples, 0.02%)</title><rect x="21.2481%" y="1797" width="0.0189%" height="15" fill="rgb(225,113,19)" fg:x="8999" fg:w="8"/><text x="21.4981%" y="1807.50"></text></g><g><title>std::sys_common::net::TcpListener::socket_addr (10 samples, 0.02%)</title><rect x="21.2670%" y="1813" width="0.0236%" height="15" fill="rgb(241,2,18)" fg:x="9007" fg:w="10"/><text x="21.5170%" y="1823.50"></text></g><g><title>std::sys_common::net::sockname (10 samples, 0.02%)</title><rect x="21.2670%" y="1797" width="0.0236%" height="15" fill="rgb(228,207,21)" fg:x="9007" fg:w="10"/><text x="21.5170%" y="1807.50"></text></g><g><title>syscall (52 samples, 0.12%)</title><rect x="21.2906%" y="1813" width="0.1228%" height="15" fill="rgb(213,211,35)" fg:x="9017" fg:w="52"/><text x="21.5406%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (6 samples, 0.01%)</title><rect x="21.4488%" y="1701" width="0.0142%" height="15" fill="rgb(209,83,10)" fg:x="9084" fg:w="6"/><text x="21.6988%" y="1711.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_finish (6 samples, 0.01%)</title><rect x="21.4488%" y="1685" width="0.0142%" height="15" fill="rgb(209,164,1)" fg:x="9084" fg:w="6"/><text x="21.6988%" y="1695.50"></text></g><g><title>tokio::runtime::context::with_scheduler (28 samples, 0.07%)</title><rect x="21.4181%" y="1813" width="0.0661%" height="15" fill="rgb(213,184,43)" fg:x="9071" fg:w="28"/><text x="21.6681%" y="1823.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.04%)</title><rect x="21.4394%" y="1797" width="0.0449%" height="15" fill="rgb(231,61,34)" fg:x="9080" fg:w="19"/><text x="21.6894%" y="1807.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (19 samples, 0.04%)</title><rect x="21.4394%" y="1781" width="0.0449%" height="15" fill="rgb(235,75,3)" fg:x="9080" fg:w="19"/><text x="21.6894%" y="1791.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (19 samples, 0.04%)</title><rect x="21.4394%" y="1765" width="0.0449%" height="15" fill="rgb(220,106,47)" fg:x="9080" fg:w="19"/><text x="21.6894%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (19 samples, 0.04%)</title><rect x="21.4394%" y="1749" width="0.0449%" height="15" fill="rgb(210,196,33)" fg:x="9080" fg:w="19"/><text x="21.6894%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (19 samples, 0.04%)</title><rect x="21.4394%" y="1733" width="0.0449%" height="15" fill="rgb(229,154,42)" fg:x="9080" fg:w="19"/><text x="21.6894%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (15 samples, 0.04%)</title><rect x="21.4488%" y="1717" width="0.0354%" height="15" fill="rgb(228,114,26)" fg:x="9084" fg:w="15"/><text x="21.6988%" y="1727.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (9 samples, 0.02%)</title><rect x="21.4630%" y="1701" width="0.0213%" height="15" fill="rgb(208,144,1)" fg:x="9090" fg:w="9"/><text x="21.7130%" y="1711.50"></text></g><g><title>mio::poll::Poll::poll (12 samples, 0.03%)</title><rect x="21.5220%" y="1797" width="0.0283%" height="15" fill="rgb(239,112,37)" fg:x="9115" fg:w="12"/><text x="21.7720%" y="1807.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (12 samples, 0.03%)</title><rect x="21.5220%" y="1781" width="0.0283%" height="15" fill="rgb(210,96,50)" fg:x="9115" fg:w="12"/><text x="21.7720%" y="1791.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="21.5362%" y="1765" width="0.0142%" height="15" fill="rgb(222,178,2)" fg:x="9121" fg:w="6"/><text x="21.7862%" y="1775.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select::{{closure}} (6 samples, 0.01%)</title><rect x="21.5362%" y="1749" width="0.0142%" height="15" fill="rgb(226,74,18)" fg:x="9121" fg:w="6"/><text x="21.7862%" y="1759.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (6 samples, 0.01%)</title><rect x="21.5503%" y="1797" width="0.0142%" height="15" fill="rgb(225,67,54)" fg:x="9127" fg:w="6"/><text x="21.8003%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.01%)</title><rect x="21.6519%" y="1781" width="0.0118%" height="15" fill="rgb(251,92,32)" fg:x="9170" fg:w="5"/><text x="21.9019%" y="1791.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="21.6519%" y="1765" width="0.0118%" height="15" fill="rgb(228,149,22)" fg:x="9170" fg:w="5"/><text x="21.9019%" y="1775.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (80 samples, 0.19%)</title><rect x="21.4842%" y="1813" width="0.1889%" height="15" fill="rgb(243,54,13)" fg:x="9099" fg:w="80"/><text x="21.7342%" y="1823.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (46 samples, 0.11%)</title><rect x="21.5645%" y="1797" width="0.1086%" height="15" fill="rgb(243,180,28)" fg:x="9133" fg:w="46"/><text x="21.8145%" y="1807.50"></text></g><g><title>[unknown] (41 samples, 0.10%)</title><rect x="21.8431%" y="1797" width="0.0968%" height="15" fill="rgb(208,167,24)" fg:x="9251" fg:w="41"/><text x="22.0931%" y="1807.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="21.9777%" y="1781" width="0.0189%" height="15" fill="rgb(245,73,45)" fg:x="9308" fg:w="8"/><text x="22.2277%" y="1791.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (154 samples, 0.36%)</title><rect x="21.6731%" y="1813" width="0.3636%" height="15" fill="rgb(237,203,48)" fg:x="9179" fg:w="154"/><text x="21.9231%" y="1823.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (41 samples, 0.10%)</title><rect x="21.9399%" y="1797" width="0.0968%" height="15" fill="rgb(211,197,16)" fg:x="9292" fg:w="41"/><text x="22.1899%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (17 samples, 0.04%)</title><rect x="21.9966%" y="1781" width="0.0401%" height="15" fill="rgb(243,99,51)" fg:x="9316" fg:w="17"/><text x="22.2466%" y="1791.50"></text></g><g><title>core::mem::drop (10 samples, 0.02%)</title><rect x="22.1288%" y="1797" width="0.0236%" height="15" fill="rgb(215,123,29)" fg:x="9372" fg:w="10"/><text x="22.3788%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (10 samples, 0.02%)</title><rect x="22.1288%" y="1781" width="0.0236%" height="15" fill="rgb(239,186,37)" fg:x="9372" fg:w="10"/><text x="22.3788%" y="1791.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="22.1288%" y="1765" width="0.0236%" height="15" fill="rgb(252,136,39)" fg:x="9372" fg:w="10"/><text x="22.3788%" y="1775.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (8 samples, 0.02%)</title><rect x="22.1335%" y="1749" width="0.0189%" height="15" fill="rgb(223,213,32)" fg:x="9374" fg:w="8"/><text x="22.3835%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (7 samples, 0.02%)</title><rect x="22.1359%" y="1733" width="0.0165%" height="15" fill="rgb(233,115,5)" fg:x="9375" fg:w="7"/><text x="22.3859%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.02%)</title><rect x="22.1359%" y="1717" width="0.0165%" height="15" fill="rgb(207,226,44)" fg:x="9375" fg:w="7"/><text x="22.3859%" y="1727.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="22.1548%" y="1797" width="0.0142%" height="15" fill="rgb(208,126,0)" fg:x="9383" fg:w="6"/><text x="22.4048%" y="1807.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="22.1548%" y="1781" width="0.0142%" height="15" fill="rgb(244,66,21)" fg:x="9383" fg:w="6"/><text x="22.4048%" y="1791.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (58 samples, 0.14%)</title><rect x="22.0367%" y="1813" width="0.1369%" height="15" fill="rgb(222,97,12)" fg:x="9333" fg:w="58"/><text x="22.2867%" y="1823.50"></text></g><g><title>std::sync::poison::Flag::done (5 samples, 0.01%)</title><rect x="22.2256%" y="1765" width="0.0118%" height="15" fill="rgb(219,213,19)" fg:x="9413" fg:w="5"/><text x="22.4756%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (11 samples, 0.03%)</title><rect x="22.2256%" y="1797" width="0.0260%" height="15" fill="rgb(252,169,30)" fg:x="9413" fg:w="11"/><text x="22.4756%" y="1807.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="22.2256%" y="1781" width="0.0260%" height="15" fill="rgb(206,32,51)" fg:x="9413" fg:w="11"/><text x="22.4756%" y="1791.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (6 samples, 0.01%)</title><rect x="22.2374%" y="1765" width="0.0142%" height="15" fill="rgb(250,172,42)" fg:x="9418" fg:w="6"/><text x="22.4874%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (512 samples, 1.21%)</title><rect x="22.2611%" y="1797" width="1.2089%" height="15" fill="rgb(209,34,43)" fg:x="9428" fg:w="512"/><text x="22.5111%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (509 samples, 1.20%)</title><rect x="22.2681%" y="1781" width="1.2018%" height="15" fill="rgb(223,11,35)" fg:x="9431" fg:w="509"/><text x="22.5181%" y="1791.50"></text></g><g><title>core::sync::atomic::atomic_add (509 samples, 1.20%)</title><rect x="22.2681%" y="1765" width="1.2018%" height="15" fill="rgb(251,219,26)" fg:x="9431" fg:w="509"/><text x="22.5181%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (550 samples, 1.30%)</title><rect x="22.1737%" y="1813" width="1.2986%" height="15" fill="rgb(231,119,3)" fg:x="9391" fg:w="550"/><text x="22.4237%" y="1823.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="23.5077%" y="1749" width="0.0189%" height="15" fill="rgb(216,97,11)" fg:x="9956" fg:w="8"/><text x="23.7577%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (24 samples, 0.06%)</title><rect x="23.4723%" y="1813" width="0.0567%" height="15" fill="rgb(223,59,9)" fg:x="9941" fg:w="24"/><text x="23.7223%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (13 samples, 0.03%)</title><rect x="23.4983%" y="1797" width="0.0307%" height="15" fill="rgb(233,93,31)" fg:x="9952" fg:w="13"/><text x="23.7483%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (9 samples, 0.02%)</title><rect x="23.5077%" y="1781" width="0.0213%" height="15" fill="rgb(239,81,33)" fg:x="9956" fg:w="9"/><text x="23.7577%" y="1791.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.02%)</title><rect x="23.5077%" y="1765" width="0.0213%" height="15" fill="rgb(213,120,34)" fg:x="9956" fg:w="9"/><text x="23.7577%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (11 samples, 0.03%)</title><rect x="23.5290%" y="1813" width="0.0260%" height="15" fill="rgb(243,49,53)" fg:x="9965" fg:w="11"/><text x="23.7790%" y="1823.50"></text></g><g><title>std::sync::poison::Flag::done (34 samples, 0.08%)</title><rect x="23.5573%" y="1733" width="0.0803%" height="15" fill="rgb(247,216,33)" fg:x="9977" fg:w="34"/><text x="23.8073%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (36 samples, 0.09%)</title><rect x="23.5573%" y="1765" width="0.0850%" height="15" fill="rgb(226,26,14)" fg:x="9977" fg:w="36"/><text x="23.8073%" y="1775.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.09%)</title><rect x="23.5573%" y="1749" width="0.0850%" height="15" fill="rgb(215,49,53)" fg:x="9977" fg:w="36"/><text x="23.8073%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.02%)</title><rect x="23.6423%" y="1765" width="0.0213%" height="15" fill="rgb(245,162,40)" fg:x="10013" fg:w="9"/><text x="23.8923%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.02%)</title><rect x="23.6423%" y="1749" width="0.0213%" height="15" fill="rgb(229,68,17)" fg:x="10013" fg:w="9"/><text x="23.8923%" y="1759.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (6 samples, 0.01%)</title><rect x="23.6636%" y="1765" width="0.0142%" height="15" fill="rgb(213,182,10)" fg:x="10022" fg:w="6"/><text x="23.9136%" y="1775.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (9 samples, 0.02%)</title><rect x="23.6777%" y="1701" width="0.0213%" height="15" fill="rgb(245,125,30)" fg:x="10028" fg:w="9"/><text x="23.9277%" y="1711.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (9 samples, 0.02%)</title><rect x="23.6777%" y="1685" width="0.0213%" height="15" fill="rgb(232,202,2)" fg:x="10028" fg:w="9"/><text x="23.9277%" y="1695.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (62 samples, 0.15%)</title><rect x="23.5550%" y="1813" width="0.1464%" height="15" fill="rgb(237,140,51)" fg:x="9976" fg:w="62"/><text x="23.8050%" y="1823.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (61 samples, 0.14%)</title><rect x="23.5573%" y="1797" width="0.1440%" height="15" fill="rgb(236,157,25)" fg:x="9977" fg:w="61"/><text x="23.8073%" y="1807.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (61 samples, 0.14%)</title><rect x="23.5573%" y="1781" width="0.1440%" height="15" fill="rgb(219,209,0)" fg:x="9977" fg:w="61"/><text x="23.8073%" y="1791.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (10 samples, 0.02%)</title><rect x="23.6777%" y="1765" width="0.0236%" height="15" fill="rgb(240,116,54)" fg:x="10028" fg:w="10"/><text x="23.9277%" y="1775.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.02%)</title><rect x="23.6777%" y="1749" width="0.0236%" height="15" fill="rgb(216,10,36)" fg:x="10028" fg:w="10"/><text x="23.9277%" y="1759.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.02%)</title><rect x="23.6777%" y="1733" width="0.0236%" height="15" fill="rgb(222,72,44)" fg:x="10028" fg:w="10"/><text x="23.9277%" y="1743.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (10 samples, 0.02%)</title><rect x="23.6777%" y="1717" width="0.0236%" height="15" fill="rgb(232,159,9)" fg:x="10028" fg:w="10"/><text x="23.9277%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (5 samples, 0.01%)</title><rect x="23.7911%" y="1797" width="0.0118%" height="15" fill="rgb(210,39,32)" fg:x="10076" fg:w="5"/><text x="24.0411%" y="1807.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (6 samples, 0.01%)</title><rect x="23.8100%" y="1781" width="0.0142%" height="15" fill="rgb(216,194,45)" fg:x="10084" fg:w="6"/><text x="24.0600%" y="1791.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (6 samples, 0.01%)</title><rect x="23.8100%" y="1765" width="0.0142%" height="15" fill="rgb(218,18,35)" fg:x="10084" fg:w="6"/><text x="24.0600%" y="1775.50"></text></g><g><title>core::cell::BorrowRefMut::new (6 samples, 0.01%)</title><rect x="23.8100%" y="1749" width="0.0142%" height="15" fill="rgb(207,83,51)" fg:x="10084" fg:w="6"/><text x="24.0600%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (13 samples, 0.03%)</title><rect x="23.8029%" y="1797" width="0.0307%" height="15" fill="rgb(225,63,43)" fg:x="10081" fg:w="13"/><text x="24.0529%" y="1807.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (5 samples, 0.01%)</title><rect x="23.8808%" y="1701" width="0.0118%" height="15" fill="rgb(207,57,36)" fg:x="10114" fg:w="5"/><text x="24.1308%" y="1711.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (16 samples, 0.04%)</title><rect x="23.8619%" y="1765" width="0.0378%" height="15" fill="rgb(216,99,33)" fg:x="10106" fg:w="16"/><text x="24.1119%" y="1775.50"></text></g><g><title>std::sync::condvar::Condvar::wait (8 samples, 0.02%)</title><rect x="23.8808%" y="1749" width="0.0189%" height="15" fill="rgb(225,42,16)" fg:x="10114" fg:w="8"/><text x="24.1308%" y="1759.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (8 samples, 0.02%)</title><rect x="23.8808%" y="1733" width="0.0189%" height="15" fill="rgb(220,201,45)" fg:x="10114" fg:w="8"/><text x="24.1308%" y="1743.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (8 samples, 0.02%)</title><rect x="23.8808%" y="1717" width="0.0189%" height="15" fill="rgb(225,33,4)" fg:x="10114" fg:w="8"/><text x="24.1308%" y="1727.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (12 samples, 0.03%)</title><rect x="23.9280%" y="1749" width="0.0283%" height="15" fill="rgb(224,33,50)" fg:x="10134" fg:w="12"/><text x="24.1780%" y="1759.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.03%)</title><rect x="23.9280%" y="1733" width="0.0283%" height="15" fill="rgb(246,198,51)" fg:x="10134" fg:w="12"/><text x="24.1780%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (35 samples, 0.08%)</title><rect x="23.8997%" y="1765" width="0.0826%" height="15" fill="rgb(205,22,4)" fg:x="10122" fg:w="35"/><text x="24.1497%" y="1775.50"></text></g><g><title>tokio::runtime::driver::Driver::park (11 samples, 0.03%)</title><rect x="23.9564%" y="1749" width="0.0260%" height="15" fill="rgb(206,3,8)" fg:x="10146" fg:w="11"/><text x="24.2064%" y="1759.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (11 samples, 0.03%)</title><rect x="23.9564%" y="1733" width="0.0260%" height="15" fill="rgb(251,23,15)" fg:x="10146" fg:w="11"/><text x="24.2064%" y="1743.50"></text></g><g><title>tokio::runtime::time::Driver::park (11 samples, 0.03%)</title><rect x="23.9564%" y="1717" width="0.0260%" height="15" fill="rgb(252,88,28)" fg:x="10146" fg:w="11"/><text x="24.2064%" y="1727.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (66 samples, 0.16%)</title><rect x="23.8336%" y="1797" width="0.1558%" height="15" fill="rgb(212,127,14)" fg:x="10094" fg:w="66"/><text x="24.0836%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (66 samples, 0.16%)</title><rect x="23.8336%" y="1781" width="0.1558%" height="15" fill="rgb(247,145,37)" fg:x="10094" fg:w="66"/><text x="24.0836%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (129 samples, 0.30%)</title><rect x="23.7014%" y="1813" width="0.3046%" height="15" fill="rgb(209,117,53)" fg:x="10038" fg:w="129"/><text x="23.9514%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (6 samples, 0.01%)</title><rect x="23.9918%" y="1797" width="0.0142%" height="15" fill="rgb(212,90,42)" fg:x="10161" fg:w="6"/><text x="24.2418%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (12 samples, 0.03%)</title><rect x="24.0201%" y="1765" width="0.0283%" height="15" fill="rgb(218,164,37)" fg:x="10173" fg:w="12"/><text x="24.2701%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::with_budget::ResetGuard&gt; (9 samples, 0.02%)</title><rect x="24.0272%" y="1749" width="0.0213%" height="15" fill="rgb(246,65,34)" fg:x="10176" fg:w="9"/><text x="24.2772%" y="1759.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="24.0272%" y="1733" width="0.0213%" height="15" fill="rgb(231,100,33)" fg:x="10176" fg:w="9"/><text x="24.2772%" y="1743.50"></text></g><g><title>tokio::runtime::context::budget (9 samples, 0.02%)</title><rect x="24.0272%" y="1717" width="0.0213%" height="15" fill="rgb(228,126,14)" fg:x="10176" fg:w="9"/><text x="24.2772%" y="1727.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.02%)</title><rect x="24.0272%" y="1701" width="0.0213%" height="15" fill="rgb(215,173,21)" fg:x="10176" fg:w="9"/><text x="24.2772%" y="1711.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (21 samples, 0.05%)</title><rect x="24.0485%" y="1749" width="0.0496%" height="15" fill="rgb(210,6,40)" fg:x="10185" fg:w="21"/><text x="24.2985%" y="1759.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (21 samples, 0.05%)</title><rect x="24.0485%" y="1733" width="0.0496%" height="15" fill="rgb(212,48,18)" fg:x="10185" fg:w="21"/><text x="24.2985%" y="1743.50"></text></g><g><title>core::cell::BorrowRefMut::new (21 samples, 0.05%)</title><rect x="24.0485%" y="1717" width="0.0496%" height="15" fill="rgb(230,214,11)" fg:x="10185" fg:w="21"/><text x="24.2985%" y="1727.50"></text></g><g><title>tokio::runtime::coop::budget (46 samples, 0.11%)</title><rect x="24.0201%" y="1797" width="0.1086%" height="15" fill="rgb(254,105,39)" fg:x="10173" fg:w="46"/><text x="24.2701%" y="1807.50"></text></g><g><title>tokio::runtime::coop::with_budget (46 samples, 0.11%)</title><rect x="24.0201%" y="1781" width="0.1086%" height="15" fill="rgb(245,158,5)" fg:x="10173" fg:w="46"/><text x="24.2701%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (34 samples, 0.08%)</title><rect x="24.0485%" y="1765" width="0.0803%" height="15" fill="rgb(249,208,11)" fg:x="10185" fg:w="34"/><text x="24.2985%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (59 samples, 0.14%)</title><rect x="24.0060%" y="1813" width="0.1393%" height="15" fill="rgb(210,39,28)" fg:x="10167" fg:w="59"/><text x="24.2560%" y="1823.50"></text></g><g><title>tokio::runtime::signal::Driver::process (8 samples, 0.02%)</title><rect x="24.1453%" y="1813" width="0.0189%" height="15" fill="rgb(211,56,53)" fg:x="10226" fg:w="8"/><text x="24.3953%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (8 samples, 0.02%)</title><rect x="24.2397%" y="1797" width="0.0189%" height="15" fill="rgb(226,201,30)" fg:x="10266" fg:w="8"/><text x="24.4897%" y="1807.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="24.2397%" y="1781" width="0.0189%" height="15" fill="rgb(239,101,34)" fg:x="10266" fg:w="8"/><text x="24.4897%" y="1791.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (8 samples, 0.02%)</title><rect x="24.2397%" y="1765" width="0.0189%" height="15" fill="rgb(226,209,5)" fg:x="10266" fg:w="8"/><text x="24.4897%" y="1775.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.02%)</title><rect x="24.2397%" y="1749" width="0.0189%" height="15" fill="rgb(250,105,47)" fg:x="10266" fg:w="8"/><text x="24.4897%" y="1759.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (8 samples, 0.02%)</title><rect x="24.2397%" y="1733" width="0.0189%" height="15" fill="rgb(230,72,3)" fg:x="10266" fg:w="8"/><text x="24.4897%" y="1743.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (8 samples, 0.02%)</title><rect x="24.2397%" y="1717" width="0.0189%" height="15" fill="rgb(232,218,39)" fg:x="10266" fg:w="8"/><text x="24.4897%" y="1727.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_request::{{closure}} (22 samples, 0.05%)</title><rect x="24.3129%" y="1733" width="0.0519%" height="15" fill="rgb(248,166,6)" fg:x="10297" fg:w="22"/><text x="24.5629%" y="1743.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (48 samples, 0.11%)</title><rect x="24.2586%" y="1797" width="0.1133%" height="15" fill="rgb(247,89,20)" fg:x="10274" fg:w="48"/><text x="24.5086%" y="1807.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (45 samples, 0.11%)</title><rect x="24.2657%" y="1781" width="0.1063%" height="15" fill="rgb(248,130,54)" fg:x="10277" fg:w="45"/><text x="24.5157%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (42 samples, 0.10%)</title><rect x="24.2728%" y="1765" width="0.0992%" height="15" fill="rgb(234,196,4)" fg:x="10280" fg:w="42"/><text x="24.5228%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (42 samples, 0.10%)</title><rect x="24.2728%" y="1749" width="0.0992%" height="15" fill="rgb(250,143,31)" fg:x="10280" fg:w="42"/><text x="24.5228%" y="1759.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (89 samples, 0.21%)</title><rect x="24.1641%" y="1813" width="0.2101%" height="15" fill="rgb(211,110,34)" fg:x="10234" fg:w="89"/><text x="24.4141%" y="1823.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.01%)</title><rect x="24.4073%" y="1781" width="0.0142%" height="15" fill="rgb(215,124,48)" fg:x="10337" fg:w="6"/><text x="24.6573%" y="1791.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.01%)</title><rect x="24.4073%" y="1765" width="0.0142%" height="15" fill="rgb(216,46,13)" fg:x="10337" fg:w="6"/><text x="24.6573%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (22 samples, 0.05%)</title><rect x="24.3743%" y="1813" width="0.0519%" height="15" fill="rgb(205,184,25)" fg:x="10323" fg:w="22"/><text x="24.6243%" y="1823.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (11 samples, 0.03%)</title><rect x="24.4003%" y="1797" width="0.0260%" height="15" fill="rgb(228,1,10)" fg:x="10334" fg:w="11"/><text x="24.6503%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (7 samples, 0.02%)</title><rect x="24.4262%" y="1813" width="0.0165%" height="15" fill="rgb(213,116,27)" fg:x="10345" fg:w="7"/><text x="24.6762%" y="1823.50"></text></g><g><title>core::mem::drop (6 samples, 0.01%)</title><rect x="24.4286%" y="1797" width="0.0142%" height="15" fill="rgb(241,95,50)" fg:x="10346" fg:w="6"/><text x="24.6786%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="24.4286%" y="1781" width="0.0142%" height="15" fill="rgb(238,48,32)" fg:x="10346" fg:w="6"/><text x="24.6786%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::sharded_list::ShardGuard&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt; (7 samples, 0.02%)</title><rect x="24.4876%" y="1781" width="0.0165%" height="15" fill="rgb(235,113,49)" fg:x="10371" fg:w="7"/><text x="24.7376%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="24.4876%" y="1765" width="0.0165%" height="15" fill="rgb(205,127,43)" fg:x="10371" fg:w="7"/><text x="24.7376%" y="1775.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="24.4876%" y="1749" width="0.0165%" height="15" fill="rgb(250,162,2)" fg:x="10371" fg:w="7"/><text x="24.7376%" y="1759.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (15 samples, 0.04%)</title><rect x="24.4805%" y="1797" width="0.0354%" height="15" fill="rgb(220,13,41)" fg:x="10368" fg:w="15"/><text x="24.7305%" y="1807.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (39 samples, 0.09%)</title><rect x="24.4428%" y="1813" width="0.0921%" height="15" fill="rgb(249,221,25)" fg:x="10352" fg:w="39"/><text x="24.6928%" y="1823.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (8 samples, 0.02%)</title><rect x="24.5160%" y="1797" width="0.0189%" height="15" fill="rgb(215,208,19)" fg:x="10383" fg:w="8"/><text x="24.7660%" y="1807.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (8 samples, 0.02%)</title><rect x="24.5160%" y="1781" width="0.0189%" height="15" fill="rgb(236,175,2)" fg:x="10383" fg:w="8"/><text x="24.7660%" y="1791.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="24.5160%" y="1765" width="0.0189%" height="15" fill="rgb(241,52,2)" fg:x="10383" fg:w="8"/><text x="24.7660%" y="1775.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="24.5160%" y="1749" width="0.0189%" height="15" fill="rgb(248,140,14)" fg:x="10383" fg:w="8"/><text x="24.7660%" y="1759.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (7 samples, 0.02%)</title><rect x="24.5183%" y="1733" width="0.0165%" height="15" fill="rgb(253,22,42)" fg:x="10384" fg:w="7"/><text x="24.7683%" y="1743.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (7 samples, 0.02%)</title><rect x="24.5183%" y="1717" width="0.0165%" height="15" fill="rgb(234,61,47)" fg:x="10384" fg:w="7"/><text x="24.7683%" y="1727.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.02%)</title><rect x="24.5183%" y="1701" width="0.0165%" height="15" fill="rgb(208,226,15)" fg:x="10384" fg:w="7"/><text x="24.7683%" y="1711.50"></text></g><g><title>tokio::runtime::task::raw::drop_abort_handle (20 samples, 0.05%)</title><rect x="24.5349%" y="1813" width="0.0472%" height="15" fill="rgb(217,221,4)" fg:x="10391" fg:w="20"/><text x="24.7849%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (16 samples, 0.04%)</title><rect x="24.5443%" y="1797" width="0.0378%" height="15" fill="rgb(212,174,34)" fg:x="10395" fg:w="16"/><text x="24.7943%" y="1807.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (16 samples, 0.04%)</title><rect x="24.5443%" y="1781" width="0.0378%" height="15" fill="rgb(253,83,4)" fg:x="10395" fg:w="16"/><text x="24.7943%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (5 samples, 0.01%)</title><rect x="24.5868%" y="1781" width="0.0118%" height="15" fill="rgb(250,195,49)" fg:x="10413" fg:w="5"/><text x="24.8368%" y="1791.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (13 samples, 0.03%)</title><rect x="24.5821%" y="1813" width="0.0307%" height="15" fill="rgb(241,192,25)" fg:x="10411" fg:w="13"/><text x="24.8321%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (12 samples, 0.03%)</title><rect x="24.5844%" y="1797" width="0.0283%" height="15" fill="rgb(208,124,10)" fg:x="10412" fg:w="12"/><text x="24.8344%" y="1807.50"></text></g><g><title>tokio::runtime::task::state::State::unset_join_interested (6 samples, 0.01%)</title><rect x="24.5986%" y="1781" width="0.0142%" height="15" fill="rgb(222,33,0)" fg:x="10418" fg:w="6"/><text x="24.8486%" y="1791.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (6 samples, 0.01%)</title><rect x="24.5986%" y="1765" width="0.0142%" height="15" fill="rgb(234,209,28)" fg:x="10418" fg:w="6"/><text x="24.8486%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (10 samples, 0.02%)</title><rect x="24.6812%" y="1413" width="0.0236%" height="15" fill="rgb(224,11,23)" fg:x="10453" fg:w="10"/><text x="24.9312%" y="1423.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.02%)</title><rect x="24.6812%" y="1397" width="0.0236%" height="15" fill="rgb(232,99,1)" fg:x="10453" fg:w="10"/><text x="24.9312%" y="1407.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.02%)</title><rect x="24.6812%" y="1381" width="0.0236%" height="15" fill="rgb(237,95,45)" fg:x="10453" fg:w="10"/><text x="24.9312%" y="1391.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (10 samples, 0.02%)</title><rect x="24.6812%" y="1365" width="0.0236%" height="15" fill="rgb(208,109,11)" fg:x="10453" fg:w="10"/><text x="24.9312%" y="1375.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (8 samples, 0.02%)</title><rect x="24.6860%" y="1349" width="0.0189%" height="15" fill="rgb(216,190,48)" fg:x="10455" fg:w="8"/><text x="24.9360%" y="1359.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (8 samples, 0.02%)</title><rect x="24.6860%" y="1333" width="0.0189%" height="15" fill="rgb(251,171,36)" fg:x="10455" fg:w="8"/><text x="24.9360%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (6 samples, 0.01%)</title><rect x="24.7049%" y="1413" width="0.0142%" height="15" fill="rgb(230,62,22)" fg:x="10463" fg:w="6"/><text x="24.9549%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (6 samples, 0.01%)</title><rect x="24.7049%" y="1397" width="0.0142%" height="15" fill="rgb(225,114,35)" fg:x="10463" fg:w="6"/><text x="24.9549%" y="1407.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (5 samples, 0.01%)</title><rect x="24.7261%" y="1333" width="0.0118%" height="15" fill="rgb(215,118,42)" fg:x="10472" fg:w="5"/><text x="24.9761%" y="1343.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (5 samples, 0.01%)</title><rect x="24.7261%" y="1317" width="0.0118%" height="15" fill="rgb(243,119,21)" fg:x="10472" fg:w="5"/><text x="24.9761%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (7 samples, 0.02%)</title><rect x="24.7237%" y="1397" width="0.0165%" height="15" fill="rgb(252,177,53)" fg:x="10471" fg:w="7"/><text x="24.9737%" y="1407.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.02%)</title><rect x="24.7237%" y="1381" width="0.0165%" height="15" fill="rgb(237,209,29)" fg:x="10471" fg:w="7"/><text x="24.9737%" y="1391.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.02%)</title><rect x="24.7237%" y="1365" width="0.0165%" height="15" fill="rgb(212,65,23)" fg:x="10471" fg:w="7"/><text x="24.9737%" y="1375.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (7 samples, 0.02%)</title><rect x="24.7237%" y="1349" width="0.0165%" height="15" fill="rgb(230,222,46)" fg:x="10471" fg:w="7"/><text x="24.9737%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (27 samples, 0.06%)</title><rect x="24.6789%" y="1429" width="0.0638%" height="15" fill="rgb(215,135,32)" fg:x="10452" fg:w="27"/><text x="24.9289%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (10 samples, 0.02%)</title><rect x="24.7190%" y="1413" width="0.0236%" height="15" fill="rgb(246,101,22)" fg:x="10469" fg:w="10"/><text x="24.9690%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (10 samples, 0.02%)</title><rect x="24.7426%" y="1429" width="0.0236%" height="15" fill="rgb(206,107,13)" fg:x="10479" fg:w="10"/><text x="24.9926%" y="1439.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (10 samples, 0.02%)</title><rect x="24.8631%" y="1381" width="0.0236%" height="15" fill="rgb(250,100,44)" fg:x="10530" fg:w="10"/><text x="25.1131%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.02%)</title><rect x="24.8631%" y="1365" width="0.0236%" height="15" fill="rgb(231,147,38)" fg:x="10530" fg:w="10"/><text x="25.1131%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (34 samples, 0.08%)</title><rect x="24.8253%" y="1397" width="0.0803%" height="15" fill="rgb(229,8,40)" fg:x="10514" fg:w="34"/><text x="25.0753%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (60 samples, 0.14%)</title><rect x="24.7662%" y="1429" width="0.1417%" height="15" fill="rgb(221,135,30)" fg:x="10489" fg:w="60"/><text x="25.0162%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (44 samples, 0.10%)</title><rect x="24.8040%" y="1413" width="0.1039%" height="15" fill="rgb(249,193,18)" fg:x="10505" fg:w="44"/><text x="25.0540%" y="1423.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (106 samples, 0.25%)</title><rect x="24.6624%" y="1621" width="0.2503%" height="15" fill="rgb(209,133,39)" fg:x="10445" fg:w="106"/><text x="24.9124%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (106 samples, 0.25%)</title><rect x="24.6624%" y="1605" width="0.2503%" height="15" fill="rgb(232,100,14)" fg:x="10445" fg:w="106"/><text x="24.9124%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (106 samples, 0.25%)</title><rect x="24.6624%" y="1589" width="0.2503%" height="15" fill="rgb(224,185,1)" fg:x="10445" fg:w="106"/><text x="24.9124%" y="1599.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (106 samples, 0.25%)</title><rect x="24.6624%" y="1573" width="0.2503%" height="15" fill="rgb(223,139,8)" fg:x="10445" fg:w="106"/><text x="24.9124%" y="1583.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (106 samples, 0.25%)</title><rect x="24.6624%" y="1557" width="0.2503%" height="15" fill="rgb(232,213,38)" fg:x="10445" fg:w="106"/><text x="24.9124%" y="1567.50"></text></g><g><title>tokio::runtime::context::set_scheduler (106 samples, 0.25%)</title><rect x="24.6624%" y="1541" width="0.2503%" height="15" fill="rgb(207,94,22)" fg:x="10445" fg:w="106"/><text x="24.9124%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (106 samples, 0.25%)</title><rect x="24.6624%" y="1525" width="0.2503%" height="15" fill="rgb(219,183,54)" fg:x="10445" fg:w="106"/><text x="24.9124%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (106 samples, 0.25%)</title><rect x="24.6624%" y="1509" width="0.2503%" height="15" fill="rgb(216,185,54)" fg:x="10445" fg:w="106"/><text x="24.9124%" y="1519.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (106 samples, 0.25%)</title><rect x="24.6624%" y="1493" width="0.2503%" height="15" fill="rgb(254,217,39)" fg:x="10445" fg:w="106"/><text x="24.9124%" y="1503.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (106 samples, 0.25%)</title><rect x="24.6624%" y="1477" width="0.2503%" height="15" fill="rgb(240,178,23)" fg:x="10445" fg:w="106"/><text x="24.9124%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (106 samples, 0.25%)</title><rect x="24.6624%" y="1461" width="0.2503%" height="15" fill="rgb(218,11,47)" fg:x="10445" fg:w="106"/><text x="24.9124%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (106 samples, 0.25%)</title><rect x="24.6624%" y="1445" width="0.2503%" height="15" fill="rgb(218,51,51)" fg:x="10445" fg:w="106"/><text x="24.9124%" y="1455.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (121 samples, 0.29%)</title><rect x="24.6435%" y="1653" width="0.2857%" height="15" fill="rgb(238,126,27)" fg:x="10437" fg:w="121"/><text x="24.8935%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (118 samples, 0.28%)</title><rect x="24.6505%" y="1637" width="0.2786%" height="15" fill="rgb(249,202,22)" fg:x="10440" fg:w="118"/><text x="24.9005%" y="1647.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (10 samples, 0.02%)</title><rect x="24.9339%" y="1557" width="0.0236%" height="15" fill="rgb(254,195,49)" fg:x="10560" fg:w="10"/><text x="25.1839%" y="1567.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (10 samples, 0.02%)</title><rect x="24.9339%" y="1541" width="0.0236%" height="15" fill="rgb(208,123,14)" fg:x="10560" fg:w="10"/><text x="25.1839%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (12 samples, 0.03%)</title><rect x="24.9339%" y="1621" width="0.0283%" height="15" fill="rgb(224,200,8)" fg:x="10560" fg:w="12"/><text x="25.1839%" y="1631.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="24.9339%" y="1605" width="0.0283%" height="15" fill="rgb(217,61,36)" fg:x="10560" fg:w="12"/><text x="25.1839%" y="1615.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (12 samples, 0.03%)</title><rect x="24.9339%" y="1589" width="0.0283%" height="15" fill="rgb(206,35,45)" fg:x="10560" fg:w="12"/><text x="25.1839%" y="1599.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.03%)</title><rect x="24.9339%" y="1573" width="0.0283%" height="15" fill="rgb(217,65,33)" fg:x="10560" fg:w="12"/><text x="25.1839%" y="1583.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (136 samples, 0.32%)</title><rect x="24.6435%" y="1669" width="0.3211%" height="15" fill="rgb(222,158,48)" fg:x="10437" fg:w="136"/><text x="24.8935%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (15 samples, 0.04%)</title><rect x="24.9292%" y="1653" width="0.0354%" height="15" fill="rgb(254,2,54)" fg:x="10558" fg:w="15"/><text x="25.1792%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (14 samples, 0.03%)</title><rect x="24.9315%" y="1637" width="0.0331%" height="15" fill="rgb(250,143,38)" fg:x="10559" fg:w="14"/><text x="25.1815%" y="1647.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (164 samples, 0.39%)</title><rect x="24.6340%" y="1765" width="0.3872%" height="15" fill="rgb(248,25,0)" fg:x="10433" fg:w="164"/><text x="24.8840%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (161 samples, 0.38%)</title><rect x="24.6411%" y="1749" width="0.3801%" height="15" fill="rgb(206,152,27)" fg:x="10436" fg:w="161"/><text x="24.8911%" y="1759.50"></text></g><g><title>std::panicking::try (161 samples, 0.38%)</title><rect x="24.6411%" y="1733" width="0.3801%" height="15" fill="rgb(240,77,30)" fg:x="10436" fg:w="161"/><text x="24.8911%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (160 samples, 0.38%)</title><rect x="24.6435%" y="1717" width="0.3778%" height="15" fill="rgb(231,5,3)" fg:x="10437" fg:w="160"/><text x="24.8935%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (160 samples, 0.38%)</title><rect x="24.6435%" y="1701" width="0.3778%" height="15" fill="rgb(207,226,32)" fg:x="10437" fg:w="160"/><text x="24.8935%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (160 samples, 0.38%)</title><rect x="24.6435%" y="1685" width="0.3778%" height="15" fill="rgb(222,207,47)" fg:x="10437" fg:w="160"/><text x="24.8935%" y="1695.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (24 samples, 0.06%)</title><rect x="24.9646%" y="1669" width="0.0567%" height="15" fill="rgb(229,115,45)" fg:x="10573" fg:w="24"/><text x="25.2146%" y="1679.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.01%)</title><rect x="25.0897%" y="1733" width="0.0118%" height="15" fill="rgb(224,191,6)" fg:x="10626" fg:w="5"/><text x="25.3397%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="25.0897%" y="1717" width="0.0118%" height="15" fill="rgb(230,227,24)" fg:x="10626" fg:w="5"/><text x="25.3397%" y="1727.50"></text></g><g><title>tokio::runtime::task::raw::poll (213 samples, 0.50%)</title><rect x="24.6128%" y="1813" width="0.5029%" height="15" fill="rgb(228,80,19)" fg:x="10424" fg:w="213"/><text x="24.8628%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (211 samples, 0.50%)</title><rect x="24.6175%" y="1797" width="0.4982%" height="15" fill="rgb(247,229,0)" fg:x="10426" fg:w="211"/><text x="24.8675%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (207 samples, 0.49%)</title><rect x="24.6269%" y="1781" width="0.4888%" height="15" fill="rgb(237,194,15)" fg:x="10430" fg:w="207"/><text x="24.8769%" y="1791.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (40 samples, 0.09%)</title><rect x="25.0213%" y="1765" width="0.0944%" height="15" fill="rgb(219,203,20)" fg:x="10597" fg:w="40"/><text x="25.2713%" y="1775.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (40 samples, 0.09%)</title><rect x="25.0213%" y="1749" width="0.0944%" height="15" fill="rgb(234,128,8)" fg:x="10597" fg:w="40"/><text x="25.2713%" y="1759.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::{{closure}} (5 samples, 0.01%)</title><rect x="25.1039%" y="1733" width="0.0118%" height="15" fill="rgb(248,202,8)" fg:x="10632" fg:w="5"/><text x="25.3539%" y="1743.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (5 samples, 0.01%)</title><rect x="25.1369%" y="1813" width="0.0118%" height="15" fill="rgb(206,104,37)" fg:x="10646" fg:w="5"/><text x="25.3869%" y="1823.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="25.1818%" y="1797" width="0.0189%" height="15" fill="rgb(223,8,27)" fg:x="10665" fg:w="8"/><text x="25.4318%" y="1807.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="25.1818%" y="1781" width="0.0189%" height="15" fill="rgb(216,217,28)" fg:x="10665" fg:w="8"/><text x="25.4318%" y="1791.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (5 samples, 0.01%)</title><rect x="25.1889%" y="1765" width="0.0118%" height="15" fill="rgb(249,199,1)" fg:x="10668" fg:w="5"/><text x="25.4389%" y="1775.50"></text></g><g><title>tokio::runtime::driver::Handle::time (6 samples, 0.01%)</title><rect x="25.2007%" y="1797" width="0.0142%" height="15" fill="rgb(240,85,17)" fg:x="10673" fg:w="6"/><text x="25.4507%" y="1807.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="25.2007%" y="1781" width="0.0142%" height="15" fill="rgb(206,108,45)" fg:x="10673" fg:w="6"/><text x="25.4507%" y="1791.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (6 samples, 0.01%)</title><rect x="25.2267%" y="1765" width="0.0142%" height="15" fill="rgb(245,210,41)" fg:x="10684" fg:w="6"/><text x="25.4767%" y="1775.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (13 samples, 0.03%)</title><rect x="25.2149%" y="1797" width="0.0307%" height="15" fill="rgb(206,13,37)" fg:x="10679" fg:w="13"/><text x="25.4649%" y="1807.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (9 samples, 0.02%)</title><rect x="25.2243%" y="1781" width="0.0213%" height="15" fill="rgb(250,61,18)" fg:x="10683" fg:w="9"/><text x="25.4743%" y="1791.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (42 samples, 0.10%)</title><rect x="25.1488%" y="1813" width="0.0992%" height="15" fill="rgb(235,172,48)" fg:x="10651" fg:w="42"/><text x="25.3988%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="25.3093%" y="1797" width="0.0118%" height="15" fill="rgb(249,201,17)" fg:x="10719" fg:w="5"/><text x="25.5593%" y="1807.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.01%)</title><rect x="25.3093%" y="1781" width="0.0118%" height="15" fill="rgb(219,208,6)" fg:x="10719" fg:w="5"/><text x="25.5593%" y="1791.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="25.3093%" y="1765" width="0.0118%" height="15" fill="rgb(248,31,23)" fg:x="10719" fg:w="5"/><text x="25.5593%" y="1775.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="25.3211%" y="1797" width="0.0118%" height="15" fill="rgb(245,15,42)" fg:x="10724" fg:w="5"/><text x="25.5711%" y="1807.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (28 samples, 0.07%)</title><rect x="25.3565%" y="1781" width="0.0661%" height="15" fill="rgb(222,217,39)" fg:x="10739" fg:w="28"/><text x="25.6065%" y="1791.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (8 samples, 0.02%)</title><rect x="25.4038%" y="1765" width="0.0189%" height="15" fill="rgb(210,219,27)" fg:x="10759" fg:w="8"/><text x="25.6538%" y="1775.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (8 samples, 0.02%)</title><rect x="25.4038%" y="1749" width="0.0189%" height="15" fill="rgb(252,166,36)" fg:x="10759" fg:w="8"/><text x="25.6538%" y="1759.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (12 samples, 0.03%)</title><rect x="25.4226%" y="1781" width="0.0283%" height="15" fill="rgb(245,132,34)" fg:x="10767" fg:w="12"/><text x="25.6726%" y="1791.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (10 samples, 0.02%)</title><rect x="25.4274%" y="1765" width="0.0236%" height="15" fill="rgb(236,54,3)" fg:x="10769" fg:w="10"/><text x="25.6774%" y="1775.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (10 samples, 0.02%)</title><rect x="25.4274%" y="1749" width="0.0236%" height="15" fill="rgb(241,173,43)" fg:x="10769" fg:w="10"/><text x="25.6774%" y="1759.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (61 samples, 0.14%)</title><rect x="25.3329%" y="1797" width="0.1440%" height="15" fill="rgb(215,190,9)" fg:x="10729" fg:w="61"/><text x="25.5829%" y="1807.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (11 samples, 0.03%)</title><rect x="25.4510%" y="1781" width="0.0260%" height="15" fill="rgb(242,101,16)" fg:x="10779" fg:w="11"/><text x="25.7010%" y="1791.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (11 samples, 0.03%)</title><rect x="25.4510%" y="1765" width="0.0260%" height="15" fill="rgb(223,190,21)" fg:x="10779" fg:w="11"/><text x="25.7010%" y="1775.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (103 samples, 0.24%)</title><rect x="25.2479%" y="1813" width="0.2432%" height="15" fill="rgb(215,228,25)" fg:x="10693" fg:w="103"/><text x="25.4979%" y="1823.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (6 samples, 0.01%)</title><rect x="25.4770%" y="1797" width="0.0142%" height="15" fill="rgb(225,36,22)" fg:x="10790" fg:w="6"/><text x="25.7270%" y="1807.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (6 samples, 0.01%)</title><rect x="25.4770%" y="1781" width="0.0142%" height="15" fill="rgb(251,106,46)" fg:x="10790" fg:w="6"/><text x="25.7270%" y="1791.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (50 samples, 0.12%)</title><rect x="25.4911%" y="1813" width="0.1181%" height="15" fill="rgb(208,90,1)" fg:x="10796" fg:w="50"/><text x="25.7411%" y="1823.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::{{closure}} (13 samples, 0.03%)</title><rect x="25.6092%" y="1813" width="0.0307%" height="15" fill="rgb(243,10,4)" fg:x="10846" fg:w="13"/><text x="25.8592%" y="1823.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::{{closure}}::{{closure}} (5 samples, 0.01%)</title><rect x="25.6281%" y="1797" width="0.0118%" height="15" fill="rgb(212,137,27)" fg:x="10854" fg:w="5"/><text x="25.8781%" y="1807.50"></text></g><g><title>torrust_tracker::core::Tracker::authorize::{{closure}} (10 samples, 0.02%)</title><rect x="25.6422%" y="1813" width="0.0236%" height="15" fill="rgb(231,220,49)" fg:x="10860" fg:w="10"/><text x="25.8922%" y="1823.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (5 samples, 0.01%)</title><rect x="25.6847%" y="1621" width="0.0118%" height="15" fill="rgb(237,96,20)" fg:x="10878" fg:w="5"/><text x="25.9347%" y="1631.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.01%)</title><rect x="25.6847%" y="1605" width="0.0118%" height="15" fill="rgb(239,229,30)" fg:x="10878" fg:w="5"/><text x="25.9347%" y="1615.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (5 samples, 0.01%)</title><rect x="25.6847%" y="1589" width="0.0118%" height="15" fill="rgb(219,65,33)" fg:x="10878" fg:w="5"/><text x="25.9347%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="25.6824%" y="1669" width="0.0165%" height="15" fill="rgb(243,134,7)" fg:x="10877" fg:w="7"/><text x="25.9324%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="25.6824%" y="1653" width="0.0165%" height="15" fill="rgb(216,177,54)" fg:x="10877" fg:w="7"/><text x="25.9324%" y="1663.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (6 samples, 0.01%)</title><rect x="25.6847%" y="1637" width="0.0142%" height="15" fill="rgb(211,160,20)" fg:x="10878" fg:w="6"/><text x="25.9347%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="25.6753%" y="1733" width="0.0283%" height="15" fill="rgb(239,85,39)" fg:x="10874" fg:w="12"/><text x="25.9253%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="25.6753%" y="1717" width="0.0283%" height="15" fill="rgb(232,125,22)" fg:x="10874" fg:w="12"/><text x="25.9253%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (12 samples, 0.03%)</title><rect x="25.6753%" y="1701" width="0.0283%" height="15" fill="rgb(244,57,34)" fg:x="10874" fg:w="12"/><text x="25.9253%" y="1711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.03%)</title><rect x="25.6753%" y="1685" width="0.0283%" height="15" fill="rgb(214,203,32)" fg:x="10874" fg:w="12"/><text x="25.9253%" y="1695.50"></text></g><g><title>torrust_tracker::core::torrent::Entry::get_peers_for_peer (17 samples, 0.04%)</title><rect x="25.6682%" y="1813" width="0.0401%" height="15" fill="rgb(207,58,43)" fg:x="10871" fg:w="17"/><text x="25.9182%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.03%)</title><rect x="25.6753%" y="1797" width="0.0331%" height="15" fill="rgb(215,193,15)" fg:x="10874" fg:w="14"/><text x="25.9253%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.03%)</title><rect x="25.6753%" y="1781" width="0.0331%" height="15" fill="rgb(232,15,44)" fg:x="10874" fg:w="14"/><text x="25.9253%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.03%)</title><rect x="25.6753%" y="1765" width="0.0331%" height="15" fill="rgb(212,3,48)" fg:x="10874" fg:w="14"/><text x="25.9253%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.03%)</title><rect x="25.6753%" y="1749" width="0.0331%" height="15" fill="rgb(218,128,7)" fg:x="10874" fg:w="14"/><text x="25.9253%" y="1759.50"></text></g><g><title>torrust_tracker::core::torrent::Entry::insert_or_update_peer (15 samples, 0.04%)</title><rect x="25.7249%" y="1813" width="0.0354%" height="15" fill="rgb(226,216,39)" fg:x="10895" fg:w="15"/><text x="25.9749%" y="1823.50"></text></g><g><title>torrust_tracker::core::torrent::repository::RepositoryAsyncSingle::get_torrents::{{closure}} (30 samples, 0.07%)</title><rect x="25.7603%" y="1813" width="0.0708%" height="15" fill="rgb(243,47,51)" fg:x="10910" fg:w="30"/><text x="26.0103%" y="1823.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}} (11 samples, 0.03%)</title><rect x="25.8052%" y="1797" width="0.0260%" height="15" fill="rgb(241,183,40)" fg:x="10929" fg:w="11"/><text x="26.0552%" y="1807.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}}::{{closure}} (9 samples, 0.02%)</title><rect x="25.8099%" y="1781" width="0.0213%" height="15" fill="rgb(231,217,32)" fg:x="10931" fg:w="9"/><text x="26.0599%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::get_last_time_extent (14 samples, 0.03%)</title><rect x="25.8406%" y="1813" width="0.0331%" height="15" fill="rgb(229,61,38)" fg:x="10944" fg:w="14"/><text x="26.0906%" y="1823.50"></text></g><g><title>torrust_tracker::shared::clock::time_extent::Make::now (14 samples, 0.03%)</title><rect x="25.8406%" y="1797" width="0.0331%" height="15" fill="rgb(225,210,5)" fg:x="10944" fg:w="14"/><text x="26.0906%" y="1807.50"></text></g><g><title>torrust_tracker::shared::clock::working_clock::&lt;impl torrust_tracker::shared::clock::Time for torrust_tracker::shared::clock::Clock&lt;_&gt;&gt;::now (7 samples, 0.02%)</title><rect x="25.8571%" y="1781" width="0.0165%" height="15" fill="rgb(231,79,45)" fg:x="10951" fg:w="7"/><text x="26.1071%" y="1791.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (51 samples, 0.12%)</title><rect x="26.1499%" y="1797" width="0.1204%" height="15" fill="rgb(224,100,7)" fg:x="11075" fg:w="51"/><text x="26.3999%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.03%)</title><rect x="26.2420%" y="1781" width="0.0283%" height="15" fill="rgb(241,198,18)" fg:x="11114" fg:w="12"/><text x="26.4920%" y="1791.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.03%)</title><rect x="26.2420%" y="1765" width="0.0283%" height="15" fill="rgb(252,97,53)" fg:x="11114" fg:w="12"/><text x="26.4920%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::udp::UdpSocket&gt;&gt; (12 samples, 0.03%)</title><rect x="26.2703%" y="1797" width="0.0283%" height="15" fill="rgb(220,88,7)" fg:x="11126" fg:w="12"/><text x="26.5203%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="26.2703%" y="1781" width="0.0283%" height="15" fill="rgb(213,176,14)" fg:x="11126" fg:w="12"/><text x="26.5203%" y="1791.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.01%)</title><rect x="26.2868%" y="1765" width="0.0118%" height="15" fill="rgb(246,73,7)" fg:x="11133" fg:w="5"/><text x="26.5368%" y="1775.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.01%)</title><rect x="26.2868%" y="1749" width="0.0118%" height="15" fill="rgb(245,64,36)" fg:x="11133" fg:w="5"/><text x="26.5368%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_request::{{closure}} (180 samples, 0.43%)</title><rect x="25.8807%" y="1813" width="0.4250%" height="15" fill="rgb(245,80,10)" fg:x="10961" fg:w="180"/><text x="26.1307%" y="1823.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.09%)</title><rect x="26.5324%" y="1797" width="0.0897%" height="15" fill="rgb(232,107,50)" fg:x="11237" fg:w="38"/><text x="26.7824%" y="1807.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (27 samples, 0.06%)</title><rect x="26.5584%" y="1781" width="0.0638%" height="15" fill="rgb(253,3,0)" fg:x="11248" fg:w="27"/><text x="26.8084%" y="1791.50"></text></g><g><title>core::sync::atomic::atomic_add (27 samples, 0.06%)</title><rect x="26.5584%" y="1765" width="0.0638%" height="15" fill="rgb(212,99,53)" fg:x="11248" fg:w="27"/><text x="26.8084%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker::core::Tracker&gt;&gt; (5 samples, 0.01%)</title><rect x="26.6268%" y="1797" width="0.0118%" height="15" fill="rgb(249,111,54)" fg:x="11277" fg:w="5"/><text x="26.8768%" y="1807.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="26.6268%" y="1781" width="0.0118%" height="15" fill="rgb(249,55,30)" fg:x="11277" fg:w="5"/><text x="26.8768%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet (5 samples, 0.01%)</title><rect x="26.6386%" y="1797" width="0.0118%" height="15" fill="rgb(237,47,42)" fg:x="11282" fg:w="5"/><text x="26.8886%" y="1807.50"></text></g><g><title>torrust_tracker::core::Tracker::get_torrent_peers_for_peer::{{closure}} (14 samples, 0.03%)</title><rect x="26.9834%" y="1733" width="0.0331%" height="15" fill="rgb(211,20,18)" fg:x="11428" fg:w="14"/><text x="27.2334%" y="1743.50"></text></g><g><title>torrust_tracker::core::Tracker::update_torrent_with_peer_and_get_stats::{{closure}} (27 samples, 0.06%)</title><rect x="27.0164%" y="1733" width="0.0638%" height="15" fill="rgb(231,203,46)" fg:x="11442" fg:w="27"/><text x="27.2664%" y="1743.50"></text></g><g><title>&lt;torrust_tracker::core::torrent::repository::RepositoryAsyncSingle as torrust_tracker::core::torrent::repository::TRepositoryAsync&gt;::update_torrent_with_peer_and_get_stats::{{closure}} (18 samples, 0.04%)</title><rect x="27.0377%" y="1717" width="0.0425%" height="15" fill="rgb(237,142,3)" fg:x="11451" fg:w="18"/><text x="27.2877%" y="1727.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_announce::{{closure}} (123 samples, 0.29%)</title><rect x="26.7968%" y="1765" width="0.2904%" height="15" fill="rgb(241,107,1)" fg:x="11349" fg:w="123"/><text x="27.0468%" y="1775.50"></text></g><g><title>torrust_tracker::core::Tracker::announce::{{closure}} (103 samples, 0.24%)</title><rect x="26.8441%" y="1749" width="0.2432%" height="15" fill="rgb(229,83,13)" fg:x="11369" fg:w="103"/><text x="27.0941%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_connect::{{closure}} (6 samples, 0.01%)</title><rect x="27.0873%" y="1765" width="0.0142%" height="15" fill="rgb(241,91,40)" fg:x="11472" fg:w="6"/><text x="27.3373%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_request::{{closure}} (158 samples, 0.37%)</title><rect x="26.7473%" y="1781" width="0.3731%" height="15" fill="rgb(225,3,45)" fg:x="11328" fg:w="158"/><text x="26.9973%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_scrape::{{closure}} (8 samples, 0.02%)</title><rect x="27.1014%" y="1765" width="0.0189%" height="15" fill="rgb(244,223,14)" fg:x="11478" fg:w="8"/><text x="27.3514%" y="1775.50"></text></g><g><title>torrust_tracker::core::Tracker::scrape::{{closure}} (7 samples, 0.02%)</title><rect x="27.1038%" y="1749" width="0.0165%" height="15" fill="rgb(224,124,37)" fg:x="11479" fg:w="7"/><text x="27.3538%" y="1759.50"></text></g><g><title>core::fmt::Formatter::new (7 samples, 0.02%)</title><rect x="27.1298%" y="1749" width="0.0165%" height="15" fill="rgb(251,171,30)" fg:x="11490" fg:w="7"/><text x="27.3798%" y="1759.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (19 samples, 0.04%)</title><rect x="27.1463%" y="1749" width="0.0449%" height="15" fill="rgb(236,46,54)" fg:x="11497" fg:w="19"/><text x="27.3963%" y="1759.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (18 samples, 0.04%)</title><rect x="27.1487%" y="1733" width="0.0425%" height="15" fill="rgb(245,213,5)" fg:x="11498" fg:w="18"/><text x="27.3987%" y="1743.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="27.1770%" y="1717" width="0.0142%" height="15" fill="rgb(230,144,27)" fg:x="11510" fg:w="6"/><text x="27.4270%" y="1727.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (35 samples, 0.08%)</title><rect x="27.1250%" y="1765" width="0.0826%" height="15" fill="rgb(220,86,6)" fg:x="11488" fg:w="35"/><text x="27.3750%" y="1775.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (7 samples, 0.02%)</title><rect x="27.1912%" y="1749" width="0.0165%" height="15" fill="rgb(240,20,13)" fg:x="11516" fg:w="7"/><text x="27.4412%" y="1759.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (7 samples, 0.02%)</title><rect x="27.1912%" y="1733" width="0.0165%" height="15" fill="rgb(217,89,34)" fg:x="11516" fg:w="7"/><text x="27.4412%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::logging::map_action_name (6 samples, 0.01%)</title><rect x="27.2148%" y="1765" width="0.0142%" height="15" fill="rgb(229,13,5)" fg:x="11526" fg:w="6"/><text x="27.4648%" y="1775.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5 samples, 0.01%)</title><rect x="27.2171%" y="1749" width="0.0118%" height="15" fill="rgb(244,67,35)" fg:x="11527" fg:w="5"/><text x="27.4671%" y="1759.50"></text></g><g><title>torrust_tracker::shared::bit_torrent::info_hash::InfoHash::to_hex_string (8 samples, 0.02%)</title><rect x="27.2337%" y="1765" width="0.0189%" height="15" fill="rgb(221,40,2)" fg:x="11534" fg:w="8"/><text x="27.4837%" y="1775.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (8 samples, 0.02%)</title><rect x="27.2337%" y="1749" width="0.0189%" height="15" fill="rgb(237,157,21)" fg:x="11534" fg:w="8"/><text x="27.4837%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request (58 samples, 0.14%)</title><rect x="27.1203%" y="1781" width="0.1369%" height="15" fill="rgb(222,94,11)" fg:x="11486" fg:w="58"/><text x="27.3703%" y="1791.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (7 samples, 0.02%)</title><rect x="27.2596%" y="1765" width="0.0165%" height="15" fill="rgb(249,113,6)" fg:x="11545" fg:w="7"/><text x="27.5096%" y="1775.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (273 samples, 0.64%)</title><rect x="26.6505%" y="1797" width="0.6446%" height="15" fill="rgb(238,137,36)" fg:x="11287" fg:w="273"/><text x="26.9005%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_response (16 samples, 0.04%)</title><rect x="27.2573%" y="1781" width="0.0378%" height="15" fill="rgb(210,102,26)" fg:x="11544" fg:w="16"/><text x="27.5073%" y="1791.50"></text></g><g><title>alloc::vec::from_elem (36 samples, 0.09%)</title><rect x="27.4202%" y="1781" width="0.0850%" height="15" fill="rgb(218,30,30)" fg:x="11613" fg:w="36"/><text x="27.6702%" y="1791.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (36 samples, 0.09%)</title><rect x="27.4202%" y="1765" width="0.0850%" height="15" fill="rgb(214,67,26)" fg:x="11613" fg:w="36"/><text x="27.6702%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (36 samples, 0.09%)</title><rect x="27.4202%" y="1749" width="0.0850%" height="15" fill="rgb(251,9,53)" fg:x="11613" fg:w="36"/><text x="27.6702%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (36 samples, 0.09%)</title><rect x="27.4202%" y="1733" width="0.0850%" height="15" fill="rgb(228,204,25)" fg:x="11613" fg:w="36"/><text x="27.6702%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (36 samples, 0.09%)</title><rect x="27.4202%" y="1717" width="0.0850%" height="15" fill="rgb(207,153,8)" fg:x="11613" fg:w="36"/><text x="27.6702%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.09%)</title><rect x="27.4202%" y="1701" width="0.0850%" height="15" fill="rgb(242,9,16)" fg:x="11613" fg:w="36"/><text x="27.6702%" y="1711.50"></text></g><g><title>alloc::alloc::alloc_zeroed (36 samples, 0.09%)</title><rect x="27.4202%" y="1685" width="0.0850%" height="15" fill="rgb(217,211,10)" fg:x="11613" fg:w="36"/><text x="27.6702%" y="1695.50"></text></g><g><title>__rdl_alloc_zeroed (36 samples, 0.09%)</title><rect x="27.4202%" y="1669" width="0.0850%" height="15" fill="rgb(219,228,52)" fg:x="11613" fg:w="36"/><text x="27.6702%" y="1679.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (36 samples, 0.09%)</title><rect x="27.4202%" y="1653" width="0.0850%" height="15" fill="rgb(231,92,29)" fg:x="11613" fg:w="36"/><text x="27.6702%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="27.5052%" y="1781" width="0.0118%" height="15" fill="rgb(232,8,23)" fg:x="11649" fg:w="5"/><text x="27.7552%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="27.5052%" y="1765" width="0.0118%" height="15" fill="rgb(216,211,34)" fg:x="11649" fg:w="5"/><text x="27.7552%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="27.5052%" y="1749" width="0.0118%" height="15" fill="rgb(236,151,0)" fg:x="11649" fg:w="5"/><text x="27.7552%" y="1759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="27.5052%" y="1733" width="0.0118%" height="15" fill="rgb(209,168,3)" fg:x="11649" fg:w="5"/><text x="27.7552%" y="1743.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="27.6492%" y="1717" width="0.0260%" height="15" fill="rgb(208,129,28)" fg:x="11710" fg:w="11"/><text x="27.8992%" y="1727.50"></text></g><g><title>[unknown] (14 samples, 0.03%)</title><rect x="27.7083%" y="1605" width="0.0331%" height="15" fill="rgb(229,78,22)" fg:x="11735" fg:w="14"/><text x="27.9583%" y="1615.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (646 samples, 1.53%)</title><rect x="26.3057%" y="1813" width="1.5253%" height="15" fill="rgb(228,187,13)" fg:x="11141" fg:w="646"/><text x="26.5557%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (227 samples, 0.54%)</title><rect x="27.2951%" y="1797" width="0.5360%" height="15" fill="rgb(240,119,24)" fg:x="11560" fg:w="227"/><text x="27.5451%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_packet::{{closure}} (133 samples, 0.31%)</title><rect x="27.5170%" y="1781" width="0.3140%" height="15" fill="rgb(209,194,42)" fg:x="11654" fg:w="133"/><text x="27.7670%" y="1791.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to::{{closure}} (119 samples, 0.28%)</title><rect x="27.5501%" y="1765" width="0.2810%" height="15" fill="rgb(247,200,46)" fg:x="11668" fg:w="119"/><text x="27.8001%" y="1775.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}} (111 samples, 0.26%)</title><rect x="27.5689%" y="1749" width="0.2621%" height="15" fill="rgb(218,76,16)" fg:x="11676" fg:w="111"/><text x="27.8189%" y="1759.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (93 samples, 0.22%)</title><rect x="27.6114%" y="1733" width="0.2196%" height="15" fill="rgb(225,21,48)" fg:x="11694" fg:w="93"/><text x="27.8614%" y="1743.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}}::{{closure}} (65 samples, 0.15%)</title><rect x="27.6776%" y="1717" width="0.1535%" height="15" fill="rgb(239,223,50)" fg:x="11722" fg:w="65"/><text x="27.9276%" y="1727.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to (58 samples, 0.14%)</title><rect x="27.6941%" y="1701" width="0.1369%" height="15" fill="rgb(244,45,21)" fg:x="11729" fg:w="58"/><text x="27.9441%" y="1711.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (58 samples, 0.14%)</title><rect x="27.6941%" y="1685" width="0.1369%" height="15" fill="rgb(232,33,43)" fg:x="11729" fg:w="58"/><text x="27.9441%" y="1695.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (58 samples, 0.14%)</title><rect x="27.6941%" y="1669" width="0.1369%" height="15" fill="rgb(209,8,3)" fg:x="11729" fg:w="58"/><text x="27.9441%" y="1679.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to::{{closure}} (58 samples, 0.14%)</title><rect x="27.6941%" y="1653" width="0.1369%" height="15" fill="rgb(214,25,53)" fg:x="11729" fg:w="58"/><text x="27.9441%" y="1663.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (58 samples, 0.14%)</title><rect x="27.6941%" y="1637" width="0.1369%" height="15" fill="rgb(254,186,54)" fg:x="11729" fg:w="58"/><text x="27.9441%" y="1647.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (56 samples, 0.13%)</title><rect x="27.6988%" y="1621" width="0.1322%" height="15" fill="rgb(208,174,49)" fg:x="11731" fg:w="56"/><text x="27.9488%" y="1631.50"></text></g><g><title>std::sys::pal::unix::cvt (38 samples, 0.09%)</title><rect x="27.7413%" y="1605" width="0.0897%" height="15" fill="rgb(233,191,51)" fg:x="11749" fg:w="38"/><text x="27.9913%" y="1615.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (33 samples, 0.08%)</title><rect x="27.7531%" y="1589" width="0.0779%" height="15" fill="rgb(222,134,10)" fg:x="11754" fg:w="33"/><text x="28.0031%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.01%)</title><rect x="27.8570%" y="1765" width="0.0142%" height="15" fill="rgb(230,226,20)" fg:x="11798" fg:w="6"/><text x="28.1070%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="27.8570%" y="1749" width="0.0142%" height="15" fill="rgb(251,111,25)" fg:x="11798" fg:w="6"/><text x="28.1070%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="27.8594%" y="1733" width="0.0118%" height="15" fill="rgb(224,40,46)" fg:x="11799" fg:w="5"/><text x="28.1094%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (5 samples, 0.01%)</title><rect x="27.8594%" y="1717" width="0.0118%" height="15" fill="rgb(236,108,47)" fg:x="11799" fg:w="5"/><text x="28.1094%" y="1727.50"></text></g><g><title>tokio::net::udp::UdpSocket::readable::{{closure}} (49 samples, 0.12%)</title><rect x="27.8712%" y="1765" width="0.1157%" height="15" fill="rgb(234,93,0)" fg:x="11804" fg:w="49"/><text x="28.1212%" y="1775.50"></text></g><g><title>tokio::net::udp::UdpSocket::ready::{{closure}} (49 samples, 0.12%)</title><rect x="27.8712%" y="1749" width="0.1157%" height="15" fill="rgb(224,213,32)" fg:x="11804" fg:w="49"/><text x="28.1212%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::receive_request::{{closure}} (65 samples, 0.15%)</title><rect x="27.8546%" y="1781" width="0.1535%" height="15" fill="rgb(251,11,48)" fg:x="11797" fg:w="65"/><text x="28.1046%" y="1791.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}} (9 samples, 0.02%)</title><rect x="27.9869%" y="1765" width="0.0213%" height="15" fill="rgb(236,173,5)" fg:x="11853" fg:w="9"/><text x="28.2369%" y="1775.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (7 samples, 0.02%)</title><rect x="27.9916%" y="1749" width="0.0165%" height="15" fill="rgb(230,95,12)" fg:x="11855" fg:w="7"/><text x="28.2416%" y="1759.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_with_graceful_shutdown::{{closure}}::{{closure}} (91 samples, 0.21%)</title><rect x="27.8310%" y="1813" width="0.2149%" height="15" fill="rgb(232,209,1)" fg:x="11787" fg:w="91"/><text x="28.0810%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_udp_server::{{closure}} (91 samples, 0.21%)</title><rect x="27.8310%" y="1797" width="0.2149%" height="15" fill="rgb(232,6,1)" fg:x="11787" fg:w="91"/><text x="28.0810%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::spawn_request_processor (16 samples, 0.04%)</title><rect x="28.0081%" y="1781" width="0.0378%" height="15" fill="rgb(210,224,50)" fg:x="11862" fg:w="16"/><text x="28.2581%" y="1791.50"></text></g><g><title>tokio::task::spawn::spawn (16 samples, 0.04%)</title><rect x="28.0081%" y="1765" width="0.0378%" height="15" fill="rgb(228,127,35)" fg:x="11862" fg:w="16"/><text x="28.2581%" y="1775.50"></text></g><g><title>tokio::task::spawn::spawn_inner (16 samples, 0.04%)</title><rect x="28.0081%" y="1749" width="0.0378%" height="15" fill="rgb(245,102,45)" fg:x="11862" fg:w="16"/><text x="28.2581%" y="1759.50"></text></g><g><title>tokio::runtime::context::current::with_current (16 samples, 0.04%)</title><rect x="28.0081%" y="1733" width="0.0378%" height="15" fill="rgb(214,1,49)" fg:x="11862" fg:w="16"/><text x="28.2581%" y="1743.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.04%)</title><rect x="28.0081%" y="1717" width="0.0378%" height="15" fill="rgb(226,163,40)" fg:x="11862" fg:w="16"/><text x="28.2581%" y="1727.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (16 samples, 0.04%)</title><rect x="28.0081%" y="1701" width="0.0378%" height="15" fill="rgb(239,212,28)" fg:x="11862" fg:w="16"/><text x="28.2581%" y="1711.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.04%)</title><rect x="28.0081%" y="1685" width="0.0378%" height="15" fill="rgb(220,20,13)" fg:x="11862" fg:w="16"/><text x="28.2581%" y="1695.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (16 samples, 0.04%)</title><rect x="28.0081%" y="1669" width="0.0378%" height="15" fill="rgb(210,164,35)" fg:x="11862" fg:w="16"/><text x="28.2581%" y="1679.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (16 samples, 0.04%)</title><rect x="28.0081%" y="1653" width="0.0378%" height="15" fill="rgb(248,109,41)" fg:x="11862" fg:w="16"/><text x="28.2581%" y="1663.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (16 samples, 0.04%)</title><rect x="28.0081%" y="1637" width="0.0378%" height="15" fill="rgb(238,23,50)" fg:x="11862" fg:w="16"/><text x="28.2581%" y="1647.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (16 samples, 0.04%)</title><rect x="28.0081%" y="1621" width="0.0378%" height="15" fill="rgb(211,48,49)" fg:x="11862" fg:w="16"/><text x="28.2581%" y="1631.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (15 samples, 0.04%)</title><rect x="28.0105%" y="1605" width="0.0354%" height="15" fill="rgb(223,36,21)" fg:x="11863" fg:w="15"/><text x="28.2605%" y="1615.50"></text></g><g><title>tokio::runtime::task::new_task (14 samples, 0.03%)</title><rect x="28.0128%" y="1589" width="0.0331%" height="15" fill="rgb(207,123,46)" fg:x="11864" fg:w="14"/><text x="28.2628%" y="1599.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (14 samples, 0.03%)</title><rect x="28.0128%" y="1573" width="0.0331%" height="15" fill="rgb(240,218,32)" fg:x="11864" fg:w="14"/><text x="28.2628%" y="1583.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (14 samples, 0.03%)</title><rect x="28.0128%" y="1557" width="0.0331%" height="15" fill="rgb(252,5,43)" fg:x="11864" fg:w="14"/><text x="28.2628%" y="1567.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="28.0294%" y="1541" width="0.0165%" height="15" fill="rgb(252,84,19)" fg:x="11871" fg:w="7"/><text x="28.2794%" y="1551.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.02%)</title><rect x="28.0294%" y="1525" width="0.0165%" height="15" fill="rgb(243,152,39)" fg:x="11871" fg:w="7"/><text x="28.2794%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="28.0294%" y="1509" width="0.0165%" height="15" fill="rgb(234,160,15)" fg:x="11871" fg:w="7"/><text x="28.2794%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="28.0294%" y="1493" width="0.0165%" height="15" fill="rgb(237,34,20)" fg:x="11871" fg:w="7"/><text x="28.2794%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="28.0294%" y="1477" width="0.0165%" height="15" fill="rgb(229,97,13)" fg:x="11871" fg:w="7"/><text x="28.2794%" y="1487.50"></text></g><g><title>__rdl_alloc (7 samples, 0.02%)</title><rect x="28.0294%" y="1461" width="0.0165%" height="15" fill="rgb(234,71,50)" fg:x="11871" fg:w="7"/><text x="28.2794%" y="1471.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.02%)</title><rect x="28.0294%" y="1445" width="0.0165%" height="15" fill="rgb(253,155,4)" fg:x="11871" fg:w="7"/><text x="28.2794%" y="1455.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (7 samples, 0.02%)</title><rect x="28.0294%" y="1429" width="0.0165%" height="15" fill="rgb(222,185,37)" fg:x="11871" fg:w="7"/><text x="28.2794%" y="1439.50"></text></g><g><title>tracing::span::Span::record_all (23 samples, 0.05%)</title><rect x="28.0506%" y="1813" width="0.0543%" height="15" fill="rgb(251,177,13)" fg:x="11880" fg:w="23"/><text x="28.3006%" y="1823.50"></text></g><g><title>unlink_chunk (56 samples, 0.13%)</title><rect x="28.1049%" y="1813" width="0.1322%" height="15" fill="rgb(250,179,40)" fg:x="11903" fg:w="56"/><text x="28.3549%" y="1823.50"></text></g><g><title>uuid::builder::Builder::with_variant (13 samples, 0.03%)</title><rect x="28.2395%" y="1781" width="0.0307%" height="15" fill="rgb(242,44,2)" fg:x="11960" fg:w="13"/><text x="28.4895%" y="1791.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="28.2513%" y="1765" width="0.0189%" height="15" fill="rgb(216,177,13)" fg:x="11965" fg:w="8"/><text x="28.5013%" y="1775.50"></text></g><g><title>uuid::builder::Builder::from_random_bytes (17 samples, 0.04%)</title><rect x="28.2395%" y="1797" width="0.0401%" height="15" fill="rgb(216,106,43)" fg:x="11960" fg:w="17"/><text x="28.4895%" y="1807.50"></text></g><g><title>[unknown] (7,184 samples, 16.96%)</title><rect x="11.4446%" y="1829" width="16.9626%" height="15" fill="rgb(216,183,2)" fg:x="4847" fg:w="7184"/><text x="11.6946%" y="1839.50">[unknown]</text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (72 samples, 0.17%)</title><rect x="28.2372%" y="1813" width="0.1700%" height="15" fill="rgb(249,75,3)" fg:x="11959" fg:w="72"/><text x="28.4872%" y="1823.50"></text></g><g><title>uuid::rng::bytes (54 samples, 0.13%)</title><rect x="28.2797%" y="1797" width="0.1275%" height="15" fill="rgb(219,67,39)" fg:x="11977" fg:w="54"/><text x="28.5297%" y="1807.50"></text></g><g><title>rand::random (54 samples, 0.13%)</title><rect x="28.2797%" y="1781" width="0.1275%" height="15" fill="rgb(253,228,2)" fg:x="11977" fg:w="54"/><text x="28.5297%" y="1791.50"></text></g><g><title>rand::rng::Rng::gen (52 samples, 0.12%)</title><rect x="28.2844%" y="1765" width="0.1228%" height="15" fill="rgb(235,138,27)" fg:x="11979" fg:w="52"/><text x="28.5344%" y="1775.50"></text></g><g><title>rand::distributions::other::&lt;impl rand::distributions::distribution::Distribution&lt;[T: _]&gt; for rand::distributions::Standard&gt;::sample (52 samples, 0.12%)</title><rect x="28.2844%" y="1749" width="0.1228%" height="15" fill="rgb(236,97,51)" fg:x="11979" fg:w="52"/><text x="28.5344%" y="1759.50"></text></g><g><title>rand::rng::Rng::gen (52 samples, 0.12%)</title><rect x="28.2844%" y="1733" width="0.1228%" height="15" fill="rgb(240,80,30)" fg:x="11979" fg:w="52"/><text x="28.5344%" y="1743.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u8&gt; for rand::distributions::Standard&gt;::sample (52 samples, 0.12%)</title><rect x="28.2844%" y="1717" width="0.1228%" height="15" fill="rgb(230,178,19)" fg:x="11979" fg:w="52"/><text x="28.5344%" y="1727.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (52 samples, 0.12%)</title><rect x="28.2844%" y="1701" width="0.1228%" height="15" fill="rgb(210,190,27)" fg:x="11979" fg:w="52"/><text x="28.5344%" y="1711.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (52 samples, 0.12%)</title><rect x="28.2844%" y="1685" width="0.1228%" height="15" fill="rgb(222,107,31)" fg:x="11979" fg:w="52"/><text x="28.5344%" y="1695.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (52 samples, 0.12%)</title><rect x="28.2844%" y="1669" width="0.1228%" height="15" fill="rgb(216,127,34)" fg:x="11979" fg:w="52"/><text x="28.5344%" y="1679.50"></text></g><g><title>[unknown] (24 samples, 0.06%)</title><rect x="28.3505%" y="1653" width="0.0567%" height="15" fill="rgb(234,116,52)" fg:x="12007" fg:w="24"/><text x="28.6005%" y="1663.50"></text></g><g><title>__GI___libc_free (12 samples, 0.03%)</title><rect x="28.4119%" y="1829" width="0.0283%" height="15" fill="rgb(222,124,15)" fg:x="12033" fg:w="12"/><text x="28.6619%" y="1839.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.03%)</title><rect x="28.4402%" y="1829" width="0.0260%" height="15" fill="rgb(231,179,28)" fg:x="12045" fg:w="11"/><text x="28.6902%" y="1839.50"></text></g><g><title>__memcmp_evex_movbe (15 samples, 0.04%)</title><rect x="28.4662%" y="1829" width="0.0354%" height="15" fill="rgb(226,93,45)" fg:x="12056" fg:w="15"/><text x="28.7162%" y="1839.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (15 samples, 0.04%)</title><rect x="28.5016%" y="1829" width="0.0354%" height="15" fill="rgb(215,8,51)" fg:x="12071" fg:w="15"/><text x="28.7516%" y="1839.50"></text></g><g><title>_int_free (14 samples, 0.03%)</title><rect x="28.5370%" y="1829" width="0.0331%" height="15" fill="rgb(223,106,5)" fg:x="12086" fg:w="14"/><text x="28.7870%" y="1839.50"></text></g><g><title>_int_malloc (36 samples, 0.09%)</title><rect x="28.5701%" y="1829" width="0.0850%" height="15" fill="rgb(250,191,5)" fg:x="12100" fg:w="36"/><text x="28.8201%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="28.6574%" y="1829" width="0.0142%" height="15" fill="rgb(242,132,44)" fg:x="12137" fg:w="6"/><text x="28.9074%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="28.6598%" y="1813" width="0.0118%" height="15" fill="rgb(251,152,29)" fg:x="12138" fg:w="5"/><text x="28.9098%" y="1823.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="28.6763%" y="1797" width="0.0118%" height="15" fill="rgb(218,179,5)" fg:x="12145" fg:w="5"/><text x="28.9263%" y="1807.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="28.6763%" y="1781" width="0.0118%" height="15" fill="rgb(227,67,19)" fg:x="12145" fg:w="5"/><text x="28.9263%" y="1791.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="28.6763%" y="1765" width="0.0118%" height="15" fill="rgb(233,119,31)" fg:x="12145" fg:w="5"/><text x="28.9263%" y="1775.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="28.6763%" y="1749" width="0.0118%" height="15" fill="rgb(241,120,22)" fg:x="12145" fg:w="5"/><text x="28.9263%" y="1759.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="28.6763%" y="1733" width="0.0118%" height="15" fill="rgb(224,102,30)" fg:x="12145" fg:w="5"/><text x="28.9263%" y="1743.50"></text></g><g><title>__malloc_arena_thread_freeres (7 samples, 0.02%)</title><rect x="28.6905%" y="1797" width="0.0165%" height="15" fill="rgb(210,164,37)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1807.50"></text></g><g><title>tcache_thread_shutdown (7 samples, 0.02%)</title><rect x="28.6905%" y="1781" width="0.0165%" height="15" fill="rgb(226,191,16)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1791.50"></text></g><g><title>__GI___libc_free (7 samples, 0.02%)</title><rect x="28.6905%" y="1765" width="0.0165%" height="15" fill="rgb(214,40,45)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1775.50"></text></g><g><title>_int_free (7 samples, 0.02%)</title><rect x="28.6905%" y="1749" width="0.0165%" height="15" fill="rgb(244,29,26)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1759.50"></text></g><g><title>heap_trim (7 samples, 0.02%)</title><rect x="28.6905%" y="1733" width="0.0165%" height="15" fill="rgb(216,16,5)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1743.50"></text></g><g><title>shrink_heap (7 samples, 0.02%)</title><rect x="28.6905%" y="1717" width="0.0165%" height="15" fill="rgb(249,76,35)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1727.50"></text></g><g><title>__GI_madvise (7 samples, 0.02%)</title><rect x="28.6905%" y="1701" width="0.0165%" height="15" fill="rgb(207,11,44)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1711.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="28.6905%" y="1685" width="0.0165%" height="15" fill="rgb(228,190,49)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1695.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="28.6905%" y="1669" width="0.0165%" height="15" fill="rgb(214,173,12)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1679.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="28.6905%" y="1653" width="0.0165%" height="15" fill="rgb(218,26,35)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1663.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="28.6905%" y="1637" width="0.0165%" height="15" fill="rgb(220,200,19)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1647.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="28.6905%" y="1621" width="0.0165%" height="15" fill="rgb(239,95,49)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1631.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="28.6905%" y="1605" width="0.0165%" height="15" fill="rgb(235,85,53)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1615.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="28.6905%" y="1589" width="0.0165%" height="15" fill="rgb(233,133,31)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1599.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="28.6905%" y="1573" width="0.0165%" height="15" fill="rgb(218,25,20)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1583.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="28.6905%" y="1557" width="0.0165%" height="15" fill="rgb(252,210,38)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1567.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="28.6905%" y="1541" width="0.0165%" height="15" fill="rgb(242,134,21)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1551.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="28.6905%" y="1525" width="0.0165%" height="15" fill="rgb(213,28,48)" fg:x="12151" fg:w="7"/><text x="28.9405%" y="1535.50"></text></g><g><title>advise_stack_range (12 samples, 0.03%)</title><rect x="28.7070%" y="1797" width="0.0283%" height="15" fill="rgb(250,196,2)" fg:x="12158" fg:w="12"/><text x="28.9570%" y="1807.50"></text></g><g><title>__GI_madvise (12 samples, 0.03%)</title><rect x="28.7070%" y="1781" width="0.0283%" height="15" fill="rgb(227,5,17)" fg:x="12158" fg:w="12"/><text x="28.9570%" y="1791.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="28.7070%" y="1765" width="0.0283%" height="15" fill="rgb(221,226,24)" fg:x="12158" fg:w="12"/><text x="28.9570%" y="1775.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="28.7070%" y="1749" width="0.0283%" height="15" fill="rgb(211,5,48)" fg:x="12158" fg:w="12"/><text x="28.9570%" y="1759.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="28.7070%" y="1733" width="0.0283%" height="15" fill="rgb(219,150,6)" fg:x="12158" fg:w="12"/><text x="28.9570%" y="1743.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="28.7070%" y="1717" width="0.0283%" height="15" fill="rgb(251,46,16)" fg:x="12158" fg:w="12"/><text x="28.9570%" y="1727.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="28.7070%" y="1701" width="0.0283%" height="15" fill="rgb(220,204,40)" fg:x="12158" fg:w="12"/><text x="28.9570%" y="1711.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="28.7070%" y="1685" width="0.0283%" height="15" fill="rgb(211,85,2)" fg:x="12158" fg:w="12"/><text x="28.9570%" y="1695.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="28.7070%" y="1669" width="0.0283%" height="15" fill="rgb(229,17,7)" fg:x="12158" fg:w="12"/><text x="28.9570%" y="1679.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="28.7094%" y="1653" width="0.0260%" height="15" fill="rgb(239,72,28)" fg:x="12159" fg:w="11"/><text x="28.9594%" y="1663.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="28.7094%" y="1637" width="0.0260%" height="15" fill="rgb(230,47,54)" fg:x="12159" fg:w="11"/><text x="28.9594%" y="1647.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="28.7094%" y="1621" width="0.0260%" height="15" fill="rgb(214,50,8)" fg:x="12159" fg:w="11"/><text x="28.9594%" y="1631.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="28.7094%" y="1605" width="0.0260%" height="15" fill="rgb(216,198,43)" fg:x="12159" fg:w="11"/><text x="28.9594%" y="1615.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="28.7094%" y="1589" width="0.0260%" height="15" fill="rgb(234,20,35)" fg:x="12159" fg:w="11"/><text x="28.9594%" y="1599.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (33 samples, 0.08%)</title><rect x="28.7377%" y="1589" width="0.0779%" height="15" fill="rgb(254,45,19)" fg:x="12171" fg:w="33"/><text x="28.9877%" y="1599.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_timeout (33 samples, 0.08%)</title><rect x="28.7377%" y="1573" width="0.0779%" height="15" fill="rgb(219,14,44)" fg:x="12171" fg:w="33"/><text x="28.9877%" y="1583.50"></text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (33 samples, 0.08%)</title><rect x="28.7377%" y="1557" width="0.0779%" height="15" fill="rgb(217,220,26)" fg:x="12171" fg:w="33"/><text x="28.9877%" y="1567.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (33 samples, 0.08%)</title><rect x="28.7377%" y="1541" width="0.0779%" height="15" fill="rgb(213,158,28)" fg:x="12171" fg:w="33"/><text x="28.9877%" y="1551.50"></text></g><g><title>syscall (32 samples, 0.08%)</title><rect x="28.7401%" y="1525" width="0.0756%" height="15" fill="rgb(252,51,52)" fg:x="12172" fg:w="32"/><text x="28.9901%" y="1535.50"></text></g><g><title>[unknown] (32 samples, 0.08%)</title><rect x="28.7401%" y="1509" width="0.0756%" height="15" fill="rgb(246,89,16)" fg:x="12172" fg:w="32"/><text x="28.9901%" y="1519.50"></text></g><g><title>[unknown] (32 samples, 0.08%)</title><rect x="28.7401%" y="1493" width="0.0756%" height="15" fill="rgb(216,158,49)" fg:x="12172" fg:w="32"/><text x="28.9901%" y="1503.50"></text></g><g><title>[unknown] (32 samples, 0.08%)</title><rect x="28.7401%" y="1477" width="0.0756%" height="15" fill="rgb(236,107,19)" fg:x="12172" fg:w="32"/><text x="28.9901%" y="1487.50"></text></g><g><title>[unknown] (32 samples, 0.08%)</title><rect x="28.7401%" y="1461" width="0.0756%" height="15" fill="rgb(228,185,30)" fg:x="12172" fg:w="32"/><text x="28.9901%" y="1471.50"></text></g><g><title>[unknown] (32 samples, 0.08%)</title><rect x="28.7401%" y="1445" width="0.0756%" height="15" fill="rgb(246,134,8)" fg:x="12172" fg:w="32"/><text x="28.9901%" y="1455.50"></text></g><g><title>[unknown] (32 samples, 0.08%)</title><rect x="28.7401%" y="1429" width="0.0756%" height="15" fill="rgb(214,143,50)" fg:x="12172" fg:w="32"/><text x="28.9901%" y="1439.50"></text></g><g><title>[unknown] (32 samples, 0.08%)</title><rect x="28.7401%" y="1413" width="0.0756%" height="15" fill="rgb(228,75,8)" fg:x="12172" fg:w="32"/><text x="28.9901%" y="1423.50"></text></g><g><title>[unknown] (32 samples, 0.08%)</title><rect x="28.7401%" y="1397" width="0.0756%" height="15" fill="rgb(207,175,4)" fg:x="12172" fg:w="32"/><text x="28.9901%" y="1407.50"></text></g><g><title>[unknown] (32 samples, 0.08%)</title><rect x="28.7401%" y="1381" width="0.0756%" height="15" fill="rgb(205,108,24)" fg:x="12172" fg:w="32"/><text x="28.9901%" y="1391.50"></text></g><g><title>[unknown] (31 samples, 0.07%)</title><rect x="28.7424%" y="1365" width="0.0732%" height="15" fill="rgb(244,120,49)" fg:x="12173" fg:w="31"/><text x="28.9924%" y="1375.50"></text></g><g><title>[unknown] (31 samples, 0.07%)</title><rect x="28.7424%" y="1349" width="0.0732%" height="15" fill="rgb(223,47,38)" fg:x="12173" fg:w="31"/><text x="28.9924%" y="1359.50"></text></g><g><title>[unknown] (24 samples, 0.06%)</title><rect x="28.7590%" y="1333" width="0.0567%" height="15" fill="rgb(229,179,11)" fg:x="12180" fg:w="24"/><text x="29.0090%" y="1343.50"></text></g><g><title>[unknown] (24 samples, 0.06%)</title><rect x="28.7590%" y="1317" width="0.0567%" height="15" fill="rgb(231,122,1)" fg:x="12180" fg:w="24"/><text x="29.0090%" y="1327.50"></text></g><g><title>[unknown] (16 samples, 0.04%)</title><rect x="28.7779%" y="1301" width="0.0378%" height="15" fill="rgb(245,119,9)" fg:x="12188" fg:w="16"/><text x="29.0279%" y="1311.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="28.7873%" y="1285" width="0.0283%" height="15" fill="rgb(241,163,25)" fg:x="12192" fg:w="12"/><text x="29.0373%" y="1295.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="28.7873%" y="1269" width="0.0283%" height="15" fill="rgb(217,214,3)" fg:x="12192" fg:w="12"/><text x="29.0373%" y="1279.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="28.7873%" y="1253" width="0.0283%" height="15" fill="rgb(240,86,28)" fg:x="12192" fg:w="12"/><text x="29.0373%" y="1263.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (45 samples, 0.11%)</title><rect x="28.8156%" y="1589" width="0.1063%" height="15" fill="rgb(215,47,9)" fg:x="12204" fg:w="45"/><text x="29.0656%" y="1599.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (45 samples, 0.11%)</title><rect x="28.8156%" y="1573" width="0.1063%" height="15" fill="rgb(252,25,45)" fg:x="12204" fg:w="45"/><text x="29.0656%" y="1583.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (45 samples, 0.11%)</title><rect x="28.8156%" y="1557" width="0.1063%" height="15" fill="rgb(251,164,9)" fg:x="12204" fg:w="45"/><text x="29.0656%" y="1567.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (45 samples, 0.11%)</title><rect x="28.8156%" y="1541" width="0.1063%" height="15" fill="rgb(233,194,0)" fg:x="12204" fg:w="45"/><text x="29.0656%" y="1551.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (45 samples, 0.11%)</title><rect x="28.8156%" y="1525" width="0.1063%" height="15" fill="rgb(249,111,24)" fg:x="12204" fg:w="45"/><text x="29.0656%" y="1535.50"></text></g><g><title>syscall (45 samples, 0.11%)</title><rect x="28.8156%" y="1509" width="0.1063%" height="15" fill="rgb(250,223,3)" fg:x="12204" fg:w="45"/><text x="29.0656%" y="1519.50"></text></g><g><title>[unknown] (45 samples, 0.11%)</title><rect x="28.8156%" y="1493" width="0.1063%" height="15" fill="rgb(236,178,37)" fg:x="12204" fg:w="45"/><text x="29.0656%" y="1503.50"></text></g><g><title>[unknown] (45 samples, 0.11%)</title><rect x="28.8156%" y="1477" width="0.1063%" height="15" fill="rgb(241,158,50)" fg:x="12204" fg:w="45"/><text x="29.0656%" y="1487.50"></text></g><g><title>[unknown] (45 samples, 0.11%)</title><rect x="28.8156%" y="1461" width="0.1063%" height="15" fill="rgb(213,121,41)" fg:x="12204" fg:w="45"/><text x="29.0656%" y="1471.50"></text></g><g><title>[unknown] (45 samples, 0.11%)</title><rect x="28.8156%" y="1445" width="0.1063%" height="15" fill="rgb(240,92,3)" fg:x="12204" fg:w="45"/><text x="29.0656%" y="1455.50"></text></g><g><title>[unknown] (45 samples, 0.11%)</title><rect x="28.8156%" y="1429" width="0.1063%" height="15" fill="rgb(205,123,3)" fg:x="12204" fg:w="45"/><text x="29.0656%" y="1439.50"></text></g><g><title>[unknown] (44 samples, 0.10%)</title><rect x="28.8180%" y="1413" width="0.1039%" height="15" fill="rgb(205,97,47)" fg:x="12205" fg:w="44"/><text x="29.0680%" y="1423.50"></text></g><g><title>[unknown] (44 samples, 0.10%)</title><rect x="28.8180%" y="1397" width="0.1039%" height="15" fill="rgb(247,152,14)" fg:x="12205" fg:w="44"/><text x="29.0680%" y="1407.50"></text></g><g><title>[unknown] (44 samples, 0.10%)</title><rect x="28.8180%" y="1381" width="0.1039%" height="15" fill="rgb(248,195,53)" fg:x="12205" fg:w="44"/><text x="29.0680%" y="1391.50"></text></g><g><title>[unknown] (44 samples, 0.10%)</title><rect x="28.8180%" y="1365" width="0.1039%" height="15" fill="rgb(226,201,16)" fg:x="12205" fg:w="44"/><text x="29.0680%" y="1375.50"></text></g><g><title>[unknown] (42 samples, 0.10%)</title><rect x="28.8227%" y="1349" width="0.0992%" height="15" fill="rgb(205,98,0)" fg:x="12207" fg:w="42"/><text x="29.0727%" y="1359.50"></text></g><g><title>[unknown] (34 samples, 0.08%)</title><rect x="28.8416%" y="1333" width="0.0803%" height="15" fill="rgb(214,191,48)" fg:x="12215" fg:w="34"/><text x="29.0916%" y="1343.50"></text></g><g><title>[unknown] (27 samples, 0.06%)</title><rect x="28.8581%" y="1317" width="0.0638%" height="15" fill="rgb(237,112,39)" fg:x="12222" fg:w="27"/><text x="29.1081%" y="1327.50"></text></g><g><title>[unknown] (21 samples, 0.05%)</title><rect x="28.8723%" y="1301" width="0.0496%" height="15" fill="rgb(247,203,27)" fg:x="12228" fg:w="21"/><text x="29.1223%" y="1311.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="28.9006%" y="1285" width="0.0213%" height="15" fill="rgb(235,124,28)" fg:x="12240" fg:w="9"/><text x="29.1506%" y="1295.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="28.9006%" y="1269" width="0.0213%" height="15" fill="rgb(208,207,46)" fg:x="12240" fg:w="9"/><text x="29.1506%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="28.9101%" y="1253" width="0.0118%" height="15" fill="rgb(234,176,4)" fg:x="12244" fg:w="5"/><text x="29.1601%" y="1263.50"></text></g><g><title>[[vdso]] (149 samples, 0.35%)</title><rect x="29.0069%" y="1109" width="0.3518%" height="15" fill="rgb(230,133,28)" fg:x="12285" fg:w="149"/><text x="29.2569%" y="1119.50"></text></g><g><title>__ieee754_pow_fma (6 samples, 0.01%)</title><rect x="29.3705%" y="1109" width="0.0142%" height="15" fill="rgb(211,137,40)" fg:x="12439" fg:w="6"/><text x="29.6205%" y="1119.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (168 samples, 0.40%)</title><rect x="28.9951%" y="1141" width="0.3967%" height="15" fill="rgb(254,35,13)" fg:x="12280" fg:w="168"/><text x="29.2451%" y="1151.50"></text></g><g><title>__pow (163 samples, 0.38%)</title><rect x="29.0069%" y="1125" width="0.3849%" height="15" fill="rgb(225,49,51)" fg:x="12285" fg:w="163"/><text x="29.2569%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (186 samples, 0.44%)</title><rect x="28.9668%" y="1157" width="0.4392%" height="15" fill="rgb(251,10,15)" fg:x="12268" fg:w="186"/><text x="29.2168%" y="1167.50"></text></g><g><title>std::time::Instant::now (5 samples, 0.01%)</title><rect x="29.3941%" y="1141" width="0.0118%" height="15" fill="rgb(228,207,15)" fg:x="12449" fg:w="5"/><text x="29.6441%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (5 samples, 0.01%)</title><rect x="29.3941%" y="1125" width="0.0118%" height="15" fill="rgb(241,99,19)" fg:x="12449" fg:w="5"/><text x="29.6441%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.01%)</title><rect x="29.3941%" y="1109" width="0.0118%" height="15" fill="rgb(207,104,49)" fg:x="12449" fg:w="5"/><text x="29.6441%" y="1119.50"></text></g><g><title>__GI___clock_gettime (5 samples, 0.01%)</title><rect x="29.3941%" y="1093" width="0.0118%" height="15" fill="rgb(234,99,18)" fg:x="12449" fg:w="5"/><text x="29.6441%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (11 samples, 0.03%)</title><rect x="29.4059%" y="1157" width="0.0260%" height="15" fill="rgb(213,191,49)" fg:x="12454" fg:w="11"/><text x="29.6559%" y="1167.50"></text></g><g><title>std::time::Instant::now (11 samples, 0.03%)</title><rect x="29.4059%" y="1141" width="0.0260%" height="15" fill="rgb(210,226,19)" fg:x="12454" fg:w="11"/><text x="29.6559%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (11 samples, 0.03%)</title><rect x="29.4059%" y="1125" width="0.0260%" height="15" fill="rgb(229,97,18)" fg:x="12454" fg:w="11"/><text x="29.6559%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (6 samples, 0.01%)</title><rect x="29.4177%" y="1109" width="0.0142%" height="15" fill="rgb(211,167,15)" fg:x="12459" fg:w="6"/><text x="29.6677%" y="1119.50"></text></g><g><title>__GI___clock_gettime (6 samples, 0.01%)</title><rect x="29.4177%" y="1093" width="0.0142%" height="15" fill="rgb(210,169,34)" fg:x="12459" fg:w="6"/><text x="29.6677%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (21 samples, 0.05%)</title><rect x="29.4366%" y="1157" width="0.0496%" height="15" fill="rgb(241,121,31)" fg:x="12467" fg:w="21"/><text x="29.6866%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (16 samples, 0.04%)</title><rect x="29.4484%" y="1141" width="0.0378%" height="15" fill="rgb(232,40,11)" fg:x="12472" fg:w="16"/><text x="29.6984%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (16 samples, 0.04%)</title><rect x="29.4484%" y="1125" width="0.0378%" height="15" fill="rgb(205,86,26)" fg:x="12472" fg:w="16"/><text x="29.6984%" y="1135.50"></text></g><g><title>tokio::runtime::driver::Driver::park_timeout (16 samples, 0.04%)</title><rect x="29.4484%" y="1109" width="0.0378%" height="15" fill="rgb(231,126,28)" fg:x="12472" fg:w="16"/><text x="29.6984%" y="1119.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park_timeout (16 samples, 0.04%)</title><rect x="29.4484%" y="1093" width="0.0378%" height="15" fill="rgb(219,221,18)" fg:x="12472" fg:w="16"/><text x="29.6984%" y="1103.50"></text></g><g><title>tokio::runtime::time::Driver::park_timeout (16 samples, 0.04%)</title><rect x="29.4484%" y="1077" width="0.0378%" height="15" fill="rgb(211,40,0)" fg:x="12472" fg:w="16"/><text x="29.6984%" y="1087.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (14 samples, 0.03%)</title><rect x="29.4532%" y="1061" width="0.0331%" height="15" fill="rgb(239,85,43)" fg:x="12474" fg:w="14"/><text x="29.7032%" y="1071.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (14 samples, 0.03%)</title><rect x="29.4532%" y="1045" width="0.0331%" height="15" fill="rgb(231,55,21)" fg:x="12474" fg:w="14"/><text x="29.7032%" y="1055.50"></text></g><g><title>mio::poll::Poll::poll (14 samples, 0.03%)</title><rect x="29.4532%" y="1029" width="0.0331%" height="15" fill="rgb(225,184,43)" fg:x="12474" fg:w="14"/><text x="29.7032%" y="1039.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (14 samples, 0.03%)</title><rect x="29.4532%" y="1013" width="0.0331%" height="15" fill="rgb(251,158,41)" fg:x="12474" fg:w="14"/><text x="29.7032%" y="1023.50"></text></g><g><title>epoll_wait (14 samples, 0.03%)</title><rect x="29.4532%" y="997" width="0.0331%" height="15" fill="rgb(234,159,37)" fg:x="12474" fg:w="14"/><text x="29.7032%" y="1007.50"></text></g><g><title>[unknown] (14 samples, 0.03%)</title><rect x="29.4532%" y="981" width="0.0331%" height="15" fill="rgb(216,204,22)" fg:x="12474" fg:w="14"/><text x="29.7032%" y="991.50"></text></g><g><title>[unknown] (14 samples, 0.03%)</title><rect x="29.4532%" y="965" width="0.0331%" height="15" fill="rgb(214,17,3)" fg:x="12474" fg:w="14"/><text x="29.7032%" y="975.50"></text></g><g><title>[unknown] (14 samples, 0.03%)</title><rect x="29.4532%" y="949" width="0.0331%" height="15" fill="rgb(212,111,17)" fg:x="12474" fg:w="14"/><text x="29.7032%" y="959.50"></text></g><g><title>[unknown] (14 samples, 0.03%)</title><rect x="29.4532%" y="933" width="0.0331%" height="15" fill="rgb(221,157,24)" fg:x="12474" fg:w="14"/><text x="29.7032%" y="943.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="29.4579%" y="917" width="0.0283%" height="15" fill="rgb(252,16,13)" fg:x="12476" fg:w="12"/><text x="29.7079%" y="927.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="29.4602%" y="901" width="0.0260%" height="15" fill="rgb(221,62,2)" fg:x="12477" fg:w="11"/><text x="29.7102%" y="911.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="29.4697%" y="885" width="0.0165%" height="15" fill="rgb(247,87,22)" fg:x="12481" fg:w="7"/><text x="29.7197%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.03%)</title><rect x="29.5665%" y="1141" width="0.0260%" height="15" fill="rgb(215,73,9)" fg:x="12522" fg:w="11"/><text x="29.8165%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (11 samples, 0.03%)</title><rect x="29.5665%" y="1125" width="0.0260%" height="15" fill="rgb(207,175,33)" fg:x="12522" fg:w="11"/><text x="29.8165%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (11 samples, 0.03%)</title><rect x="29.5665%" y="1109" width="0.0260%" height="15" fill="rgb(243,129,54)" fg:x="12522" fg:w="11"/><text x="29.8165%" y="1119.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (6 samples, 0.01%)</title><rect x="29.6302%" y="1093" width="0.0142%" height="15" fill="rgb(227,119,45)" fg:x="12549" fg:w="6"/><text x="29.8802%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (5 samples, 0.01%)</title><rect x="29.6539%" y="1077" width="0.0118%" height="15" fill="rgb(205,109,36)" fg:x="12559" fg:w="5"/><text x="29.9039%" y="1087.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="29.6539%" y="1061" width="0.0118%" height="15" fill="rgb(205,6,39)" fg:x="12559" fg:w="5"/><text x="29.9039%" y="1071.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (5 samples, 0.01%)</title><rect x="29.6539%" y="1045" width="0.0118%" height="15" fill="rgb(221,32,16)" fg:x="12559" fg:w="5"/><text x="29.9039%" y="1055.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (8 samples, 0.02%)</title><rect x="29.7294%" y="1013" width="0.0189%" height="15" fill="rgb(228,144,50)" fg:x="12591" fg:w="8"/><text x="29.9794%" y="1023.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (2,806 samples, 6.63%)</title><rect x="29.6727%" y="1029" width="6.6254%" height="15" fill="rgb(229,201,53)" fg:x="12567" fg:w="2806"/><text x="29.9227%" y="1039.50">std::sys:..</text></g><g><title>syscall (2,774 samples, 6.55%)</title><rect x="29.7483%" y="1013" width="6.5499%" height="15" fill="rgb(249,153,27)" fg:x="12599" fg:w="2774"/><text x="29.9983%" y="1023.50">syscall</text></g><g><title>[unknown] (2,721 samples, 6.42%)</title><rect x="29.8734%" y="997" width="6.4247%" height="15" fill="rgb(227,106,25)" fg:x="12652" fg:w="2721"/><text x="30.1234%" y="1007.50">[unknown]</text></g><g><title>[unknown] (2,688 samples, 6.35%)</title><rect x="29.9514%" y="981" width="6.3468%" height="15" fill="rgb(230,65,29)" fg:x="12685" fg:w="2688"/><text x="30.2014%" y="991.50">[unknown]</text></g><g><title>[unknown] (2,633 samples, 6.22%)</title><rect x="30.0812%" y="965" width="6.2169%" height="15" fill="rgb(221,57,46)" fg:x="12740" fg:w="2633"/><text x="30.3312%" y="975.50">[unknown]</text></g><g><title>[unknown] (2,595 samples, 6.13%)</title><rect x="30.1709%" y="949" width="6.1272%" height="15" fill="rgb(229,161,17)" fg:x="12778" fg:w="2595"/><text x="30.4209%" y="959.50">[unknown]</text></g><g><title>[unknown] (2,514 samples, 5.94%)</title><rect x="30.3622%" y="933" width="5.9360%" height="15" fill="rgb(222,213,11)" fg:x="12859" fg:w="2514"/><text x="30.6122%" y="943.50">[unknown]</text></g><g><title>[unknown] (2,379 samples, 5.62%)</title><rect x="30.6810%" y="917" width="5.6172%" height="15" fill="rgb(235,35,13)" fg:x="12994" fg:w="2379"/><text x="30.9310%" y="927.50">[unknow..</text></g><g><title>[unknown] (2,149 samples, 5.07%)</title><rect x="31.2240%" y="901" width="5.0741%" height="15" fill="rgb(233,158,34)" fg:x="13224" fg:w="2149"/><text x="31.4740%" y="911.50">[unkno..</text></g><g><title>[unknown] (1,931 samples, 4.56%)</title><rect x="31.7388%" y="885" width="4.5594%" height="15" fill="rgb(215,151,48)" fg:x="13442" fg:w="1931"/><text x="31.9888%" y="895.50">[unkn..</text></g><g><title>[unknown] (1,811 samples, 4.28%)</title><rect x="32.0221%" y="869" width="4.2761%" height="15" fill="rgb(229,84,14)" fg:x="13562" fg:w="1811"/><text x="32.2721%" y="879.50">[unkn..</text></g><g><title>[unknown] (1,582 samples, 3.74%)</title><rect x="32.5628%" y="853" width="3.7354%" height="15" fill="rgb(229,68,14)" fg:x="13791" fg:w="1582"/><text x="32.8128%" y="863.50">[unk..</text></g><g><title>[unknown] (1,264 samples, 2.98%)</title><rect x="33.3137%" y="837" width="2.9845%" height="15" fill="rgb(243,106,26)" fg:x="14109" fg:w="1264"/><text x="33.5637%" y="847.50">[un..</text></g><g><title>[unknown] (954 samples, 2.25%)</title><rect x="34.0456%" y="821" width="2.2526%" height="15" fill="rgb(206,45,38)" fg:x="14419" fg:w="954"/><text x="34.2956%" y="831.50">[..</text></g><g><title>[unknown] (635 samples, 1.50%)</title><rect x="34.7988%" y="805" width="1.4993%" height="15" fill="rgb(226,6,15)" fg:x="14738" fg:w="635"/><text x="35.0488%" y="815.50"></text></g><g><title>[unknown] (334 samples, 0.79%)</title><rect x="35.5095%" y="789" width="0.7886%" height="15" fill="rgb(232,22,54)" fg:x="15039" fg:w="334"/><text x="35.7595%" y="799.50"></text></g><g><title>[unknown] (250 samples, 0.59%)</title><rect x="35.7079%" y="773" width="0.5903%" height="15" fill="rgb(229,222,32)" fg:x="15123" fg:w="250"/><text x="35.9579%" y="783.50"></text></g><g><title>[unknown] (186 samples, 0.44%)</title><rect x="35.8590%" y="757" width="0.4392%" height="15" fill="rgb(228,62,29)" fg:x="15187" fg:w="186"/><text x="36.1090%" y="767.50"></text></g><g><title>[unknown] (154 samples, 0.36%)</title><rect x="35.9345%" y="741" width="0.3636%" height="15" fill="rgb(251,103,34)" fg:x="15219" fg:w="154"/><text x="36.1845%" y="751.50"></text></g><g><title>[unknown] (28 samples, 0.07%)</title><rect x="36.2321%" y="725" width="0.0661%" height="15" fill="rgb(233,12,30)" fg:x="15345" fg:w="28"/><text x="36.4821%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (34 samples, 0.08%)</title><rect x="36.2982%" y="1013" width="0.0803%" height="15" fill="rgb(238,52,0)" fg:x="15373" fg:w="34"/><text x="36.5482%" y="1023.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (34 samples, 0.08%)</title><rect x="36.2982%" y="997" width="0.0803%" height="15" fill="rgb(223,98,5)" fg:x="15373" fg:w="34"/><text x="36.5482%" y="1007.50"></text></g><g><title>std::sync::condvar::Condvar::wait (2,843 samples, 6.71%)</title><rect x="29.6727%" y="1077" width="6.7128%" height="15" fill="rgb(228,75,37)" fg:x="12567" fg:w="2843"/><text x="29.9227%" y="1087.50">std::sync..</text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait (2,843 samples, 6.71%)</title><rect x="29.6727%" y="1061" width="6.7128%" height="15" fill="rgb(205,115,49)" fg:x="12567" fg:w="2843"/><text x="29.9227%" y="1071.50">std::sys:..</text></g><g><title>std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (2,843 samples, 6.71%)</title><rect x="29.6727%" y="1045" width="6.7128%" height="15" fill="rgb(250,154,43)" fg:x="12567" fg:w="2843"/><text x="29.9227%" y="1055.50">std::sys:..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (37 samples, 0.09%)</title><rect x="36.2982%" y="1029" width="0.0874%" height="15" fill="rgb(226,43,29)" fg:x="15373" fg:w="37"/><text x="36.5482%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (2,863 samples, 6.76%)</title><rect x="29.6515%" y="1093" width="6.7600%" height="15" fill="rgb(249,228,39)" fg:x="12558" fg:w="2863"/><text x="29.9015%" y="1103.50">tokio::ru..</text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.03%)</title><rect x="36.3855%" y="1077" width="0.0260%" height="15" fill="rgb(216,79,43)" fg:x="15410" fg:w="11"/><text x="36.6355%" y="1087.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="36.3973%" y="1061" width="0.0142%" height="15" fill="rgb(228,95,12)" fg:x="15415" fg:w="6"/><text x="36.6473%" y="1071.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (6 samples, 0.01%)</title><rect x="36.3973%" y="1045" width="0.0142%" height="15" fill="rgb(249,221,15)" fg:x="15415" fg:w="6"/><text x="36.6473%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (6 samples, 0.01%)</title><rect x="36.3973%" y="1029" width="0.0142%" height="15" fill="rgb(233,34,13)" fg:x="15415" fg:w="6"/><text x="36.6473%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.01%)</title><rect x="36.3973%" y="1013" width="0.0142%" height="15" fill="rgb(214,103,39)" fg:x="15415" fg:w="6"/><text x="36.6473%" y="1023.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (15 samples, 0.04%)</title><rect x="36.4328%" y="1013" width="0.0354%" height="15" fill="rgb(251,126,39)" fg:x="15430" fg:w="15"/><text x="36.6828%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (7 samples, 0.02%)</title><rect x="36.4682%" y="1013" width="0.0165%" height="15" fill="rgb(214,216,36)" fg:x="15445" fg:w="7"/><text x="36.7182%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.01%)</title><rect x="36.5201%" y="997" width="0.0118%" height="15" fill="rgb(220,221,8)" fg:x="15467" fg:w="5"/><text x="36.7701%" y="1007.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.01%)</title><rect x="36.5201%" y="981" width="0.0118%" height="15" fill="rgb(240,216,3)" fg:x="15467" fg:w="5"/><text x="36.7701%" y="991.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="36.5201%" y="965" width="0.0118%" height="15" fill="rgb(232,218,17)" fg:x="15467" fg:w="5"/><text x="36.7701%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (6 samples, 0.01%)</title><rect x="36.5414%" y="981" width="0.0142%" height="15" fill="rgb(229,163,45)" fg:x="15476" fg:w="6"/><text x="36.7914%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (14 samples, 0.03%)</title><rect x="36.5319%" y="997" width="0.0331%" height="15" fill="rgb(231,110,42)" fg:x="15472" fg:w="14"/><text x="36.7819%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (37 samples, 0.09%)</title><rect x="36.4894%" y="1013" width="0.0874%" height="15" fill="rgb(208,170,48)" fg:x="15454" fg:w="37"/><text x="36.7394%" y="1023.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (5 samples, 0.01%)</title><rect x="36.5650%" y="997" width="0.0118%" height="15" fill="rgb(239,116,25)" fg:x="15486" fg:w="5"/><text x="36.8150%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5 samples, 0.01%)</title><rect x="36.5650%" y="981" width="0.0118%" height="15" fill="rgb(219,200,50)" fg:x="15486" fg:w="5"/><text x="36.8150%" y="991.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (65 samples, 0.15%)</title><rect x="36.4328%" y="1029" width="0.1535%" height="15" fill="rgb(245,200,0)" fg:x="15430" fg:w="65"/><text x="36.6828%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.04%)</title><rect x="36.6216%" y="981" width="0.0425%" height="15" fill="rgb(245,119,33)" fg:x="15510" fg:w="18"/><text x="36.8716%" y="991.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.05%)</title><rect x="36.6193%" y="997" width="0.0472%" height="15" fill="rgb(231,125,12)" fg:x="15509" fg:w="20"/><text x="36.8693%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (7 samples, 0.02%)</title><rect x="36.6996%" y="965" width="0.0165%" height="15" fill="rgb(216,96,41)" fg:x="15543" fg:w="7"/><text x="36.9496%" y="975.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select::{{closure}} (7 samples, 0.02%)</title><rect x="36.6996%" y="949" width="0.0165%" height="15" fill="rgb(248,43,45)" fg:x="15543" fg:w="7"/><text x="36.9496%" y="959.50"></text></g><g><title>[[vdso]] (17 samples, 0.04%)</title><rect x="36.8200%" y="949" width="0.0401%" height="15" fill="rgb(217,222,7)" fg:x="15594" fg:w="17"/><text x="37.0700%" y="959.50"></text></g><g><title>[unknown] (3,290 samples, 7.77%)</title><rect x="36.8601%" y="949" width="7.7682%" height="15" fill="rgb(233,28,6)" fg:x="15611" fg:w="3290"/><text x="37.1101%" y="959.50">[unknown]</text></g><g><title>[unknown] (3,266 samples, 7.71%)</title><rect x="36.9168%" y="933" width="7.7116%" height="15" fill="rgb(231,218,15)" fg:x="15635" fg:w="3266"/><text x="37.1668%" y="943.50">[unknown]</text></g><g><title>[unknown] (3,253 samples, 7.68%)</title><rect x="36.9475%" y="917" width="7.6809%" height="15" fill="rgb(226,171,48)" fg:x="15648" fg:w="3253"/><text x="37.1975%" y="927.50">[unknown]</text></g><g><title>[unknown] (3,203 samples, 7.56%)</title><rect x="37.0655%" y="901" width="7.5628%" height="15" fill="rgb(235,201,9)" fg:x="15698" fg:w="3203"/><text x="37.3155%" y="911.50">[unknown]</text></g><g><title>[unknown] (3,044 samples, 7.19%)</title><rect x="37.4410%" y="885" width="7.1874%" height="15" fill="rgb(217,80,15)" fg:x="15857" fg:w="3044"/><text x="37.6910%" y="895.50">[unknown]</text></g><g><title>[unknown] (2,959 samples, 6.99%)</title><rect x="37.6417%" y="869" width="6.9867%" height="15" fill="rgb(219,152,8)" fg:x="15942" fg:w="2959"/><text x="37.8917%" y="879.50">[unknown]</text></g><g><title>[unknown] (2,283 samples, 5.39%)</title><rect x="39.2378%" y="853" width="5.3905%" height="15" fill="rgb(243,107,38)" fg:x="16618" fg:w="2283"/><text x="39.4878%" y="863.50">[unknow..</text></g><g><title>[unknown] (1,822 samples, 4.30%)</title><rect x="40.3263%" y="837" width="4.3020%" height="15" fill="rgb(231,17,5)" fg:x="17079" fg:w="1822"/><text x="40.5763%" y="847.50">[unkn..</text></g><g><title>[unknown] (1,568 samples, 3.70%)</title><rect x="40.9260%" y="821" width="3.7023%" height="15" fill="rgb(209,25,54)" fg:x="17333" fg:w="1568"/><text x="41.1760%" y="831.50">[unk..</text></g><g><title>[unknown] (1,352 samples, 3.19%)</title><rect x="41.4361%" y="805" width="3.1923%" height="15" fill="rgb(219,0,2)" fg:x="17549" fg:w="1352"/><text x="41.6861%" y="815.50">[un..</text></g><g><title>[unknown] (910 samples, 2.15%)</title><rect x="42.4797%" y="789" width="2.1487%" height="15" fill="rgb(246,9,5)" fg:x="17991" fg:w="910"/><text x="42.7297%" y="799.50">[..</text></g><g><title>[unknown] (688 samples, 1.62%)</title><rect x="43.0039%" y="773" width="1.6245%" height="15" fill="rgb(226,159,4)" fg:x="18213" fg:w="688"/><text x="43.2539%" y="783.50"></text></g><g><title>[unknown] (498 samples, 1.18%)</title><rect x="43.4525%" y="757" width="1.1759%" height="15" fill="rgb(219,175,34)" fg:x="18403" fg:w="498"/><text x="43.7025%" y="767.50"></text></g><g><title>[unknown] (326 samples, 0.77%)</title><rect x="43.8586%" y="741" width="0.7697%" height="15" fill="rgb(236,10,46)" fg:x="18575" fg:w="326"/><text x="44.1086%" y="751.50"></text></g><g><title>[unknown] (119 samples, 0.28%)</title><rect x="44.3474%" y="725" width="0.2810%" height="15" fill="rgb(240,211,16)" fg:x="18782" fg:w="119"/><text x="44.5974%" y="735.50"></text></g><g><title>[unknown] (101 samples, 0.24%)</title><rect x="44.3899%" y="709" width="0.2385%" height="15" fill="rgb(205,3,43)" fg:x="18800" fg:w="101"/><text x="44.6399%" y="719.50"></text></g><g><title>[unknown] (65 samples, 0.15%)</title><rect x="44.4749%" y="693" width="0.1535%" height="15" fill="rgb(245,7,22)" fg:x="18836" fg:w="65"/><text x="44.7249%" y="703.50"></text></g><g><title>[unknown] (61 samples, 0.14%)</title><rect x="44.4843%" y="677" width="0.1440%" height="15" fill="rgb(239,132,32)" fg:x="18840" fg:w="61"/><text x="44.7343%" y="687.50"></text></g><g><title>[unknown] (20 samples, 0.05%)</title><rect x="44.5811%" y="661" width="0.0472%" height="15" fill="rgb(228,202,34)" fg:x="18881" fg:w="20"/><text x="44.8311%" y="671.50"></text></g><g><title>mio::poll::Poll::poll (3,385 samples, 7.99%)</title><rect x="36.6665%" y="997" width="7.9925%" height="15" fill="rgb(254,200,22)" fg:x="15529" fg:w="3385"/><text x="36.9165%" y="1007.50">mio::poll::..</text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (3,385 samples, 7.99%)</title><rect x="36.6665%" y="981" width="7.9925%" height="15" fill="rgb(219,10,39)" fg:x="15529" fg:w="3385"/><text x="36.9165%" y="991.50">mio::sys::u..</text></g><g><title>epoll_wait (3,364 samples, 7.94%)</title><rect x="36.7161%" y="965" width="7.9430%" height="15" fill="rgb(226,210,39)" fg:x="15550" fg:w="3364"/><text x="36.9661%" y="975.50">epoll_wait</text></g><g><title>__GI___pthread_disable_asynccancel (13 samples, 0.03%)</title><rect x="44.6284%" y="949" width="0.0307%" height="15" fill="rgb(208,219,16)" fg:x="18901" fg:w="13"/><text x="44.8784%" y="959.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (46 samples, 0.11%)</title><rect x="44.6685%" y="997" width="0.1086%" height="15" fill="rgb(216,158,51)" fg:x="18918" fg:w="46"/><text x="44.9185%" y="1007.50"></text></g><g><title>tokio::util::bit::Pack::pack (34 samples, 0.08%)</title><rect x="44.6968%" y="981" width="0.0803%" height="15" fill="rgb(233,14,44)" fg:x="18930" fg:w="34"/><text x="44.9468%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (7 samples, 0.02%)</title><rect x="44.8479%" y="933" width="0.0165%" height="15" fill="rgb(237,97,39)" fg:x="18994" fg:w="7"/><text x="45.0979%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (7 samples, 0.02%)</title><rect x="44.8479%" y="917" width="0.0165%" height="15" fill="rgb(218,198,43)" fg:x="18994" fg:w="7"/><text x="45.0979%" y="927.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (3,497 samples, 8.26%)</title><rect x="36.6146%" y="1013" width="8.2570%" height="15" fill="rgb(231,104,20)" fg:x="15507" fg:w="3497"/><text x="36.8646%" y="1023.50">tokio::runt..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (40 samples, 0.09%)</title><rect x="44.7771%" y="997" width="0.0944%" height="15" fill="rgb(254,36,13)" fg:x="18964" fg:w="40"/><text x="45.0271%" y="1007.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.03%)</title><rect x="44.8409%" y="981" width="0.0307%" height="15" fill="rgb(248,14,50)" fg:x="18991" fg:w="13"/><text x="45.0909%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.03%)</title><rect x="44.8409%" y="965" width="0.0307%" height="15" fill="rgb(217,107,29)" fg:x="18991" fg:w="13"/><text x="45.0909%" y="975.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (12 samples, 0.03%)</title><rect x="44.8432%" y="949" width="0.0283%" height="15" fill="rgb(251,169,33)" fg:x="18992" fg:w="12"/><text x="45.0932%" y="959.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (7 samples, 0.02%)</title><rect x="44.8716%" y="1013" width="0.0165%" height="15" fill="rgb(217,108,32)" fg:x="19004" fg:w="7"/><text x="45.1216%" y="1023.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (7 samples, 0.02%)</title><rect x="44.8716%" y="997" width="0.0165%" height="15" fill="rgb(219,66,42)" fg:x="19004" fg:w="7"/><text x="45.1216%" y="1007.50"></text></g><g><title>tokio::time::clock::Clock::now (6 samples, 0.01%)</title><rect x="44.8739%" y="981" width="0.0142%" height="15" fill="rgb(206,180,7)" fg:x="19005" fg:w="6"/><text x="45.1239%" y="991.50"></text></g><g><title>tokio::time::clock::now (6 samples, 0.01%)</title><rect x="44.8739%" y="965" width="0.0142%" height="15" fill="rgb(208,226,31)" fg:x="19005" fg:w="6"/><text x="45.1239%" y="975.50"></text></g><g><title>std::time::Instant::now (6 samples, 0.01%)</title><rect x="44.8739%" y="949" width="0.0142%" height="15" fill="rgb(218,26,49)" fg:x="19005" fg:w="6"/><text x="45.1239%" y="959.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (6 samples, 0.01%)</title><rect x="44.8739%" y="933" width="0.0142%" height="15" fill="rgb(233,197,48)" fg:x="19005" fg:w="6"/><text x="45.1239%" y="943.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.01%)</title><rect x="44.8763%" y="917" width="0.0118%" height="15" fill="rgb(252,181,51)" fg:x="19006" fg:w="5"/><text x="45.1263%" y="927.50"></text></g><g><title>__GI___clock_gettime (5 samples, 0.01%)</title><rect x="44.8763%" y="901" width="0.0118%" height="15" fill="rgb(253,90,19)" fg:x="19006" fg:w="5"/><text x="45.1263%" y="911.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (6 samples, 0.01%)</title><rect x="44.8975%" y="901" width="0.0142%" height="15" fill="rgb(215,171,30)" fg:x="19015" fg:w="6"/><text x="45.1475%" y="911.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (10 samples, 0.02%)</title><rect x="44.8904%" y="1013" width="0.0236%" height="15" fill="rgb(214,222,9)" fg:x="19012" fg:w="10"/><text x="45.1404%" y="1023.50"></text></g><g><title>tokio::time::clock::Clock::now (10 samples, 0.02%)</title><rect x="44.8904%" y="997" width="0.0236%" height="15" fill="rgb(223,3,22)" fg:x="19012" fg:w="10"/><text x="45.1404%" y="1007.50"></text></g><g><title>tokio::time::clock::now (10 samples, 0.02%)</title><rect x="44.8904%" y="981" width="0.0236%" height="15" fill="rgb(225,196,46)" fg:x="19012" fg:w="10"/><text x="45.1404%" y="991.50"></text></g><g><title>std::time::Instant::now (10 samples, 0.02%)</title><rect x="44.8904%" y="965" width="0.0236%" height="15" fill="rgb(209,110,37)" fg:x="19012" fg:w="10"/><text x="45.1404%" y="975.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (10 samples, 0.02%)</title><rect x="44.8904%" y="949" width="0.0236%" height="15" fill="rgb(249,89,12)" fg:x="19012" fg:w="10"/><text x="45.1404%" y="959.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (10 samples, 0.02%)</title><rect x="44.8904%" y="933" width="0.0236%" height="15" fill="rgb(226,27,33)" fg:x="19012" fg:w="10"/><text x="45.1404%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (7 samples, 0.02%)</title><rect x="44.8975%" y="917" width="0.0165%" height="15" fill="rgb(213,82,22)" fg:x="19015" fg:w="7"/><text x="45.1475%" y="927.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (3,528 samples, 8.33%)</title><rect x="36.5862%" y="1029" width="8.3302%" height="15" fill="rgb(248,140,0)" fg:x="15495" fg:w="3528"/><text x="36.8362%" y="1039.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (3,603 samples, 8.51%)</title><rect x="36.4115%" y="1093" width="8.5073%" height="15" fill="rgb(228,106,3)" fg:x="15421" fg:w="3603"/><text x="36.6615%" y="1103.50">tokio::runti..</text></g><g><title>tokio::runtime::driver::Driver::park (3,602 samples, 8.50%)</title><rect x="36.4139%" y="1077" width="8.5049%" height="15" fill="rgb(209,23,37)" fg:x="15422" fg:w="3602"/><text x="36.6639%" y="1087.50">tokio::runti..</text></g><g><title>tokio::runtime::driver::TimeDriver::park (3,602 samples, 8.50%)</title><rect x="36.4139%" y="1061" width="8.5049%" height="15" fill="rgb(241,93,50)" fg:x="15422" fg:w="3602"/><text x="36.6639%" y="1071.50">tokio::runti..</text></g><g><title>tokio::runtime::time::Driver::park (3,602 samples, 8.50%)</title><rect x="36.4139%" y="1045" width="8.5049%" height="15" fill="rgb(253,46,43)" fg:x="15422" fg:w="3602"/><text x="36.6639%" y="1055.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (6,494 samples, 15.33%)</title><rect x="29.5925%" y="1141" width="15.3334%" height="15" fill="rgb(226,206,43)" fg:x="12533" fg:w="6494"/><text x="29.8425%" y="1151.50">tokio::runtime::schedul..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (6,484 samples, 15.31%)</title><rect x="29.6161%" y="1125" width="15.3098%" height="15" fill="rgb(217,54,7)" fg:x="12543" fg:w="6484"/><text x="29.8661%" y="1135.50">tokio::runtime::schedul..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (6,484 samples, 15.31%)</title><rect x="29.6161%" y="1109" width="15.3098%" height="15" fill="rgb(223,5,52)" fg:x="12543" fg:w="6484"/><text x="29.8661%" y="1119.50">tokio::runtime::schedul..</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (11 samples, 0.03%)</title><rect x="44.9447%" y="1125" width="0.0260%" height="15" fill="rgb(206,52,46)" fg:x="19035" fg:w="11"/><text x="45.1947%" y="1135.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="44.9447%" y="1109" width="0.0260%" height="15" fill="rgb(253,136,11)" fg:x="19035" fg:w="11"/><text x="45.1947%" y="1119.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (11 samples, 0.03%)</title><rect x="44.9447%" y="1093" width="0.0260%" height="15" fill="rgb(208,106,33)" fg:x="19035" fg:w="11"/><text x="45.1947%" y="1103.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (19 samples, 0.04%)</title><rect x="44.9731%" y="1093" width="0.0449%" height="15" fill="rgb(206,54,4)" fg:x="19047" fg:w="19"/><text x="45.2231%" y="1103.50"></text></g><g><title>std::sync::poison::Flag::guard (19 samples, 0.04%)</title><rect x="44.9731%" y="1077" width="0.0449%" height="15" fill="rgb(213,3,15)" fg:x="19047" fg:w="19"/><text x="45.2231%" y="1087.50"></text></g><g><title>std::thread::panicking (19 samples, 0.04%)</title><rect x="44.9731%" y="1061" width="0.0449%" height="15" fill="rgb(252,211,39)" fg:x="19047" fg:w="19"/><text x="45.2231%" y="1071.50"></text></g><g><title>std::panicking::panicking (19 samples, 0.04%)</title><rect x="44.9731%" y="1045" width="0.0449%" height="15" fill="rgb(223,6,36)" fg:x="19047" fg:w="19"/><text x="45.2231%" y="1055.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (19 samples, 0.04%)</title><rect x="44.9731%" y="1029" width="0.0449%" height="15" fill="rgb(252,169,45)" fg:x="19047" fg:w="19"/><text x="45.2231%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.04%)</title><rect x="44.9754%" y="1013" width="0.0425%" height="15" fill="rgb(212,48,26)" fg:x="19048" fg:w="18"/><text x="45.2254%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.04%)</title><rect x="44.9754%" y="997" width="0.0425%" height="15" fill="rgb(251,102,48)" fg:x="19048" fg:w="18"/><text x="45.2254%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (24 samples, 0.06%)</title><rect x="45.0179%" y="1077" width="0.0567%" height="15" fill="rgb(243,208,16)" fg:x="19066" fg:w="24"/><text x="45.2679%" y="1087.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (24 samples, 0.06%)</title><rect x="45.0179%" y="1061" width="0.0567%" height="15" fill="rgb(219,96,24)" fg:x="19066" fg:w="24"/><text x="45.2679%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (18 samples, 0.04%)</title><rect x="45.0746%" y="1077" width="0.0425%" height="15" fill="rgb(219,33,29)" fg:x="19090" fg:w="18"/><text x="45.3246%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.04%)</title><rect x="45.0746%" y="1061" width="0.0425%" height="15" fill="rgb(223,176,5)" fg:x="19090" fg:w="18"/><text x="45.3246%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (92 samples, 0.22%)</title><rect x="44.9259%" y="1141" width="0.2172%" height="15" fill="rgb(228,140,14)" fg:x="19027" fg:w="92"/><text x="45.1759%" y="1151.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (73 samples, 0.17%)</title><rect x="44.9707%" y="1125" width="0.1724%" height="15" fill="rgb(217,179,31)" fg:x="19046" fg:w="73"/><text x="45.2207%" y="1135.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (72 samples, 0.17%)</title><rect x="44.9731%" y="1109" width="0.1700%" height="15" fill="rgb(230,9,30)" fg:x="19047" fg:w="72"/><text x="45.2231%" y="1119.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (53 samples, 0.13%)</title><rect x="45.0179%" y="1093" width="0.1251%" height="15" fill="rgb(230,136,20)" fg:x="19066" fg:w="53"/><text x="45.2679%" y="1103.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (11 samples, 0.03%)</title><rect x="45.1171%" y="1077" width="0.0260%" height="15" fill="rgb(215,210,22)" fg:x="19108" fg:w="11"/><text x="45.3671%" y="1087.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (5 samples, 0.01%)</title><rect x="45.1313%" y="1061" width="0.0118%" height="15" fill="rgb(218,43,5)" fg:x="19114" fg:w="5"/><text x="45.3813%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (5 samples, 0.01%)</title><rect x="45.1573%" y="1109" width="0.0118%" height="15" fill="rgb(216,11,5)" fg:x="19125" fg:w="5"/><text x="45.4073%" y="1119.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="45.1573%" y="1093" width="0.0118%" height="15" fill="rgb(209,82,29)" fg:x="19125" fg:w="5"/><text x="45.4073%" y="1103.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (52 samples, 0.12%)</title><rect x="45.2942%" y="1061" width="0.1228%" height="15" fill="rgb(244,115,12)" fg:x="19183" fg:w="52"/><text x="45.5442%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (52 samples, 0.12%)</title><rect x="45.2942%" y="1045" width="0.1228%" height="15" fill="rgb(222,82,18)" fg:x="19183" fg:w="52"/><text x="45.5442%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (141 samples, 0.33%)</title><rect x="45.1691%" y="1109" width="0.3329%" height="15" fill="rgb(249,227,8)" fg:x="19130" fg:w="141"/><text x="45.4191%" y="1119.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (141 samples, 0.33%)</title><rect x="45.1691%" y="1093" width="0.3329%" height="15" fill="rgb(253,141,45)" fg:x="19130" fg:w="141"/><text x="45.4191%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (141 samples, 0.33%)</title><rect x="45.1691%" y="1077" width="0.3329%" height="15" fill="rgb(234,184,4)" fg:x="19130" fg:w="141"/><text x="45.4191%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.09%)</title><rect x="45.4170%" y="1061" width="0.0850%" height="15" fill="rgb(218,194,23)" fg:x="19235" fg:w="36"/><text x="45.6670%" y="1071.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (36 samples, 0.09%)</title><rect x="45.4170%" y="1045" width="0.0850%" height="15" fill="rgb(235,66,41)" fg:x="19235" fg:w="36"/><text x="45.6670%" y="1055.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="45.5020%" y="1077" width="0.0118%" height="15" fill="rgb(245,217,1)" fg:x="19271" fg:w="5"/><text x="45.7520%" y="1087.50"></text></g><g><title>std::sync::poison::Flag::guard (5 samples, 0.01%)</title><rect x="45.5020%" y="1061" width="0.0118%" height="15" fill="rgb(229,91,1)" fg:x="19271" fg:w="5"/><text x="45.7520%" y="1071.50"></text></g><g><title>std::thread::panicking (5 samples, 0.01%)</title><rect x="45.5020%" y="1045" width="0.0118%" height="15" fill="rgb(207,101,30)" fg:x="19271" fg:w="5"/><text x="45.7520%" y="1055.50"></text></g><g><title>std::panicking::panicking (5 samples, 0.01%)</title><rect x="45.5020%" y="1029" width="0.0118%" height="15" fill="rgb(223,82,49)" fg:x="19271" fg:w="5"/><text x="45.7520%" y="1039.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (5 samples, 0.01%)</title><rect x="45.5020%" y="1013" width="0.0118%" height="15" fill="rgb(218,167,17)" fg:x="19271" fg:w="5"/><text x="45.7520%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (157 samples, 0.37%)</title><rect x="45.1573%" y="1125" width="0.3707%" height="15" fill="rgb(208,103,14)" fg:x="19125" fg:w="157"/><text x="45.4073%" y="1135.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.03%)</title><rect x="45.5020%" y="1109" width="0.0260%" height="15" fill="rgb(238,20,8)" fg:x="19271" fg:w="11"/><text x="45.7520%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.03%)</title><rect x="45.5020%" y="1093" width="0.0260%" height="15" fill="rgb(218,80,54)" fg:x="19271" fg:w="11"/><text x="45.7520%" y="1103.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (6 samples, 0.01%)</title><rect x="45.5138%" y="1077" width="0.0142%" height="15" fill="rgb(240,144,17)" fg:x="19276" fg:w="6"/><text x="45.7638%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (166 samples, 0.39%)</title><rect x="45.1431%" y="1141" width="0.3920%" height="15" fill="rgb(245,27,50)" fg:x="19119" fg:w="166"/><text x="45.3931%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (12 samples, 0.03%)</title><rect x="45.5516%" y="1109" width="0.0283%" height="15" fill="rgb(251,51,7)" fg:x="19292" fg:w="12"/><text x="45.8016%" y="1119.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="45.5516%" y="1093" width="0.0283%" height="15" fill="rgb(245,217,29)" fg:x="19292" fg:w="12"/><text x="45.8016%" y="1103.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (11 samples, 0.03%)</title><rect x="45.5539%" y="1077" width="0.0260%" height="15" fill="rgb(221,176,29)" fg:x="19293" fg:w="11"/><text x="45.8039%" y="1087.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (15 samples, 0.04%)</title><rect x="45.5823%" y="1061" width="0.0354%" height="15" fill="rgb(212,180,24)" fg:x="19305" fg:w="15"/><text x="45.8323%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (15 samples, 0.04%)</title><rect x="45.5823%" y="1045" width="0.0354%" height="15" fill="rgb(254,24,2)" fg:x="19305" fg:w="15"/><text x="45.8323%" y="1055.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.07%)</title><rect x="45.5799%" y="1109" width="0.0708%" height="15" fill="rgb(230,100,2)" fg:x="19304" fg:w="30"/><text x="45.8299%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.07%)</title><rect x="45.5823%" y="1093" width="0.0685%" height="15" fill="rgb(219,142,25)" fg:x="19305" fg:w="29"/><text x="45.8323%" y="1103.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (29 samples, 0.07%)</title><rect x="45.5823%" y="1077" width="0.0685%" height="15" fill="rgb(240,73,43)" fg:x="19305" fg:w="29"/><text x="45.8323%" y="1087.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (10 samples, 0.02%)</title><rect x="45.6271%" y="1061" width="0.0236%" height="15" fill="rgb(214,114,15)" fg:x="19324" fg:w="10"/><text x="45.8771%" y="1071.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (7 samples, 0.02%)</title><rect x="45.6342%" y="1045" width="0.0165%" height="15" fill="rgb(207,130,4)" fg:x="19327" fg:w="7"/><text x="45.8842%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (48 samples, 0.11%)</title><rect x="45.5516%" y="1125" width="0.1133%" height="15" fill="rgb(221,25,40)" fg:x="19292" fg:w="48"/><text x="45.8016%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (6 samples, 0.01%)</title><rect x="45.6507%" y="1109" width="0.0142%" height="15" fill="rgb(241,184,7)" fg:x="19334" fg:w="6"/><text x="45.9007%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (8 samples, 0.02%)</title><rect x="45.6743%" y="1109" width="0.0189%" height="15" fill="rgb(235,159,4)" fg:x="19344" fg:w="8"/><text x="45.9243%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (7 samples, 0.02%)</title><rect x="45.6767%" y="1093" width="0.0165%" height="15" fill="rgb(214,87,48)" fg:x="19345" fg:w="7"/><text x="45.9267%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (5 samples, 0.01%)</title><rect x="45.6814%" y="1077" width="0.0118%" height="15" fill="rgb(246,198,24)" fg:x="19347" fg:w="5"/><text x="45.9314%" y="1087.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="45.6980%" y="1077" width="0.0189%" height="15" fill="rgb(209,66,40)" fg:x="19354" fg:w="8"/><text x="45.9480%" y="1087.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.02%)</title><rect x="45.7003%" y="1061" width="0.0165%" height="15" fill="rgb(233,147,39)" fg:x="19355" fg:w="7"/><text x="45.9503%" y="1071.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (7 samples, 0.02%)</title><rect x="45.7003%" y="1045" width="0.0165%" height="15" fill="rgb(231,145,52)" fg:x="19355" fg:w="7"/><text x="45.9503%" y="1055.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (5 samples, 0.01%)</title><rect x="45.7050%" y="1029" width="0.0118%" height="15" fill="rgb(206,20,26)" fg:x="19357" fg:w="5"/><text x="45.9550%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (28 samples, 0.07%)</title><rect x="45.6649%" y="1125" width="0.0661%" height="15" fill="rgb(238,220,4)" fg:x="19340" fg:w="28"/><text x="45.9149%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (16 samples, 0.04%)</title><rect x="45.6932%" y="1109" width="0.0378%" height="15" fill="rgb(252,195,42)" fg:x="19352" fg:w="16"/><text x="45.9432%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (16 samples, 0.04%)</title><rect x="45.6932%" y="1093" width="0.0378%" height="15" fill="rgb(209,10,6)" fg:x="19352" fg:w="16"/><text x="45.9432%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (6 samples, 0.01%)</title><rect x="45.7168%" y="1077" width="0.0142%" height="15" fill="rgb(229,3,52)" fg:x="19362" fg:w="6"/><text x="45.9668%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (6,882 samples, 16.25%)</title><rect x="29.4862%" y="1157" width="16.2495%" height="15" fill="rgb(253,49,37)" fg:x="12488" fg:w="6882"/><text x="29.7362%" y="1167.50">tokio::runtime::scheduler..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (85 samples, 0.20%)</title><rect x="45.5350%" y="1141" width="0.2007%" height="15" fill="rgb(240,103,49)" fg:x="19285" fg:w="85"/><text x="45.7850%" y="1151.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (8 samples, 0.02%)</title><rect x="45.7381%" y="1141" width="0.0189%" height="15" fill="rgb(250,182,30)" fg:x="19371" fg:w="8"/><text x="45.9881%" y="1151.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (8 samples, 0.02%)</title><rect x="45.7381%" y="1125" width="0.0189%" height="15" fill="rgb(248,8,30)" fg:x="19371" fg:w="8"/><text x="45.9881%" y="1135.50"></text></g><g><title>core::cell::BorrowRefMut::new (8 samples, 0.02%)</title><rect x="45.7381%" y="1109" width="0.0189%" height="15" fill="rgb(237,120,30)" fg:x="19371" fg:w="8"/><text x="45.9881%" y="1119.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (45 samples, 0.11%)</title><rect x="45.9553%" y="885" width="0.1063%" height="15" fill="rgb(221,146,34)" fg:x="19463" fg:w="45"/><text x="46.2053%" y="895.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (88 samples, 0.21%)</title><rect x="46.0616%" y="885" width="0.2078%" height="15" fill="rgb(242,55,13)" fg:x="19508" fg:w="88"/><text x="46.3116%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (88 samples, 0.21%)</title><rect x="46.0616%" y="869" width="0.2078%" height="15" fill="rgb(242,112,31)" fg:x="19508" fg:w="88"/><text x="46.3116%" y="879.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (87 samples, 0.21%)</title><rect x="46.0639%" y="853" width="0.2054%" height="15" fill="rgb(249,192,27)" fg:x="19509" fg:w="87"/><text x="46.3139%" y="863.50"></text></g><g><title>std::panic::catch_unwind (137 samples, 0.32%)</title><rect x="45.9506%" y="1013" width="0.3235%" height="15" fill="rgb(208,204,44)" fg:x="19461" fg:w="137"/><text x="46.2006%" y="1023.50"></text></g><g><title>std::panicking::try (137 samples, 0.32%)</title><rect x="45.9506%" y="997" width="0.3235%" height="15" fill="rgb(208,93,54)" fg:x="19461" fg:w="137"/><text x="46.2006%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (137 samples, 0.32%)</title><rect x="45.9506%" y="981" width="0.3235%" height="15" fill="rgb(242,1,31)" fg:x="19461" fg:w="137"/><text x="46.2006%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (137 samples, 0.32%)</title><rect x="45.9506%" y="965" width="0.3235%" height="15" fill="rgb(241,83,25)" fg:x="19461" fg:w="137"/><text x="46.2006%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (137 samples, 0.32%)</title><rect x="45.9506%" y="949" width="0.3235%" height="15" fill="rgb(205,169,50)" fg:x="19461" fg:w="137"/><text x="46.2006%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete::{{closure}} (137 samples, 0.32%)</title><rect x="45.9506%" y="933" width="0.3235%" height="15" fill="rgb(239,186,37)" fg:x="19461" fg:w="137"/><text x="46.2006%" y="943.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (137 samples, 0.32%)</title><rect x="45.9506%" y="917" width="0.3235%" height="15" fill="rgb(205,221,10)" fg:x="19461" fg:w="137"/><text x="46.2006%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (135 samples, 0.32%)</title><rect x="45.9553%" y="901" width="0.3188%" height="15" fill="rgb(218,196,15)" fg:x="19463" fg:w="135"/><text x="46.2053%" y="911.50"></text></g><g><title>&lt;core::num::nonzero::NonZero&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="46.2930%" y="965" width="0.0118%" height="15" fill="rgb(218,196,35)" fg:x="19606" fg:w="5"/><text x="46.5430%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (5 samples, 0.01%)</title><rect x="46.2930%" y="949" width="0.0118%" height="15" fill="rgb(233,63,24)" fg:x="19606" fg:w="5"/><text x="46.5430%" y="959.50"></text></g><g><title>std::sync::poison::Flag::done (6 samples, 0.01%)</title><rect x="46.3119%" y="917" width="0.0142%" height="15" fill="rgb(225,8,4)" fg:x="19614" fg:w="6"/><text x="46.5619%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="46.3119%" y="949" width="0.0165%" height="15" fill="rgb(234,105,35)" fg:x="19614" fg:w="7"/><text x="46.5619%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="46.3119%" y="933" width="0.0165%" height="15" fill="rgb(236,21,32)" fg:x="19614" fg:w="7"/><text x="46.5619%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (70 samples, 0.17%)</title><rect x="46.3449%" y="885" width="0.1653%" height="15" fill="rgb(228,109,6)" fg:x="19628" fg:w="70"/><text x="46.5949%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (70 samples, 0.17%)</title><rect x="46.3449%" y="869" width="0.1653%" height="15" fill="rgb(229,215,31)" fg:x="19628" fg:w="70"/><text x="46.5949%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (240 samples, 0.57%)</title><rect x="45.9506%" y="1029" width="0.5667%" height="15" fill="rgb(221,52,54)" fg:x="19461" fg:w="240"/><text x="46.2006%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (103 samples, 0.24%)</title><rect x="46.2741%" y="1013" width="0.2432%" height="15" fill="rgb(252,129,43)" fg:x="19598" fg:w="103"/><text x="46.5241%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (101 samples, 0.24%)</title><rect x="46.2788%" y="997" width="0.2385%" height="15" fill="rgb(248,183,27)" fg:x="19600" fg:w="101"/><text x="46.5288%" y="1007.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (98 samples, 0.23%)</title><rect x="46.2859%" y="981" width="0.2314%" height="15" fill="rgb(250,0,22)" fg:x="19603" fg:w="98"/><text x="46.5359%" y="991.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (88 samples, 0.21%)</title><rect x="46.3095%" y="965" width="0.2078%" height="15" fill="rgb(213,166,10)" fg:x="19613" fg:w="88"/><text x="46.5595%" y="975.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (75 samples, 0.18%)</title><rect x="46.3402%" y="949" width="0.1771%" height="15" fill="rgb(207,163,36)" fg:x="19626" fg:w="75"/><text x="46.5902%" y="959.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (74 samples, 0.17%)</title><rect x="46.3426%" y="933" width="0.1747%" height="15" fill="rgb(208,122,22)" fg:x="19627" fg:w="74"/><text x="46.5926%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (74 samples, 0.17%)</title><rect x="46.3426%" y="917" width="0.1747%" height="15" fill="rgb(207,104,49)" fg:x="19627" fg:w="74"/><text x="46.5926%" y="927.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (73 samples, 0.17%)</title><rect x="46.3449%" y="901" width="0.1724%" height="15" fill="rgb(248,211,50)" fg:x="19628" fg:w="73"/><text x="46.5949%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::cancel_task (11 samples, 0.03%)</title><rect x="46.5196%" y="1013" width="0.0260%" height="15" fill="rgb(217,13,45)" fg:x="19702" fg:w="11"/><text x="46.7696%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.03%)</title><rect x="46.5196%" y="997" width="0.0260%" height="15" fill="rgb(211,216,49)" fg:x="19702" fg:w="11"/><text x="46.7696%" y="1007.50"></text></g><g><title>std::panicking::try (11 samples, 0.03%)</title><rect x="46.5196%" y="981" width="0.0260%" height="15" fill="rgb(221,58,53)" fg:x="19702" fg:w="11"/><text x="46.7696%" y="991.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.03%)</title><rect x="46.5196%" y="965" width="0.0260%" height="15" fill="rgb(220,112,41)" fg:x="19702" fg:w="11"/><text x="46.7696%" y="975.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.03%)</title><rect x="46.5196%" y="949" width="0.0260%" height="15" fill="rgb(236,38,28)" fg:x="19702" fg:w="11"/><text x="46.7696%" y="959.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.03%)</title><rect x="46.5196%" y="933" width="0.0260%" height="15" fill="rgb(227,195,22)" fg:x="19702" fg:w="11"/><text x="46.7696%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::cancel_task::{{closure}} (11 samples, 0.03%)</title><rect x="46.5196%" y="917" width="0.0260%" height="15" fill="rgb(214,55,33)" fg:x="19702" fg:w="11"/><text x="46.7696%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (11 samples, 0.03%)</title><rect x="46.5196%" y="901" width="0.0260%" height="15" fill="rgb(248,80,13)" fg:x="19702" fg:w="11"/><text x="46.7696%" y="911.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (11 samples, 0.03%)</title><rect x="46.5196%" y="885" width="0.0260%" height="15" fill="rgb(238,52,6)" fg:x="19702" fg:w="11"/><text x="46.7696%" y="895.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (10 samples, 0.02%)</title><rect x="46.5220%" y="869" width="0.0236%" height="15" fill="rgb(224,198,47)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="879.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (10 samples, 0.02%)</title><rect x="46.5220%" y="853" width="0.0236%" height="15" fill="rgb(233,171,20)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (10 samples, 0.02%)</title><rect x="46.5220%" y="837" width="0.0236%" height="15" fill="rgb(241,30,25)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::core::Tracker&gt; (10 samples, 0.02%)</title><rect x="46.5220%" y="821" width="0.0236%" height="15" fill="rgb(207,171,38)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker::core::torrent::repository::RepositoryAsyncSingle&gt;&gt; (10 samples, 0.02%)</title><rect x="46.5220%" y="805" width="0.0236%" height="15" fill="rgb(234,70,1)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="46.5220%" y="789" width="0.0236%" height="15" fill="rgb(232,178,18)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (10 samples, 0.02%)</title><rect x="46.5220%" y="773" width="0.0236%" height="15" fill="rgb(241,78,40)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::core::torrent::repository::RepositoryAsyncSingle&gt; (10 samples, 0.02%)</title><rect x="46.5220%" y="757" width="0.0236%" height="15" fill="rgb(222,35,25)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::RwLock&lt;alloc::collections::btree::map::BTreeMap&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash,torrust_tracker::core::torrent::Entry&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="46.5220%" y="741" width="0.0236%" height="15" fill="rgb(207,92,16)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::collections::btree::map::BTreeMap&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash,torrust_tracker::core::torrent::Entry&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="46.5220%" y="725" width="0.0236%" height="15" fill="rgb(216,59,51)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash,torrust_tracker::core::torrent::Entry&gt;&gt; (10 samples, 0.02%)</title><rect x="46.5220%" y="709" width="0.0236%" height="15" fill="rgb(213,80,28)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="46.5220%" y="693" width="0.0236%" height="15" fill="rgb(220,93,7)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="703.50"></text></g><g><title>core::mem::drop (10 samples, 0.02%)</title><rect x="46.5220%" y="677" width="0.0236%" height="15" fill="rgb(225,24,44)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash,torrust_tracker::core::torrent::Entry&gt;&gt; (10 samples, 0.02%)</title><rect x="46.5220%" y="661" width="0.0236%" height="15" fill="rgb(243,74,40)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="46.5220%" y="645" width="0.0236%" height="15" fill="rgb(228,39,7)" fg:x="19703" fg:w="10"/><text x="46.7720%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (8 samples, 0.02%)</title><rect x="46.5267%" y="629" width="0.0189%" height="15" fill="rgb(227,79,8)" fg:x="19705" fg:w="8"/><text x="46.7767%" y="639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (8 samples, 0.02%)</title><rect x="46.5267%" y="613" width="0.0189%" height="15" fill="rgb(236,58,11)" fg:x="19705" fg:w="8"/><text x="46.7767%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::core::torrent::Entry&gt; (8 samples, 0.02%)</title><rect x="46.5267%" y="597" width="0.0189%" height="15" fill="rgb(249,63,35)" fg:x="19705" fg:w="8"/><text x="46.7767%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;torrust_tracker::core::peer::Id,torrust_tracker::core::peer::Peer&gt;&gt; (8 samples, 0.02%)</title><rect x="46.5267%" y="581" width="0.0189%" height="15" fill="rgb(252,114,16)" fg:x="19705" fg:w="8"/><text x="46.7767%" y="591.50"></text></g><g><title>__GI___libc_free (8 samples, 0.02%)</title><rect x="46.5267%" y="565" width="0.0189%" height="15" fill="rgb(254,151,24)" fg:x="19705" fg:w="8"/><text x="46.7767%" y="575.50"></text></g><g><title>_int_free (8 samples, 0.02%)</title><rect x="46.5267%" y="549" width="0.0189%" height="15" fill="rgb(253,54,39)" fg:x="19705" fg:w="8"/><text x="46.7767%" y="559.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (20 samples, 0.05%)</title><rect x="46.5598%" y="869" width="0.0472%" height="15" fill="rgb(243,25,45)" fg:x="19719" fg:w="20"/><text x="46.8098%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (15 samples, 0.04%)</title><rect x="46.5716%" y="853" width="0.0354%" height="15" fill="rgb(234,134,9)" fg:x="19724" fg:w="15"/><text x="46.8216%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="47.0131%" y="853" width="0.0236%" height="15" fill="rgb(227,166,31)" fg:x="19911" fg:w="10"/><text x="47.2631%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="47.2445%" y="837" width="0.0331%" height="15" fill="rgb(245,143,41)" fg:x="20009" fg:w="14"/><text x="47.4945%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.03%)</title><rect x="47.2469%" y="821" width="0.0307%" height="15" fill="rgb(238,181,32)" fg:x="20010" fg:w="13"/><text x="47.4969%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.03%)</title><rect x="47.2469%" y="805" width="0.0307%" height="15" fill="rgb(224,113,18)" fg:x="20010" fg:w="13"/><text x="47.4969%" y="815.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (20 samples, 0.05%)</title><rect x="47.2776%" y="837" width="0.0472%" height="15" fill="rgb(240,229,28)" fg:x="20023" fg:w="20"/><text x="47.5276%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::udp::UdpSocket&gt;&gt; (22 samples, 0.05%)</title><rect x="47.3248%" y="837" width="0.0519%" height="15" fill="rgb(250,185,3)" fg:x="20043" fg:w="22"/><text x="47.5748%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.05%)</title><rect x="47.3248%" y="821" width="0.0519%" height="15" fill="rgb(212,59,25)" fg:x="20043" fg:w="22"/><text x="47.5748%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;torrust_tracker::core::Tracker&gt;&gt; (28 samples, 0.07%)</title><rect x="47.3767%" y="837" width="0.0661%" height="15" fill="rgb(221,87,20)" fg:x="20065" fg:w="28"/><text x="47.6267%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.07%)</title><rect x="47.3767%" y="821" width="0.0661%" height="15" fill="rgb(213,74,28)" fg:x="20065" fg:w="28"/><text x="47.6267%" y="831.50"></text></g><g><title>core::cmp::Ord::min (7 samples, 0.02%)</title><rect x="47.7663%" y="773" width="0.0165%" height="15" fill="rgb(224,132,34)" fg:x="20230" fg:w="7"/><text x="48.0163%" y="783.50"></text></g><g><title>core::cmp::min_by (7 samples, 0.02%)</title><rect x="47.7663%" y="757" width="0.0165%" height="15" fill="rgb(222,101,24)" fg:x="20230" fg:w="7"/><text x="48.0163%" y="767.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::remaining_slice (15 samples, 0.04%)</title><rect x="47.7663%" y="789" width="0.0354%" height="15" fill="rgb(254,142,4)" fg:x="20230" fg:w="15"/><text x="48.0163%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.02%)</title><rect x="47.7829%" y="773" width="0.0189%" height="15" fill="rgb(230,229,49)" fg:x="20237" fg:w="8"/><text x="48.0329%" y="783.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.02%)</title><rect x="47.7829%" y="757" width="0.0189%" height="15" fill="rgb(238,70,47)" fg:x="20237" fg:w="8"/><text x="48.0329%" y="767.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="47.7829%" y="741" width="0.0189%" height="15" fill="rgb(231,160,17)" fg:x="20237" fg:w="8"/><text x="48.0329%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="47.7829%" y="725" width="0.0189%" height="15" fill="rgb(218,68,53)" fg:x="20237" fg:w="8"/><text x="48.0329%" y="735.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (16 samples, 0.04%)</title><rect x="47.7663%" y="805" width="0.0378%" height="15" fill="rgb(236,111,10)" fg:x="20230" fg:w="16"/><text x="48.0163%" y="815.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::remaining_slice (6 samples, 0.01%)</title><rect x="47.8041%" y="773" width="0.0142%" height="15" fill="rgb(224,34,41)" fg:x="20246" fg:w="6"/><text x="48.0541%" y="783.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.01%)</title><rect x="47.8065%" y="757" width="0.0118%" height="15" fill="rgb(241,118,19)" fg:x="20247" fg:w="5"/><text x="48.0565%" y="767.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="47.8065%" y="741" width="0.0118%" height="15" fill="rgb(238,129,25)" fg:x="20247" fg:w="5"/><text x="48.0565%" y="751.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="47.8065%" y="725" width="0.0118%" height="15" fill="rgb(238,22,31)" fg:x="20247" fg:w="5"/><text x="48.0565%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="47.8065%" y="709" width="0.0118%" height="15" fill="rgb(222,174,48)" fg:x="20247" fg:w="5"/><text x="48.0565%" y="719.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_i32 (16 samples, 0.04%)</title><rect x="47.8041%" y="805" width="0.0378%" height="15" fill="rgb(206,152,40)" fg:x="20246" fg:w="16"/><text x="48.0541%" y="815.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (16 samples, 0.04%)</title><rect x="47.8041%" y="789" width="0.0378%" height="15" fill="rgb(218,99,54)" fg:x="20246" fg:w="16"/><text x="48.0541%" y="799.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (10 samples, 0.02%)</title><rect x="47.8183%" y="773" width="0.0236%" height="15" fill="rgb(220,174,26)" fg:x="20252" fg:w="10"/><text x="48.0683%" y="783.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_i64 (8 samples, 0.02%)</title><rect x="47.8419%" y="805" width="0.0189%" height="15" fill="rgb(245,116,9)" fg:x="20262" fg:w="8"/><text x="48.0919%" y="815.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (8 samples, 0.02%)</title><rect x="47.8419%" y="789" width="0.0189%" height="15" fill="rgb(209,72,35)" fg:x="20262" fg:w="8"/><text x="48.0919%" y="799.50"></text></g><g><title>aquatic_udp_protocol::request::Request::from_bytes (136 samples, 0.32%)</title><rect x="47.5468%" y="821" width="0.3211%" height="15" fill="rgb(226,126,21)" fg:x="20137" fg:w="136"/><text x="47.7968%" y="831.50"></text></g><g><title>__GI___lll_lock_wait_private (6 samples, 0.01%)</title><rect x="47.8820%" y="677" width="0.0142%" height="15" fill="rgb(227,192,1)" fg:x="20279" fg:w="6"/><text x="48.1320%" y="687.50"></text></g><g><title>__GI___lll_lock_wake_private (351 samples, 0.83%)</title><rect x="47.8962%" y="677" width="0.8288%" height="15" fill="rgb(237,180,29)" fg:x="20285" fg:w="351"/><text x="48.1462%" y="687.50"></text></g><g><title>[unknown] (330 samples, 0.78%)</title><rect x="47.9458%" y="661" width="0.7792%" height="15" fill="rgb(230,197,35)" fg:x="20306" fg:w="330"/><text x="48.1958%" y="671.50"></text></g><g><title>[unknown] (328 samples, 0.77%)</title><rect x="47.9505%" y="645" width="0.7745%" height="15" fill="rgb(246,193,31)" fg:x="20308" fg:w="328"/><text x="48.2005%" y="655.50"></text></g><g><title>[unknown] (311 samples, 0.73%)</title><rect x="47.9906%" y="629" width="0.7343%" height="15" fill="rgb(241,36,4)" fg:x="20325" fg:w="311"/><text x="48.2406%" y="639.50"></text></g><g><title>[unknown] (282 samples, 0.67%)</title><rect x="48.0591%" y="613" width="0.6658%" height="15" fill="rgb(241,130,17)" fg:x="20354" fg:w="282"/><text x="48.3091%" y="623.50"></text></g><g><title>[unknown] (264 samples, 0.62%)</title><rect x="48.1016%" y="597" width="0.6233%" height="15" fill="rgb(206,137,32)" fg:x="20372" fg:w="264"/><text x="48.3516%" y="607.50"></text></g><g><title>[unknown] (157 samples, 0.37%)</title><rect x="48.3543%" y="581" width="0.3707%" height="15" fill="rgb(237,228,51)" fg:x="20479" fg:w="157"/><text x="48.6043%" y="591.50"></text></g><g><title>[unknown] (129 samples, 0.30%)</title><rect x="48.4204%" y="565" width="0.3046%" height="15" fill="rgb(243,6,42)" fg:x="20507" fg:w="129"/><text x="48.6704%" y="575.50"></text></g><g><title>[unknown] (56 samples, 0.13%)</title><rect x="48.5927%" y="549" width="0.1322%" height="15" fill="rgb(251,74,28)" fg:x="20580" fg:w="56"/><text x="48.8427%" y="559.50"></text></g><g><title>[unknown] (47 samples, 0.11%)</title><rect x="48.6140%" y="533" width="0.1110%" height="15" fill="rgb(218,20,49)" fg:x="20589" fg:w="47"/><text x="48.8640%" y="543.50"></text></g><g><title>[unknown] (22 samples, 0.05%)</title><rect x="48.6730%" y="517" width="0.0519%" height="15" fill="rgb(238,28,14)" fg:x="20614" fg:w="22"/><text x="48.9230%" y="527.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="48.6990%" y="501" width="0.0260%" height="15" fill="rgb(229,40,46)" fg:x="20625" fg:w="11"/><text x="48.9490%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="48.7084%" y="485" width="0.0165%" height="15" fill="rgb(244,195,20)" fg:x="20629" fg:w="7"/><text x="48.9584%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="48.7084%" y="469" width="0.0165%" height="15" fill="rgb(253,56,35)" fg:x="20629" fg:w="7"/><text x="48.9584%" y="479.50"></text></g><g><title>__GI___lll_lock_wait_private (664 samples, 1.57%)</title><rect x="49.0036%" y="661" width="1.5678%" height="15" fill="rgb(210,149,44)" fg:x="20754" fg:w="664"/><text x="49.2536%" y="671.50"></text></g><g><title>futex_wait (646 samples, 1.53%)</title><rect x="49.0461%" y="645" width="1.5253%" height="15" fill="rgb(240,135,12)" fg:x="20772" fg:w="646"/><text x="49.2961%" y="655.50"></text></g><g><title>[unknown] (631 samples, 1.49%)</title><rect x="49.0815%" y="629" width="1.4899%" height="15" fill="rgb(251,24,50)" fg:x="20787" fg:w="631"/><text x="49.3315%" y="639.50"></text></g><g><title>[unknown] (622 samples, 1.47%)</title><rect x="49.1028%" y="613" width="1.4686%" height="15" fill="rgb(243,200,47)" fg:x="20796" fg:w="622"/><text x="49.3528%" y="623.50"></text></g><g><title>[unknown] (619 samples, 1.46%)</title><rect x="49.1098%" y="597" width="1.4616%" height="15" fill="rgb(224,166,26)" fg:x="20799" fg:w="619"/><text x="49.3598%" y="607.50"></text></g><g><title>[unknown] (605 samples, 1.43%)</title><rect x="49.1429%" y="581" width="1.4285%" height="15" fill="rgb(233,0,47)" fg:x="20813" fg:w="605"/><text x="49.3929%" y="591.50"></text></g><g><title>[unknown] (578 samples, 1.36%)</title><rect x="49.2066%" y="565" width="1.3648%" height="15" fill="rgb(253,80,5)" fg:x="20840" fg:w="578"/><text x="49.4566%" y="575.50"></text></g><g><title>[unknown] (544 samples, 1.28%)</title><rect x="49.2869%" y="549" width="1.2845%" height="15" fill="rgb(214,133,25)" fg:x="20874" fg:w="544"/><text x="49.5369%" y="559.50"></text></g><g><title>[unknown] (488 samples, 1.15%)</title><rect x="49.4192%" y="533" width="1.1522%" height="15" fill="rgb(209,27,14)" fg:x="20930" fg:w="488"/><text x="49.6692%" y="543.50"></text></g><g><title>[unknown] (351 samples, 0.83%)</title><rect x="49.7426%" y="517" width="0.8288%" height="15" fill="rgb(219,102,51)" fg:x="21067" fg:w="351"/><text x="49.9926%" y="527.50"></text></g><g><title>[unknown] (326 samples, 0.77%)</title><rect x="49.8017%" y="501" width="0.7697%" height="15" fill="rgb(237,18,16)" fg:x="21092" fg:w="326"/><text x="50.0517%" y="511.50"></text></g><g><title>[unknown] (284 samples, 0.67%)</title><rect x="49.9008%" y="485" width="0.6706%" height="15" fill="rgb(241,85,17)" fg:x="21134" fg:w="284"/><text x="50.1508%" y="495.50"></text></g><g><title>[unknown] (227 samples, 0.54%)</title><rect x="50.0354%" y="469" width="0.5360%" height="15" fill="rgb(236,90,42)" fg:x="21191" fg:w="227"/><text x="50.2854%" y="479.50"></text></g><g><title>[unknown] (163 samples, 0.38%)</title><rect x="50.1865%" y="453" width="0.3849%" height="15" fill="rgb(249,57,21)" fg:x="21255" fg:w="163"/><text x="50.4365%" y="463.50"></text></g><g><title>[unknown] (103 samples, 0.24%)</title><rect x="50.3282%" y="437" width="0.2432%" height="15" fill="rgb(243,12,36)" fg:x="21315" fg:w="103"/><text x="50.5782%" y="447.50"></text></g><g><title>[unknown] (34 samples, 0.08%)</title><rect x="50.4911%" y="421" width="0.0803%" height="15" fill="rgb(253,128,47)" fg:x="21384" fg:w="34"/><text x="50.7411%" y="431.50"></text></g><g><title>[unknown] (31 samples, 0.07%)</title><rect x="50.4982%" y="405" width="0.0732%" height="15" fill="rgb(207,33,20)" fg:x="21387" fg:w="31"/><text x="50.7482%" y="415.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="50.5171%" y="389" width="0.0543%" height="15" fill="rgb(233,215,35)" fg:x="21395" fg:w="23"/><text x="50.7671%" y="399.50"></text></g><g><title>[unknown] (21 samples, 0.05%)</title><rect x="50.5218%" y="373" width="0.0496%" height="15" fill="rgb(249,188,52)" fg:x="21397" fg:w="21"/><text x="50.7718%" y="383.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="50.5549%" y="357" width="0.0165%" height="15" fill="rgb(225,12,32)" fg:x="21411" fg:w="7"/><text x="50.8049%" y="367.50"></text></g><g><title>_int_free (788 samples, 1.86%)</title><rect x="48.7250%" y="677" width="1.8606%" height="15" fill="rgb(247,98,14)" fg:x="20636" fg:w="788"/><text x="48.9750%" y="687.50">_..</text></g><g><title>__GI___libc_free (1,148 samples, 2.71%)</title><rect x="47.8773%" y="693" width="2.7106%" height="15" fill="rgb(247,219,48)" fg:x="20277" fg:w="1148"/><text x="48.1273%" y="703.50">__..</text></g><g><title>core::ptr::drop_in_place&lt;torrust_tracker::servers::udp::UdpRequest&gt; (1,177 samples, 2.78%)</title><rect x="47.8773%" y="821" width="2.7791%" height="15" fill="rgb(253,60,48)" fg:x="20277" fg:w="1177"/><text x="48.1273%" y="831.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,177 samples, 2.78%)</title><rect x="47.8773%" y="805" width="2.7791%" height="15" fill="rgb(245,15,52)" fg:x="20277" fg:w="1177"/><text x="48.1273%" y="815.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,177 samples, 2.78%)</title><rect x="47.8773%" y="789" width="2.7791%" height="15" fill="rgb(220,133,28)" fg:x="20277" fg:w="1177"/><text x="48.1273%" y="799.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,177 samples, 2.78%)</title><rect x="47.8773%" y="773" width="2.7791%" height="15" fill="rgb(217,180,4)" fg:x="20277" fg:w="1177"/><text x="48.1273%" y="783.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,177 samples, 2.78%)</title><rect x="47.8773%" y="757" width="2.7791%" height="15" fill="rgb(251,24,1)" fg:x="20277" fg:w="1177"/><text x="48.1273%" y="767.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (1,177 samples, 2.78%)</title><rect x="47.8773%" y="741" width="2.7791%" height="15" fill="rgb(212,185,49)" fg:x="20277" fg:w="1177"/><text x="48.1273%" y="751.50">al..</text></g><g><title>__rdl_dealloc (1,177 samples, 2.78%)</title><rect x="47.8773%" y="725" width="2.7791%" height="15" fill="rgb(215,175,22)" fg:x="20277" fg:w="1177"/><text x="48.1273%" y="735.50">__..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,177 samples, 2.78%)</title><rect x="47.8773%" y="709" width="2.7791%" height="15" fill="rgb(250,205,14)" fg:x="20277" fg:w="1177"/><text x="48.1273%" y="719.50">st..</text></g><g><title>tracing::span::Span::record_all (28 samples, 0.07%)</title><rect x="50.5903%" y="693" width="0.0661%" height="15" fill="rgb(225,211,22)" fg:x="21426" fg:w="28"/><text x="50.8403%" y="703.50"></text></g><g><title>unlink_chunk (27 samples, 0.06%)</title><rect x="50.5927%" y="677" width="0.0638%" height="15" fill="rgb(251,179,42)" fg:x="21427" fg:w="27"/><text x="50.8427%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (30 samples, 0.07%)</title><rect x="50.6564%" y="821" width="0.0708%" height="15" fill="rgb(208,216,51)" fg:x="21454" fg:w="30"/><text x="50.9064%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (6 samples, 0.01%)</title><rect x="50.7272%" y="821" width="0.0142%" height="15" fill="rgb(235,36,11)" fg:x="21484" fg:w="6"/><text x="50.9772%" y="831.50"></text></g><g><title>std::time::Instant::elapsed (18 samples, 0.04%)</title><rect x="50.7414%" y="821" width="0.0425%" height="15" fill="rgb(213,189,28)" fg:x="21490" fg:w="18"/><text x="50.9914%" y="831.50"></text></g><g><title>std::time::Instant::now (9 samples, 0.02%)</title><rect x="50.7627%" y="805" width="0.0213%" height="15" fill="rgb(227,203,42)" fg:x="21499" fg:w="9"/><text x="51.0127%" y="815.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (9 samples, 0.02%)</title><rect x="50.7627%" y="789" width="0.0213%" height="15" fill="rgb(244,72,36)" fg:x="21499" fg:w="9"/><text x="51.0127%" y="799.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (9 samples, 0.02%)</title><rect x="50.7627%" y="773" width="0.0213%" height="15" fill="rgb(213,53,17)" fg:x="21499" fg:w="9"/><text x="51.0127%" y="783.50"></text></g><g><title>__GI___clock_gettime (9 samples, 0.02%)</title><rect x="50.7627%" y="757" width="0.0213%" height="15" fill="rgb(207,167,3)" fg:x="21499" fg:w="9"/><text x="51.0127%" y="767.50"></text></g><g><title>std::sys::pal::unix::cvt (6 samples, 0.01%)</title><rect x="50.7886%" y="741" width="0.0142%" height="15" fill="rgb(216,98,30)" fg:x="21510" fg:w="6"/><text x="51.0386%" y="751.50"></text></g><g><title>__GI_getsockname (1,369 samples, 3.23%)</title><rect x="50.8052%" y="725" width="3.2324%" height="15" fill="rgb(236,123,15)" fg:x="21517" fg:w="1369"/><text x="51.0552%" y="735.50">__G..</text></g><g><title>[unknown] (1,334 samples, 3.15%)</title><rect x="50.8878%" y="709" width="3.1498%" height="15" fill="rgb(248,81,50)" fg:x="21552" fg:w="1334"/><text x="51.1378%" y="719.50">[un..</text></g><g><title>[unknown] (1,330 samples, 3.14%)</title><rect x="50.8972%" y="693" width="3.1403%" height="15" fill="rgb(214,120,4)" fg:x="21556" fg:w="1330"/><text x="51.1472%" y="703.50">[un..</text></g><g><title>[unknown] (1,271 samples, 3.00%)</title><rect x="51.0366%" y="677" width="3.0010%" height="15" fill="rgb(208,179,34)" fg:x="21615" fg:w="1271"/><text x="51.2866%" y="687.50">[un..</text></g><g><title>[unknown] (1,256 samples, 2.97%)</title><rect x="51.0720%" y="661" width="2.9656%" height="15" fill="rgb(227,140,7)" fg:x="21630" fg:w="1256"/><text x="51.3220%" y="671.50">[un..</text></g><g><title>[unknown] (1,067 samples, 2.52%)</title><rect x="51.5182%" y="645" width="2.5194%" height="15" fill="rgb(214,22,6)" fg:x="21819" fg:w="1067"/><text x="51.7682%" y="655.50">[u..</text></g><g><title>[unknown] (826 samples, 1.95%)</title><rect x="52.0873%" y="629" width="1.9503%" height="15" fill="rgb(207,137,27)" fg:x="22060" fg:w="826"/><text x="52.3373%" y="639.50">[..</text></g><g><title>[unknown] (410 samples, 0.97%)</title><rect x="53.0695%" y="613" width="0.9681%" height="15" fill="rgb(210,8,46)" fg:x="22476" fg:w="410"/><text x="53.3195%" y="623.50"></text></g><g><title>[unknown] (85 samples, 0.20%)</title><rect x="53.8369%" y="597" width="0.2007%" height="15" fill="rgb(240,16,54)" fg:x="22801" fg:w="85"/><text x="54.0869%" y="607.50"></text></g><g><title>[unknown] (27 samples, 0.06%)</title><rect x="53.9738%" y="581" width="0.0638%" height="15" fill="rgb(211,209,29)" fg:x="22859" fg:w="27"/><text x="54.2238%" y="591.50"></text></g><g><title>[unknown] (27 samples, 0.06%)</title><rect x="53.9738%" y="565" width="0.0638%" height="15" fill="rgb(226,228,24)" fg:x="22859" fg:w="27"/><text x="54.2238%" y="575.50"></text></g><g><title>[unknown] (25 samples, 0.06%)</title><rect x="53.9786%" y="549" width="0.0590%" height="15" fill="rgb(222,84,9)" fg:x="22861" fg:w="25"/><text x="54.2286%" y="559.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="53.9833%" y="533" width="0.0543%" height="15" fill="rgb(234,203,30)" fg:x="22863" fg:w="23"/><text x="54.2333%" y="543.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="54.0116%" y="517" width="0.0260%" height="15" fill="rgb(238,109,14)" fg:x="22875" fg:w="11"/><text x="54.2616%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="54.0258%" y="501" width="0.0118%" height="15" fill="rgb(233,206,34)" fg:x="22881" fg:w="5"/><text x="54.2758%" y="511.50"></text></g><g><title>tokio::net::udp::UdpSocket::local_addr (1,381 samples, 3.26%)</title><rect x="50.7839%" y="821" width="3.2608%" height="15" fill="rgb(220,167,47)" fg:x="21508" fg:w="1381"/><text x="51.0339%" y="831.50">tok..</text></g><g><title>mio::net::udp::UdpSocket::local_addr (1,381 samples, 3.26%)</title><rect x="50.7839%" y="805" width="3.2608%" height="15" fill="rgb(238,105,10)" fg:x="21508" fg:w="1381"/><text x="51.0339%" y="815.50">mio..</text></g><g><title>std::net::tcp::TcpListener::local_addr (1,381 samples, 3.26%)</title><rect x="50.7839%" y="789" width="3.2608%" height="15" fill="rgb(213,227,17)" fg:x="21508" fg:w="1381"/><text x="51.0339%" y="799.50">std..</text></g><g><title>std::sys_common::net::TcpListener::socket_addr (1,381 samples, 3.26%)</title><rect x="50.7839%" y="773" width="3.2608%" height="15" fill="rgb(217,132,38)" fg:x="21508" fg:w="1381"/><text x="51.0339%" y="783.50">std..</text></g><g><title>std::sys_common::net::sockname (1,379 samples, 3.26%)</title><rect x="50.7886%" y="757" width="3.2560%" height="15" fill="rgb(242,146,4)" fg:x="21510" fg:w="1379"/><text x="51.0386%" y="767.50">std..</text></g><g><title>std::sys_common::net::TcpListener::socket_addr::{{closure}} (1,373 samples, 3.24%)</title><rect x="50.8028%" y="741" width="3.2419%" height="15" fill="rgb(212,61,9)" fg:x="21516" fg:w="1373"/><text x="51.0528%" y="751.50">std..</text></g><g><title>[[vdso]] (28 samples, 0.07%)</title><rect x="54.0612%" y="581" width="0.0661%" height="15" fill="rgb(247,126,22)" fg:x="22896" fg:w="28"/><text x="54.3112%" y="591.50"></text></g><g><title>rand_chacha::guts::ChaCha::pos64 (20 samples, 0.05%)</title><rect x="54.1415%" y="533" width="0.0472%" height="15" fill="rgb(220,196,2)" fg:x="22930" fg:w="20"/><text x="54.3915%" y="543.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (6 samples, 0.01%)</title><rect x="54.1911%" y="517" width="0.0142%" height="15" fill="rgb(208,46,4)" fg:x="22951" fg:w="6"/><text x="54.4411%" y="527.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (6 samples, 0.01%)</title><rect x="54.1911%" y="501" width="0.0142%" height="15" fill="rgb(252,104,46)" fg:x="22951" fg:w="6"/><text x="54.4411%" y="511.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (6 samples, 0.01%)</title><rect x="54.1911%" y="485" width="0.0142%" height="15" fill="rgb(237,152,48)" fg:x="22951" fg:w="6"/><text x="54.4411%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (6 samples, 0.01%)</title><rect x="54.1911%" y="469" width="0.0142%" height="15" fill="rgb(221,59,37)" fg:x="22951" fg:w="6"/><text x="54.4411%" y="479.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (5 samples, 0.01%)</title><rect x="54.2100%" y="517" width="0.0118%" height="15" fill="rgb(209,202,51)" fg:x="22959" fg:w="5"/><text x="54.4600%" y="527.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (5 samples, 0.01%)</title><rect x="54.2100%" y="501" width="0.0118%" height="15" fill="rgb(228,81,30)" fg:x="22959" fg:w="5"/><text x="54.4600%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (5 samples, 0.01%)</title><rect x="54.2100%" y="485" width="0.0118%" height="15" fill="rgb(227,42,39)" fg:x="22959" fg:w="5"/><text x="54.4600%" y="495.50"></text></g><g><title>rand_chacha::guts::round (23 samples, 0.05%)</title><rect x="54.1911%" y="533" width="0.0543%" height="15" fill="rgb(221,26,2)" fg:x="22951" fg:w="23"/><text x="54.4411%" y="543.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (79 samples, 0.19%)</title><rect x="54.0612%" y="613" width="0.1865%" height="15" fill="rgb(254,61,31)" fg:x="22896" fg:w="79"/><text x="54.3112%" y="623.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (79 samples, 0.19%)</title><rect x="54.0612%" y="597" width="0.1865%" height="15" fill="rgb(222,173,38)" fg:x="22896" fg:w="79"/><text x="54.3112%" y="607.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (49 samples, 0.12%)</title><rect x="54.1320%" y="581" width="0.1157%" height="15" fill="rgb(218,50,12)" fg:x="22926" fg:w="49"/><text x="54.3820%" y="591.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (49 samples, 0.12%)</title><rect x="54.1320%" y="565" width="0.1157%" height="15" fill="rgb(223,88,40)" fg:x="22926" fg:w="49"/><text x="54.3820%" y="575.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (49 samples, 0.12%)</title><rect x="54.1320%" y="549" width="0.1157%" height="15" fill="rgb(237,54,19)" fg:x="22926" fg:w="49"/><text x="54.3820%" y="559.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::RequestId::make (88 samples, 0.21%)</title><rect x="54.0447%" y="821" width="0.2078%" height="15" fill="rgb(251,129,25)" fg:x="22889" fg:w="88"/><text x="54.2947%" y="831.50"></text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (87 samples, 0.21%)</title><rect x="54.0470%" y="805" width="0.2054%" height="15" fill="rgb(238,97,19)" fg:x="22890" fg:w="87"/><text x="54.2970%" y="815.50"></text></g><g><title>uuid::rng::bytes (87 samples, 0.21%)</title><rect x="54.0470%" y="789" width="0.2054%" height="15" fill="rgb(240,169,18)" fg:x="22890" fg:w="87"/><text x="54.2970%" y="799.50"></text></g><g><title>rand::random (87 samples, 0.21%)</title><rect x="54.0470%" y="773" width="0.2054%" height="15" fill="rgb(230,187,49)" fg:x="22890" fg:w="87"/><text x="54.2970%" y="783.50"></text></g><g><title>rand::rng::Rng::gen (87 samples, 0.21%)</title><rect x="54.0470%" y="757" width="0.2054%" height="15" fill="rgb(209,44,26)" fg:x="22890" fg:w="87"/><text x="54.2970%" y="767.50"></text></g><g><title>rand::distributions::other::&lt;impl rand::distributions::distribution::Distribution&lt;[T: _]&gt; for rand::distributions::Standard&gt;::sample (87 samples, 0.21%)</title><rect x="54.0470%" y="741" width="0.2054%" height="15" fill="rgb(244,0,6)" fg:x="22890" fg:w="87"/><text x="54.2970%" y="751.50"></text></g><g><title>rand::rng::Rng::gen (87 samples, 0.21%)</title><rect x="54.0470%" y="725" width="0.2054%" height="15" fill="rgb(248,18,21)" fg:x="22890" fg:w="87"/><text x="54.2970%" y="735.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u8&gt; for rand::distributions::Standard&gt;::sample (87 samples, 0.21%)</title><rect x="54.0470%" y="709" width="0.2054%" height="15" fill="rgb(245,180,19)" fg:x="22890" fg:w="87"/><text x="54.2970%" y="719.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (87 samples, 0.21%)</title><rect x="54.0470%" y="693" width="0.2054%" height="15" fill="rgb(252,118,36)" fg:x="22890" fg:w="87"/><text x="54.2970%" y="703.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (87 samples, 0.21%)</title><rect x="54.0470%" y="677" width="0.2054%" height="15" fill="rgb(210,224,19)" fg:x="22890" fg:w="87"/><text x="54.2970%" y="687.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (87 samples, 0.21%)</title><rect x="54.0470%" y="661" width="0.2054%" height="15" fill="rgb(218,30,24)" fg:x="22890" fg:w="87"/><text x="54.2970%" y="671.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (81 samples, 0.19%)</title><rect x="54.0612%" y="645" width="0.1913%" height="15" fill="rgb(219,75,50)" fg:x="22896" fg:w="81"/><text x="54.3112%" y="655.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (81 samples, 0.19%)</title><rect x="54.0612%" y="629" width="0.1913%" height="15" fill="rgb(234,72,50)" fg:x="22896" fg:w="81"/><text x="54.3112%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="54.3563%" y="693" width="0.0165%" height="15" fill="rgb(219,100,48)" fg:x="23021" fg:w="7"/><text x="54.6063%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="54.3563%" y="677" width="0.0165%" height="15" fill="rgb(253,5,41)" fg:x="23021" fg:w="7"/><text x="54.6063%" y="687.50"></text></g><g><title>__memcmp_evex_movbe (34 samples, 0.08%)</title><rect x="54.4343%" y="613" width="0.0803%" height="15" fill="rgb(247,181,11)" fg:x="23054" fg:w="34"/><text x="54.6843%" y="623.50"></text></g><g><title>&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (72 samples, 0.17%)</title><rect x="54.3729%" y="693" width="0.1700%" height="15" fill="rgb(222,223,25)" fg:x="23028" fg:w="72"/><text x="54.6229%" y="703.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (72 samples, 0.17%)</title><rect x="54.3729%" y="677" width="0.1700%" height="15" fill="rgb(214,198,28)" fg:x="23028" fg:w="72"/><text x="54.6229%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (72 samples, 0.17%)</title><rect x="54.3729%" y="661" width="0.1700%" height="15" fill="rgb(230,46,43)" fg:x="23028" fg:w="72"/><text x="54.6229%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (72 samples, 0.17%)</title><rect x="54.3729%" y="645" width="0.1700%" height="15" fill="rgb(233,65,53)" fg:x="23028" fg:w="72"/><text x="54.6229%" y="655.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (72 samples, 0.17%)</title><rect x="54.3729%" y="629" width="0.1700%" height="15" fill="rgb(221,121,27)" fg:x="23028" fg:w="72"/><text x="54.6229%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (10 samples, 0.02%)</title><rect x="54.5193%" y="613" width="0.0236%" height="15" fill="rgb(247,70,47)" fg:x="23090" fg:w="10"/><text x="54.7693%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (104 samples, 0.25%)</title><rect x="54.3068%" y="757" width="0.2456%" height="15" fill="rgb(228,85,35)" fg:x="23000" fg:w="104"/><text x="54.5568%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (104 samples, 0.25%)</title><rect x="54.3068%" y="741" width="0.2456%" height="15" fill="rgb(209,50,18)" fg:x="23000" fg:w="104"/><text x="54.5568%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (98 samples, 0.23%)</title><rect x="54.3209%" y="725" width="0.2314%" height="15" fill="rgb(250,19,35)" fg:x="23006" fg:w="98"/><text x="54.5709%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (98 samples, 0.23%)</title><rect x="54.3209%" y="709" width="0.2314%" height="15" fill="rgb(253,107,29)" fg:x="23006" fg:w="98"/><text x="54.5709%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.03%)</title><rect x="54.5523%" y="757" width="0.0283%" height="15" fill="rgb(252,179,29)" fg:x="23104" fg:w="12"/><text x="54.8023%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.03%)</title><rect x="54.5523%" y="741" width="0.0283%" height="15" fill="rgb(238,194,6)" fg:x="23104" fg:w="12"/><text x="54.8023%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (12 samples, 0.03%)</title><rect x="54.5523%" y="725" width="0.0283%" height="15" fill="rgb(238,164,29)" fg:x="23104" fg:w="12"/><text x="54.8023%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.02%)</title><rect x="54.5618%" y="709" width="0.0189%" height="15" fill="rgb(224,25,9)" fg:x="23108" fg:w="8"/><text x="54.8118%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="54.5618%" y="693" width="0.0189%" height="15" fill="rgb(244,153,23)" fg:x="23108" fg:w="8"/><text x="54.8118%" y="703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.02%)</title><rect x="54.5618%" y="677" width="0.0189%" height="15" fill="rgb(212,203,14)" fg:x="23108" fg:w="8"/><text x="54.8118%" y="687.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (5 samples, 0.01%)</title><rect x="54.5877%" y="725" width="0.0118%" height="15" fill="rgb(220,164,20)" fg:x="23119" fg:w="5"/><text x="54.8377%" y="735.50"></text></g><g><title>syscall (5 samples, 0.01%)</title><rect x="54.6019%" y="453" width="0.0118%" height="15" fill="rgb(222,203,48)" fg:x="23125" fg:w="5"/><text x="54.8519%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="54.6019%" y="437" width="0.0118%" height="15" fill="rgb(215,159,22)" fg:x="23125" fg:w="5"/><text x="54.8519%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="54.6019%" y="421" width="0.0118%" height="15" fill="rgb(216,183,47)" fg:x="23125" fg:w="5"/><text x="54.8519%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="54.6019%" y="405" width="0.0118%" height="15" fill="rgb(229,195,25)" fg:x="23125" fg:w="5"/><text x="54.8519%" y="415.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (10 samples, 0.02%)</title><rect x="54.6019%" y="661" width="0.0236%" height="15" fill="rgb(224,132,51)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="671.50"></text></g><g><title>tokio::runtime::task::raw::schedule (10 samples, 0.02%)</title><rect x="54.6019%" y="645" width="0.0236%" height="15" fill="rgb(240,63,7)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (10 samples, 0.02%)</title><rect x="54.6019%" y="629" width="0.0236%" height="15" fill="rgb(249,182,41)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (10 samples, 0.02%)</title><rect x="54.6019%" y="613" width="0.0236%" height="15" fill="rgb(243,47,26)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (10 samples, 0.02%)</title><rect x="54.6019%" y="597" width="0.0236%" height="15" fill="rgb(233,48,2)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="607.50"></text></g><g><title>tokio::runtime::context::with_scheduler (10 samples, 0.02%)</title><rect x="54.6019%" y="581" width="0.0236%" height="15" fill="rgb(244,165,34)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.02%)</title><rect x="54.6019%" y="565" width="0.0236%" height="15" fill="rgb(207,89,7)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="575.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (10 samples, 0.02%)</title><rect x="54.6019%" y="549" width="0.0236%" height="15" fill="rgb(244,117,36)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="559.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (10 samples, 0.02%)</title><rect x="54.6019%" y="533" width="0.0236%" height="15" fill="rgb(226,144,34)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (10 samples, 0.02%)</title><rect x="54.6019%" y="517" width="0.0236%" height="15" fill="rgb(213,23,19)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (10 samples, 0.02%)</title><rect x="54.6019%" y="501" width="0.0236%" height="15" fill="rgb(217,75,12)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (10 samples, 0.02%)</title><rect x="54.6019%" y="485" width="0.0236%" height="15" fill="rgb(224,159,17)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (10 samples, 0.02%)</title><rect x="54.6019%" y="469" width="0.0236%" height="15" fill="rgb(217,118,1)" fg:x="23125" fg:w="10"/><text x="54.8519%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::read_guard::RwLockReadGuard&lt;alloc::collections::btree::map::BTreeMap&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash,torrust_tracker::core::torrent::Entry&gt;&gt;&gt; (20 samples, 0.05%)</title><rect x="54.5807%" y="757" width="0.0472%" height="15" fill="rgb(232,180,48)" fg:x="23116" fg:w="20"/><text x="54.8307%" y="767.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (18 samples, 0.04%)</title><rect x="54.5854%" y="741" width="0.0425%" height="15" fill="rgb(230,27,33)" fg:x="23118" fg:w="18"/><text x="54.8354%" y="751.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (11 samples, 0.03%)</title><rect x="54.6019%" y="725" width="0.0260%" height="15" fill="rgb(205,31,21)" fg:x="23125" fg:w="11"/><text x="54.8519%" y="735.50"></text></g><g><title>core::task::wake::Waker::wake (11 samples, 0.03%)</title><rect x="54.6019%" y="709" width="0.0260%" height="15" fill="rgb(253,59,4)" fg:x="23125" fg:w="11"/><text x="54.8519%" y="719.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (11 samples, 0.03%)</title><rect x="54.6019%" y="693" width="0.0260%" height="15" fill="rgb(224,201,9)" fg:x="23125" fg:w="11"/><text x="54.8519%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (11 samples, 0.03%)</title><rect x="54.6019%" y="677" width="0.0260%" height="15" fill="rgb(229,206,30)" fg:x="23125" fg:w="11"/><text x="54.8519%" y="687.50"></text></g><g><title>torrust_tracker::core::torrent::Entry::get_peers_for_peer (5 samples, 0.01%)</title><rect x="54.6279%" y="757" width="0.0118%" height="15" fill="rgb(212,67,47)" fg:x="23136" fg:w="5"/><text x="54.8779%" y="767.50"></text></g><g><title>torrust_tracker::core::Tracker::get_torrent_peers_for_peer::{{closure}} (158 samples, 0.37%)</title><rect x="54.3044%" y="773" width="0.3731%" height="15" fill="rgb(211,96,50)" fg:x="22999" fg:w="158"/><text x="54.5544%" y="783.50"></text></g><g><title>torrust_tracker::core::torrent::repository::RepositoryAsyncSingle::get_torrents::{{closure}} (16 samples, 0.04%)</title><rect x="54.6397%" y="757" width="0.0378%" height="15" fill="rgb(252,114,18)" fg:x="23141" fg:w="16"/><text x="54.8897%" y="767.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}} (16 samples, 0.04%)</title><rect x="54.6397%" y="741" width="0.0378%" height="15" fill="rgb(223,58,37)" fg:x="23141" fg:w="16"/><text x="54.8897%" y="751.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}}::{{closure}} (16 samples, 0.04%)</title><rect x="54.6397%" y="725" width="0.0378%" height="15" fill="rgb(237,70,4)" fg:x="23141" fg:w="16"/><text x="54.8897%" y="735.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (16 samples, 0.04%)</title><rect x="54.6397%" y="709" width="0.0378%" height="15" fill="rgb(244,85,46)" fg:x="23141" fg:w="16"/><text x="54.8897%" y="719.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (14 samples, 0.03%)</title><rect x="54.6444%" y="693" width="0.0331%" height="15" fill="rgb(223,39,52)" fg:x="23143" fg:w="14"/><text x="54.8944%" y="703.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="54.8050%" y="645" width="0.0189%" height="15" fill="rgb(218,200,14)" fg:x="23211" fg:w="8"/><text x="55.0550%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="54.8050%" y="677" width="0.0307%" height="15" fill="rgb(208,171,16)" fg:x="23211" fg:w="13"/><text x="55.0550%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.03%)</title><rect x="54.8050%" y="661" width="0.0307%" height="15" fill="rgb(234,200,18)" fg:x="23211" fg:w="13"/><text x="55.0550%" y="671.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (5 samples, 0.01%)</title><rect x="54.8239%" y="645" width="0.0118%" height="15" fill="rgb(228,45,11)" fg:x="23219" fg:w="5"/><text x="55.0739%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (5 samples, 0.01%)</title><rect x="54.8239%" y="629" width="0.0118%" height="15" fill="rgb(237,182,11)" fg:x="23219" fg:w="5"/><text x="55.0739%" y="639.50"></text></g><g><title>__memcmp_evex_movbe (20 samples, 0.05%)</title><rect x="54.8569%" y="597" width="0.0472%" height="15" fill="rgb(241,175,49)" fg:x="23233" fg:w="20"/><text x="55.1069%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (15 samples, 0.04%)</title><rect x="54.9041%" y="597" width="0.0354%" height="15" fill="rgb(247,38,35)" fg:x="23253" fg:w="15"/><text x="55.1541%" y="607.50"></text></g><g><title>&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash as core::cmp::Ord&gt;::cmp (45 samples, 0.11%)</title><rect x="54.8357%" y="677" width="0.1063%" height="15" fill="rgb(228,39,49)" fg:x="23224" fg:w="45"/><text x="55.0857%" y="687.50"></text></g><g><title>core::array::&lt;impl core::cmp::Ord for [T: N]&gt;::cmp (45 samples, 0.11%)</title><rect x="54.8357%" y="661" width="0.1063%" height="15" fill="rgb(226,101,26)" fg:x="23224" fg:w="45"/><text x="55.0857%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for &amp;A&gt;::cmp (45 samples, 0.11%)</title><rect x="54.8357%" y="645" width="0.1063%" height="15" fill="rgb(206,141,19)" fg:x="23224" fg:w="45"/><text x="55.0857%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (45 samples, 0.11%)</title><rect x="54.8357%" y="629" width="0.1063%" height="15" fill="rgb(211,200,13)" fg:x="23224" fg:w="45"/><text x="55.0857%" y="639.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (45 samples, 0.11%)</title><rect x="54.8357%" y="613" width="0.1063%" height="15" fill="rgb(241,121,6)" fg:x="23224" fg:w="45"/><text x="55.0857%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (116 samples, 0.27%)</title><rect x="54.6822%" y="741" width="0.2739%" height="15" fill="rgb(234,221,29)" fg:x="23159" fg:w="116"/><text x="54.9322%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (114 samples, 0.27%)</title><rect x="54.6869%" y="725" width="0.2692%" height="15" fill="rgb(229,136,5)" fg:x="23161" fg:w="114"/><text x="54.9369%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (108 samples, 0.26%)</title><rect x="54.7011%" y="709" width="0.2550%" height="15" fill="rgb(238,36,11)" fg:x="23167" fg:w="108"/><text x="54.9511%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (108 samples, 0.26%)</title><rect x="54.7011%" y="693" width="0.2550%" height="15" fill="rgb(251,55,41)" fg:x="23167" fg:w="108"/><text x="54.9511%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (6 samples, 0.01%)</title><rect x="54.9419%" y="677" width="0.0142%" height="15" fill="rgb(242,34,40)" fg:x="23269" fg:w="6"/><text x="55.1919%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (8 samples, 0.02%)</title><rect x="54.9608%" y="741" width="0.0189%" height="15" fill="rgb(215,42,17)" fg:x="23277" fg:w="8"/><text x="55.2108%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8 samples, 0.02%)</title><rect x="54.9608%" y="725" width="0.0189%" height="15" fill="rgb(207,44,46)" fg:x="23277" fg:w="8"/><text x="55.2108%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (6 samples, 0.01%)</title><rect x="54.9655%" y="709" width="0.0142%" height="15" fill="rgb(211,206,28)" fg:x="23279" fg:w="6"/><text x="55.2155%" y="719.50"></text></g><g><title>syscall (16 samples, 0.04%)</title><rect x="55.0198%" y="437" width="0.0378%" height="15" fill="rgb(237,167,16)" fg:x="23302" fg:w="16"/><text x="55.2698%" y="447.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="55.0222%" y="421" width="0.0354%" height="15" fill="rgb(233,66,6)" fg:x="23303" fg:w="15"/><text x="55.2722%" y="431.50"></text></g><g><title>[unknown] (14 samples, 0.03%)</title><rect x="55.0246%" y="405" width="0.0331%" height="15" fill="rgb(246,123,29)" fg:x="23304" fg:w="14"/><text x="55.2746%" y="415.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="55.0316%" y="389" width="0.0260%" height="15" fill="rgb(209,62,40)" fg:x="23307" fg:w="11"/><text x="55.2816%" y="399.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="55.0316%" y="373" width="0.0260%" height="15" fill="rgb(218,4,25)" fg:x="23307" fg:w="11"/><text x="55.2816%" y="383.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="55.0316%" y="357" width="0.0260%" height="15" fill="rgb(253,91,49)" fg:x="23307" fg:w="11"/><text x="55.2816%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="55.0340%" y="341" width="0.0236%" height="15" fill="rgb(228,155,29)" fg:x="23308" fg:w="10"/><text x="55.2840%" y="351.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="55.0364%" y="325" width="0.0213%" height="15" fill="rgb(243,57,37)" fg:x="23309" fg:w="9"/><text x="55.2864%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="55.0434%" y="309" width="0.0142%" height="15" fill="rgb(244,167,17)" fg:x="23312" fg:w="6"/><text x="55.2934%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="55.0458%" y="293" width="0.0118%" height="15" fill="rgb(207,181,38)" fg:x="23313" fg:w="5"/><text x="55.2958%" y="303.50"></text></g><g><title>tokio::runtime::context::with_scheduler (8 samples, 0.02%)</title><rect x="55.0576%" y="437" width="0.0189%" height="15" fill="rgb(211,8,23)" fg:x="23318" fg:w="8"/><text x="55.3076%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.02%)</title><rect x="55.0600%" y="421" width="0.0165%" height="15" fill="rgb(235,11,44)" fg:x="23319" fg:w="7"/><text x="55.3100%" y="431.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (6 samples, 0.01%)</title><rect x="55.0623%" y="405" width="0.0142%" height="15" fill="rgb(248,18,52)" fg:x="23320" fg:w="6"/><text x="55.3123%" y="415.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="55.0623%" y="389" width="0.0142%" height="15" fill="rgb(208,4,7)" fg:x="23320" fg:w="6"/><text x="55.3123%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (5 samples, 0.01%)</title><rect x="55.0647%" y="373" width="0.0118%" height="15" fill="rgb(240,17,39)" fg:x="23321" fg:w="5"/><text x="55.3147%" y="383.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (5 samples, 0.01%)</title><rect x="55.0647%" y="357" width="0.0118%" height="15" fill="rgb(207,170,3)" fg:x="23321" fg:w="5"/><text x="55.3147%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.02%)</title><rect x="55.0765%" y="405" width="0.0189%" height="15" fill="rgb(236,100,52)" fg:x="23326" fg:w="8"/><text x="55.3265%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.02%)</title><rect x="55.0765%" y="389" width="0.0189%" height="15" fill="rgb(246,78,51)" fg:x="23326" fg:w="8"/><text x="55.3265%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (9 samples, 0.02%)</title><rect x="55.0765%" y="437" width="0.0213%" height="15" fill="rgb(211,17,15)" fg:x="23326" fg:w="9"/><text x="55.3265%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (9 samples, 0.02%)</title><rect x="55.0765%" y="421" width="0.0213%" height="15" fill="rgb(209,59,46)" fg:x="23326" fg:w="9"/><text x="55.3265%" y="431.50"></text></g><g><title>tokio::runtime::context::with_scheduler (40 samples, 0.09%)</title><rect x="55.0198%" y="565" width="0.0944%" height="15" fill="rgb(210,92,25)" fg:x="23302" fg:w="40"/><text x="55.2698%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (40 samples, 0.09%)</title><rect x="55.0198%" y="549" width="0.0944%" height="15" fill="rgb(238,174,52)" fg:x="23302" fg:w="40"/><text x="55.2698%" y="559.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (40 samples, 0.09%)</title><rect x="55.0198%" y="533" width="0.0944%" height="15" fill="rgb(230,73,7)" fg:x="23302" fg:w="40"/><text x="55.2698%" y="543.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (40 samples, 0.09%)</title><rect x="55.0198%" y="517" width="0.0944%" height="15" fill="rgb(243,124,40)" fg:x="23302" fg:w="40"/><text x="55.2698%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (40 samples, 0.09%)</title><rect x="55.0198%" y="501" width="0.0944%" height="15" fill="rgb(244,170,11)" fg:x="23302" fg:w="40"/><text x="55.2698%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (40 samples, 0.09%)</title><rect x="55.0198%" y="485" width="0.0944%" height="15" fill="rgb(207,114,54)" fg:x="23302" fg:w="40"/><text x="55.2698%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (40 samples, 0.09%)</title><rect x="55.0198%" y="469" width="0.0944%" height="15" fill="rgb(205,42,20)" fg:x="23302" fg:w="40"/><text x="55.2698%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (40 samples, 0.09%)</title><rect x="55.0198%" y="453" width="0.0944%" height="15" fill="rgb(230,30,28)" fg:x="23302" fg:w="40"/><text x="55.2698%" y="463.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (44 samples, 0.10%)</title><rect x="55.0151%" y="677" width="0.1039%" height="15" fill="rgb(205,73,54)" fg:x="23300" fg:w="44"/><text x="55.2651%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (44 samples, 0.10%)</title><rect x="55.0151%" y="661" width="0.1039%" height="15" fill="rgb(254,227,23)" fg:x="23300" fg:w="44"/><text x="55.2651%" y="671.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (44 samples, 0.10%)</title><rect x="55.0151%" y="645" width="0.1039%" height="15" fill="rgb(228,202,34)" fg:x="23300" fg:w="44"/><text x="55.2651%" y="655.50"></text></g><g><title>tokio::runtime::task::raw::schedule (43 samples, 0.10%)</title><rect x="55.0175%" y="629" width="0.1015%" height="15" fill="rgb(222,225,37)" fg:x="23301" fg:w="43"/><text x="55.2675%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (42 samples, 0.10%)</title><rect x="55.0198%" y="613" width="0.0992%" height="15" fill="rgb(221,14,54)" fg:x="23302" fg:w="42"/><text x="55.2698%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (42 samples, 0.10%)</title><rect x="55.0198%" y="597" width="0.0992%" height="15" fill="rgb(254,102,2)" fg:x="23302" fg:w="42"/><text x="55.2698%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (42 samples, 0.10%)</title><rect x="55.0198%" y="581" width="0.0992%" height="15" fill="rgb(232,104,17)" fg:x="23302" fg:w="42"/><text x="55.2698%" y="591.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (59 samples, 0.14%)</title><rect x="54.9821%" y="725" width="0.1393%" height="15" fill="rgb(250,220,14)" fg:x="23286" fg:w="59"/><text x="55.2321%" y="735.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (46 samples, 0.11%)</title><rect x="55.0128%" y="709" width="0.1086%" height="15" fill="rgb(241,158,9)" fg:x="23299" fg:w="46"/><text x="55.2628%" y="719.50"></text></g><g><title>core::task::wake::Waker::wake (46 samples, 0.11%)</title><rect x="55.0128%" y="693" width="0.1086%" height="15" fill="rgb(246,9,43)" fg:x="23299" fg:w="46"/><text x="55.2628%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (7 samples, 0.02%)</title><rect x="55.1497%" y="693" width="0.0165%" height="15" fill="rgb(206,73,33)" fg:x="23357" fg:w="7"/><text x="55.3997%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7 samples, 0.02%)</title><rect x="55.1497%" y="677" width="0.0165%" height="15" fill="rgb(222,79,8)" fg:x="23357" fg:w="7"/><text x="55.3997%" y="687.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7 samples, 0.02%)</title><rect x="55.1497%" y="661" width="0.0165%" height="15" fill="rgb(234,8,54)" fg:x="23357" fg:w="7"/><text x="55.3997%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.02%)</title><rect x="55.1497%" y="645" width="0.0165%" height="15" fill="rgb(209,134,38)" fg:x="23357" fg:w="7"/><text x="55.3997%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.02%)</title><rect x="55.1497%" y="629" width="0.0165%" height="15" fill="rgb(230,127,29)" fg:x="23357" fg:w="7"/><text x="55.3997%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="55.1497%" y="613" width="0.0165%" height="15" fill="rgb(242,44,41)" fg:x="23357" fg:w="7"/><text x="55.3997%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="55.1497%" y="597" width="0.0165%" height="15" fill="rgb(222,56,43)" fg:x="23357" fg:w="7"/><text x="55.3997%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (7 samples, 0.02%)</title><rect x="55.1497%" y="581" width="0.0165%" height="15" fill="rgb(238,39,47)" fg:x="23357" fg:w="7"/><text x="55.3997%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::rwlock::write_guard::RwLockWriteGuard&lt;alloc::collections::btree::map::BTreeMap&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash,torrust_tracker::core::torrent::Entry&gt;&gt;&gt; (82 samples, 0.19%)</title><rect x="54.9797%" y="741" width="0.1936%" height="15" fill="rgb(226,79,43)" fg:x="23285" fg:w="82"/><text x="55.2297%" y="751.50"></text></g><g><title>torrust_tracker::core::torrent::Entry::insert_or_update_peer (22 samples, 0.05%)</title><rect x="55.1214%" y="725" width="0.0519%" height="15" fill="rgb(242,105,53)" fg:x="23345" fg:w="22"/><text x="55.3714%" y="735.50"></text></g><g><title>torrust_tracker::core::torrent::Entry::get_stats (20 samples, 0.05%)</title><rect x="55.1261%" y="709" width="0.0472%" height="15" fill="rgb(251,132,46)" fg:x="23347" fg:w="20"/><text x="55.3761%" y="719.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (5 samples, 0.01%)</title><rect x="55.1828%" y="693" width="0.0118%" height="15" fill="rgb(231,77,14)" fg:x="23371" fg:w="5"/><text x="55.4328%" y="703.50"></text></g><g><title>tokio::runtime::context::budget (5 samples, 0.01%)</title><rect x="55.1828%" y="677" width="0.0118%" height="15" fill="rgb(240,135,9)" fg:x="23371" fg:w="5"/><text x="55.4328%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="55.1828%" y="661" width="0.0118%" height="15" fill="rgb(248,109,14)" fg:x="23371" fg:w="5"/><text x="55.4328%" y="671.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (5 samples, 0.01%)</title><rect x="55.1828%" y="645" width="0.0118%" height="15" fill="rgb(227,146,52)" fg:x="23371" fg:w="5"/><text x="55.4328%" y="655.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::{{closure}} (5 samples, 0.01%)</title><rect x="55.1828%" y="629" width="0.0118%" height="15" fill="rgb(232,54,3)" fg:x="23371" fg:w="5"/><text x="55.4328%" y="639.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.03%)</title><rect x="55.2087%" y="677" width="0.0260%" height="15" fill="rgb(229,201,43)" fg:x="23382" fg:w="11"/><text x="55.4587%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.03%)</title><rect x="55.2087%" y="661" width="0.0260%" height="15" fill="rgb(252,161,33)" fg:x="23382" fg:w="11"/><text x="55.4587%" y="671.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (10 samples, 0.02%)</title><rect x="55.2111%" y="645" width="0.0236%" height="15" fill="rgb(226,146,40)" fg:x="23383" fg:w="10"/><text x="55.4611%" y="655.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (6 samples, 0.01%)</title><rect x="55.2205%" y="629" width="0.0142%" height="15" fill="rgb(219,47,25)" fg:x="23387" fg:w="6"/><text x="55.4705%" y="639.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (28 samples, 0.07%)</title><rect x="55.1733%" y="709" width="0.0661%" height="15" fill="rgb(250,135,13)" fg:x="23367" fg:w="28"/><text x="55.4233%" y="719.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (19 samples, 0.04%)</title><rect x="55.1946%" y="693" width="0.0449%" height="15" fill="rgb(219,229,18)" fg:x="23376" fg:w="19"/><text x="55.4446%" y="703.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::{{closure}} (29 samples, 0.07%)</title><rect x="55.1733%" y="741" width="0.0685%" height="15" fill="rgb(217,152,27)" fg:x="23367" fg:w="29"/><text x="55.4233%" y="751.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::{{closure}}::{{closure}} (29 samples, 0.07%)</title><rect x="55.1733%" y="725" width="0.0685%" height="15" fill="rgb(225,71,47)" fg:x="23367" fg:w="29"/><text x="55.4233%" y="735.50"></text></g><g><title>_int_malloc (7 samples, 0.02%)</title><rect x="55.2465%" y="533" width="0.0165%" height="15" fill="rgb(220,139,14)" fg:x="23398" fg:w="7"/><text x="55.4965%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.02%)</title><rect x="55.2441%" y="725" width="0.0213%" height="15" fill="rgb(247,54,32)" fg:x="23397" fg:w="9"/><text x="55.4941%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (8 samples, 0.02%)</title><rect x="55.2465%" y="709" width="0.0189%" height="15" fill="rgb(252,131,39)" fg:x="23398" fg:w="8"/><text x="55.4965%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (8 samples, 0.02%)</title><rect x="55.2465%" y="693" width="0.0189%" height="15" fill="rgb(210,108,39)" fg:x="23398" fg:w="8"/><text x="55.4965%" y="703.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (8 samples, 0.02%)</title><rect x="55.2465%" y="677" width="0.0189%" height="15" fill="rgb(205,23,29)" fg:x="23398" fg:w="8"/><text x="55.4965%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (8 samples, 0.02%)</title><rect x="55.2465%" y="661" width="0.0189%" height="15" fill="rgb(246,139,46)" fg:x="23398" fg:w="8"/><text x="55.4965%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (8 samples, 0.02%)</title><rect x="55.2465%" y="645" width="0.0189%" height="15" fill="rgb(250,81,26)" fg:x="23398" fg:w="8"/><text x="55.4965%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="55.2465%" y="629" width="0.0189%" height="15" fill="rgb(214,104,7)" fg:x="23398" fg:w="8"/><text x="55.4965%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="55.2465%" y="613" width="0.0189%" height="15" fill="rgb(233,189,8)" fg:x="23398" fg:w="8"/><text x="55.4965%" y="623.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="55.2465%" y="597" width="0.0189%" height="15" fill="rgb(228,141,17)" fg:x="23398" fg:w="8"/><text x="55.4965%" y="607.50"></text></g><g><title>__rdl_alloc (8 samples, 0.02%)</title><rect x="55.2465%" y="581" width="0.0189%" height="15" fill="rgb(247,157,1)" fg:x="23398" fg:w="8"/><text x="55.4965%" y="591.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (8 samples, 0.02%)</title><rect x="55.2465%" y="565" width="0.0189%" height="15" fill="rgb(249,225,5)" fg:x="23398" fg:w="8"/><text x="55.4965%" y="575.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.02%)</title><rect x="55.2465%" y="549" width="0.0189%" height="15" fill="rgb(242,55,13)" fg:x="23398" fg:w="8"/><text x="55.4965%" y="559.50"></text></g><g><title>torrust_tracker::core::torrent::Entry::insert_or_update_peer (13 samples, 0.03%)</title><rect x="55.2418%" y="741" width="0.0307%" height="15" fill="rgb(230,49,50)" fg:x="23396" fg:w="13"/><text x="55.4918%" y="751.50"></text></g><g><title>torrust_tracker::core::Tracker::announce::{{closure}} (416 samples, 0.98%)</title><rect x="54.2926%" y="789" width="0.9822%" height="15" fill="rgb(241,111,38)" fg:x="22994" fg:w="416"/><text x="54.5426%" y="799.50"></text></g><g><title>torrust_tracker::core::Tracker::update_torrent_with_peer_and_get_stats::{{closure}} (253 samples, 0.60%)</title><rect x="54.6775%" y="773" width="0.5974%" height="15" fill="rgb(252,155,4)" fg:x="23157" fg:w="253"/><text x="54.9275%" y="783.50"></text></g><g><title>&lt;torrust_tracker::core::torrent::repository::RepositoryAsyncSingle as torrust_tracker::core::torrent::repository::TRepositoryAsync&gt;::update_torrent_with_peer_and_get_stats::{{closure}} (252 samples, 0.60%)</title><rect x="54.6798%" y="757" width="0.5950%" height="15" fill="rgb(212,69,32)" fg:x="23158" fg:w="252"/><text x="54.9298%" y="767.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="55.2772%" y="757" width="0.0142%" height="15" fill="rgb(243,107,47)" fg:x="23411" fg:w="6"/><text x="55.5272%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="55.2914%" y="645" width="0.0213%" height="15" fill="rgb(247,130,12)" fg:x="23417" fg:w="9"/><text x="55.5414%" y="655.50"></text></g><g><title>&lt;core::time::Nanoseconds as core::hash::Hash&gt;::hash (10 samples, 0.02%)</title><rect x="55.2914%" y="725" width="0.0236%" height="15" fill="rgb(233,74,16)" fg:x="23417" fg:w="10"/><text x="55.5414%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (10 samples, 0.02%)</title><rect x="55.2914%" y="709" width="0.0236%" height="15" fill="rgb(208,58,18)" fg:x="23417" fg:w="10"/><text x="55.5414%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u32 (10 samples, 0.02%)</title><rect x="55.2914%" y="693" width="0.0236%" height="15" fill="rgb(242,225,1)" fg:x="23417" fg:w="10"/><text x="55.5414%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="55.2914%" y="677" width="0.0236%" height="15" fill="rgb(249,39,40)" fg:x="23417" fg:w="10"/><text x="55.5414%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="55.2914%" y="661" width="0.0236%" height="15" fill="rgb(207,72,44)" fg:x="23417" fg:w="10"/><text x="55.5414%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="55.3150%" y="661" width="0.0213%" height="15" fill="rgb(215,193,12)" fg:x="23427" fg:w="9"/><text x="55.5650%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::hash::Hash&gt;::hash (20 samples, 0.05%)</title><rect x="55.2914%" y="741" width="0.0472%" height="15" fill="rgb(248,41,39)" fg:x="23417" fg:w="20"/><text x="55.5414%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (10 samples, 0.02%)</title><rect x="55.3150%" y="725" width="0.0236%" height="15" fill="rgb(253,85,4)" fg:x="23427" fg:w="10"/><text x="55.5650%" y="735.50"></text></g><g><title>core::hash::Hasher::write_u64 (10 samples, 0.02%)</title><rect x="55.3150%" y="709" width="0.0236%" height="15" fill="rgb(243,70,31)" fg:x="23427" fg:w="10"/><text x="55.5650%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="55.3150%" y="693" width="0.0236%" height="15" fill="rgb(253,195,26)" fg:x="23427" fg:w="10"/><text x="55.5650%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="55.3150%" y="677" width="0.0236%" height="15" fill="rgb(243,42,11)" fg:x="23427" fg:w="10"/><text x="55.5650%" y="687.50"></text></g><g><title>&lt;torrust_tracker::shared::clock::time_extent::TimeExtent as core::hash::Hash&gt;::hash (31 samples, 0.07%)</title><rect x="55.2914%" y="757" width="0.0732%" height="15" fill="rgb(239,66,17)" fg:x="23417" fg:w="31"/><text x="55.5414%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (11 samples, 0.03%)</title><rect x="55.3386%" y="741" width="0.0260%" height="15" fill="rgb(217,132,21)" fg:x="23437" fg:w="11"/><text x="55.5886%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u64 (11 samples, 0.03%)</title><rect x="55.3386%" y="725" width="0.0260%" height="15" fill="rgb(252,202,21)" fg:x="23437" fg:w="11"/><text x="55.5886%" y="735.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="55.3386%" y="709" width="0.0260%" height="15" fill="rgb(233,98,36)" fg:x="23437" fg:w="11"/><text x="55.5886%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="55.3386%" y="693" width="0.0260%" height="15" fill="rgb(216,153,54)" fg:x="23437" fg:w="11"/><text x="55.5886%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="55.3386%" y="677" width="0.0260%" height="15" fill="rgb(250,99,7)" fg:x="23437" fg:w="11"/><text x="55.5886%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.01%)</title><rect x="55.3929%" y="661" width="0.0118%" height="15" fill="rgb(207,56,50)" fg:x="23460" fg:w="5"/><text x="55.6429%" y="671.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (22 samples, 0.05%)</title><rect x="55.3646%" y="757" width="0.0519%" height="15" fill="rgb(244,61,34)" fg:x="23448" fg:w="22"/><text x="55.6146%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (22 samples, 0.05%)</title><rect x="55.3646%" y="741" width="0.0519%" height="15" fill="rgb(241,50,38)" fg:x="23448" fg:w="22"/><text x="55.6146%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (18 samples, 0.04%)</title><rect x="55.3740%" y="725" width="0.0425%" height="15" fill="rgb(212,166,30)" fg:x="23452" fg:w="18"/><text x="55.6240%" y="735.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.04%)</title><rect x="55.3740%" y="709" width="0.0425%" height="15" fill="rgb(249,127,32)" fg:x="23452" fg:w="18"/><text x="55.6240%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (18 samples, 0.04%)</title><rect x="55.3740%" y="693" width="0.0425%" height="15" fill="rgb(209,103,0)" fg:x="23452" fg:w="18"/><text x="55.6240%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.04%)</title><rect x="55.3764%" y="677" width="0.0401%" height="15" fill="rgb(238,209,51)" fg:x="23453" fg:w="17"/><text x="55.6264%" y="687.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (60 samples, 0.14%)</title><rect x="55.2772%" y="773" width="0.1417%" height="15" fill="rgb(237,56,23)" fg:x="23411" fg:w="60"/><text x="55.5272%" y="783.50"></text></g><g><title>core::num::&lt;impl u128&gt;::checked_div (10 samples, 0.02%)</title><rect x="55.4189%" y="741" width="0.0236%" height="15" fill="rgb(215,153,46)" fg:x="23471" fg:w="10"/><text x="55.6689%" y="751.50"></text></g><g><title>[[vdso]] (10 samples, 0.02%)</title><rect x="55.4189%" y="725" width="0.0236%" height="15" fill="rgb(224,49,31)" fg:x="23471" fg:w="10"/><text x="55.6689%" y="735.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::check (79 samples, 0.19%)</title><rect x="55.2748%" y="789" width="0.1865%" height="15" fill="rgb(250,18,42)" fg:x="23410" fg:w="79"/><text x="55.5248%" y="799.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::get_last_time_extent (18 samples, 0.04%)</title><rect x="55.4189%" y="773" width="0.0425%" height="15" fill="rgb(215,176,39)" fg:x="23471" fg:w="18"/><text x="55.6689%" y="783.50"></text></g><g><title>torrust_tracker::shared::clock::time_extent::Make::now (18 samples, 0.04%)</title><rect x="55.4189%" y="757" width="0.0425%" height="15" fill="rgb(223,77,29)" fg:x="23471" fg:w="18"/><text x="55.6689%" y="767.50"></text></g><g><title>torrust_tracker::shared::clock::working_clock::&lt;impl torrust_tracker::shared::clock::Time for torrust_tracker::shared::clock::Clock&lt;_&gt;&gt;::now (8 samples, 0.02%)</title><rect x="55.4425%" y="741" width="0.0189%" height="15" fill="rgb(234,94,52)" fg:x="23481" fg:w="8"/><text x="55.6925%" y="751.50"></text></g><g><title>std::time::SystemTime::now (5 samples, 0.01%)</title><rect x="55.4496%" y="725" width="0.0118%" height="15" fill="rgb(220,154,50)" fg:x="23484" fg:w="5"/><text x="55.6996%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (5 samples, 0.01%)</title><rect x="55.4496%" y="709" width="0.0118%" height="15" fill="rgb(212,11,10)" fg:x="23484" fg:w="5"/><text x="55.6996%" y="719.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (7 samples, 0.02%)</title><rect x="55.4614%" y="789" width="0.0165%" height="15" fill="rgb(205,166,19)" fg:x="23489" fg:w="7"/><text x="55.7114%" y="799.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (6 samples, 0.01%)</title><rect x="55.4637%" y="773" width="0.0142%" height="15" fill="rgb(244,198,16)" fg:x="23490" fg:w="6"/><text x="55.7137%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (6 samples, 0.01%)</title><rect x="55.4637%" y="757" width="0.0142%" height="15" fill="rgb(219,69,12)" fg:x="23490" fg:w="6"/><text x="55.7137%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (6 samples, 0.01%)</title><rect x="55.4637%" y="741" width="0.0142%" height="15" fill="rgb(245,30,7)" fg:x="23490" fg:w="6"/><text x="55.7137%" y="751.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="55.4637%" y="725" width="0.0142%" height="15" fill="rgb(218,221,48)" fg:x="23490" fg:w="6"/><text x="55.7137%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="55.4637%" y="709" width="0.0142%" height="15" fill="rgb(216,66,15)" fg:x="23490" fg:w="6"/><text x="55.7137%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="55.4637%" y="693" width="0.0142%" height="15" fill="rgb(226,122,50)" fg:x="23490" fg:w="6"/><text x="55.7137%" y="703.50"></text></g><g><title>torrust_tracker::servers::udp::peer_builder::from_request (5 samples, 0.01%)</title><rect x="55.4779%" y="789" width="0.0118%" height="15" fill="rgb(239,156,16)" fg:x="23496" fg:w="5"/><text x="55.7279%" y="799.50"></text></g><g><title>torrust_tracker::shared::clock::working_clock::&lt;impl torrust_tracker::shared::clock::Time for torrust_tracker::shared::clock::Clock&lt;_&gt;&gt;::now (5 samples, 0.01%)</title><rect x="55.4779%" y="773" width="0.0118%" height="15" fill="rgb(224,27,38)" fg:x="23496" fg:w="5"/><text x="55.7279%" y="783.50"></text></g><g><title>std::time::SystemTime::now (5 samples, 0.01%)</title><rect x="55.4779%" y="757" width="0.0118%" height="15" fill="rgb(224,39,27)" fg:x="23496" fg:w="5"/><text x="55.7279%" y="767.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (5 samples, 0.01%)</title><rect x="55.4779%" y="741" width="0.0118%" height="15" fill="rgb(215,92,29)" fg:x="23496" fg:w="5"/><text x="55.7279%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.01%)</title><rect x="55.4779%" y="725" width="0.0118%" height="15" fill="rgb(207,159,16)" fg:x="23496" fg:w="5"/><text x="55.7279%" y="735.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_announce::{{closure}} (516 samples, 1.22%)</title><rect x="54.2761%" y="805" width="1.2184%" height="15" fill="rgb(238,163,47)" fg:x="22987" fg:w="516"/><text x="54.5261%" y="815.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (10 samples, 0.02%)</title><rect x="55.4968%" y="757" width="0.0236%" height="15" fill="rgb(219,91,49)" fg:x="23504" fg:w="10"/><text x="55.7468%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="55.5204%" y="645" width="0.0189%" height="15" fill="rgb(227,167,31)" fg:x="23514" fg:w="8"/><text x="55.7704%" y="655.50"></text></g><g><title>&lt;core::time::Nanoseconds as core::hash::Hash&gt;::hash (9 samples, 0.02%)</title><rect x="55.5204%" y="725" width="0.0213%" height="15" fill="rgb(234,80,54)" fg:x="23514" fg:w="9"/><text x="55.7704%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (9 samples, 0.02%)</title><rect x="55.5204%" y="709" width="0.0213%" height="15" fill="rgb(212,114,2)" fg:x="23514" fg:w="9"/><text x="55.7704%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u32 (9 samples, 0.02%)</title><rect x="55.5204%" y="693" width="0.0213%" height="15" fill="rgb(234,50,24)" fg:x="23514" fg:w="9"/><text x="55.7704%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="55.5204%" y="677" width="0.0213%" height="15" fill="rgb(221,68,8)" fg:x="23514" fg:w="9"/><text x="55.7704%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="55.5204%" y="661" width="0.0213%" height="15" fill="rgb(254,180,31)" fg:x="23514" fg:w="9"/><text x="55.7704%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.01%)</title><rect x="55.5487%" y="645" width="0.0118%" height="15" fill="rgb(247,130,50)" fg:x="23526" fg:w="5"/><text x="55.7987%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.03%)</title><rect x="55.5417%" y="661" width="0.0283%" height="15" fill="rgb(211,109,4)" fg:x="23523" fg:w="12"/><text x="55.7917%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::hash::Hash&gt;::hash (23 samples, 0.05%)</title><rect x="55.5204%" y="741" width="0.0543%" height="15" fill="rgb(238,50,21)" fg:x="23514" fg:w="23"/><text x="55.7704%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (14 samples, 0.03%)</title><rect x="55.5417%" y="725" width="0.0331%" height="15" fill="rgb(225,57,45)" fg:x="23523" fg:w="14"/><text x="55.7917%" y="735.50"></text></g><g><title>core::hash::Hasher::write_u64 (14 samples, 0.03%)</title><rect x="55.5417%" y="709" width="0.0331%" height="15" fill="rgb(209,196,50)" fg:x="23523" fg:w="14"/><text x="55.7917%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="55.5417%" y="693" width="0.0331%" height="15" fill="rgb(242,140,13)" fg:x="23523" fg:w="14"/><text x="55.7917%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="55.5417%" y="677" width="0.0331%" height="15" fill="rgb(217,111,7)" fg:x="23523" fg:w="14"/><text x="55.7917%" y="687.50"></text></g><g><title>&lt;torrust_tracker::shared::clock::time_extent::TimeExtent as core::hash::Hash&gt;::hash (34 samples, 0.08%)</title><rect x="55.5204%" y="757" width="0.0803%" height="15" fill="rgb(253,193,51)" fg:x="23514" fg:w="34"/><text x="55.7704%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (11 samples, 0.03%)</title><rect x="55.5747%" y="741" width="0.0260%" height="15" fill="rgb(252,70,29)" fg:x="23537" fg:w="11"/><text x="55.8247%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u64 (11 samples, 0.03%)</title><rect x="55.5747%" y="725" width="0.0260%" height="15" fill="rgb(232,127,12)" fg:x="23537" fg:w="11"/><text x="55.8247%" y="735.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="55.5747%" y="709" width="0.0260%" height="15" fill="rgb(211,180,21)" fg:x="23537" fg:w="11"/><text x="55.8247%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="55.5747%" y="693" width="0.0260%" height="15" fill="rgb(229,72,13)" fg:x="23537" fg:w="11"/><text x="55.8247%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="55.5747%" y="677" width="0.0260%" height="15" fill="rgb(240,211,49)" fg:x="23537" fg:w="11"/><text x="55.8247%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.01%)</title><rect x="55.6172%" y="661" width="0.0142%" height="15" fill="rgb(219,149,40)" fg:x="23555" fg:w="6"/><text x="55.8672%" y="671.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::build (62 samples, 0.15%)</title><rect x="55.4968%" y="773" width="0.1464%" height="15" fill="rgb(210,127,46)" fg:x="23504" fg:w="62"/><text x="55.7468%" y="783.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (18 samples, 0.04%)</title><rect x="55.6007%" y="757" width="0.0425%" height="15" fill="rgb(220,106,7)" fg:x="23548" fg:w="18"/><text x="55.8507%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (18 samples, 0.04%)</title><rect x="55.6007%" y="741" width="0.0425%" height="15" fill="rgb(249,31,22)" fg:x="23548" fg:w="18"/><text x="55.8507%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (16 samples, 0.04%)</title><rect x="55.6054%" y="725" width="0.0378%" height="15" fill="rgb(253,1,49)" fg:x="23550" fg:w="16"/><text x="55.8554%" y="735.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.04%)</title><rect x="55.6054%" y="709" width="0.0378%" height="15" fill="rgb(227,144,33)" fg:x="23550" fg:w="16"/><text x="55.8554%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.04%)</title><rect x="55.6054%" y="693" width="0.0378%" height="15" fill="rgb(249,163,44)" fg:x="23550" fg:w="16"/><text x="55.8554%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.04%)</title><rect x="55.6078%" y="677" width="0.0354%" height="15" fill="rgb(234,15,39)" fg:x="23551" fg:w="15"/><text x="55.8578%" y="687.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.01%)</title><rect x="55.6314%" y="661" width="0.0118%" height="15" fill="rgb(207,66,16)" fg:x="23561" fg:w="5"/><text x="55.8814%" y="671.50"></text></g><g><title>core::num::&lt;impl u128&gt;::checked_div (5 samples, 0.01%)</title><rect x="55.6455%" y="741" width="0.0118%" height="15" fill="rgb(233,112,24)" fg:x="23567" fg:w="5"/><text x="55.8955%" y="751.50"></text></g><g><title>[[vdso]] (5 samples, 0.01%)</title><rect x="55.6455%" y="725" width="0.0118%" height="15" fill="rgb(230,90,22)" fg:x="23567" fg:w="5"/><text x="55.8955%" y="735.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_connect::{{closure}} (77 samples, 0.18%)</title><rect x="55.4944%" y="805" width="0.1818%" height="15" fill="rgb(229,61,13)" fg:x="23503" fg:w="77"/><text x="55.7444%" y="815.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::make (76 samples, 0.18%)</title><rect x="55.4968%" y="789" width="0.1794%" height="15" fill="rgb(225,57,24)" fg:x="23504" fg:w="76"/><text x="55.7468%" y="799.50"></text></g><g><title>torrust_tracker::servers::udp::connection_cookie::cookie_builder::get_last_time_extent (14 samples, 0.03%)</title><rect x="55.6432%" y="773" width="0.0331%" height="15" fill="rgb(208,169,48)" fg:x="23566" fg:w="14"/><text x="55.8932%" y="783.50"></text></g><g><title>torrust_tracker::shared::clock::time_extent::Make::now (13 samples, 0.03%)</title><rect x="55.6455%" y="757" width="0.0307%" height="15" fill="rgb(244,218,51)" fg:x="23567" fg:w="13"/><text x="55.8955%" y="767.50"></text></g><g><title>torrust_tracker::shared::clock::working_clock::&lt;impl torrust_tracker::shared::clock::Time for torrust_tracker::shared::clock::Clock&lt;_&gt;&gt;::now (8 samples, 0.02%)</title><rect x="55.6573%" y="741" width="0.0189%" height="15" fill="rgb(214,148,10)" fg:x="23572" fg:w="8"/><text x="55.9073%" y="751.50"></text></g><g><title>std::time::SystemTime::now (7 samples, 0.02%)</title><rect x="55.6597%" y="725" width="0.0165%" height="15" fill="rgb(225,174,27)" fg:x="23573" fg:w="7"/><text x="55.9097%" y="735.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (7 samples, 0.02%)</title><rect x="55.6597%" y="709" width="0.0165%" height="15" fill="rgb(230,96,26)" fg:x="23573" fg:w="7"/><text x="55.9097%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.01%)</title><rect x="55.6644%" y="693" width="0.0118%" height="15" fill="rgb(232,10,30)" fg:x="23575" fg:w="5"/><text x="55.9144%" y="703.50"></text></g><g><title>__GI___clock_gettime (5 samples, 0.01%)</title><rect x="55.6644%" y="677" width="0.0118%" height="15" fill="rgb(222,8,50)" fg:x="23575" fg:w="5"/><text x="55.9144%" y="687.50"></text></g><g><title>torrust_tracker::core::ScrapeData::add_file (5 samples, 0.01%)</title><rect x="55.6786%" y="773" width="0.0118%" height="15" fill="rgb(213,81,27)" fg:x="23581" fg:w="5"/><text x="55.9286%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.01%)</title><rect x="55.6786%" y="757" width="0.0118%" height="15" fill="rgb(245,50,10)" fg:x="23581" fg:w="5"/><text x="55.9286%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="55.6786%" y="741" width="0.0118%" height="15" fill="rgb(216,100,18)" fg:x="23581" fg:w="5"/><text x="55.9286%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (9 samples, 0.02%)</title><rect x="55.6904%" y="757" width="0.0213%" height="15" fill="rgb(236,147,54)" fg:x="23586" fg:w="9"/><text x="55.9404%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (9 samples, 0.02%)</title><rect x="55.6904%" y="741" width="0.0213%" height="15" fill="rgb(205,143,26)" fg:x="23586" fg:w="9"/><text x="55.9404%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.02%)</title><rect x="55.6928%" y="725" width="0.0189%" height="15" fill="rgb(236,26,9)" fg:x="23587" fg:w="8"/><text x="55.9428%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.02%)</title><rect x="55.6928%" y="709" width="0.0189%" height="15" fill="rgb(221,165,53)" fg:x="23587" fg:w="8"/><text x="55.9428%" y="719.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_request::{{closure}} (620 samples, 1.46%)</title><rect x="54.2525%" y="821" width="1.4639%" height="15" fill="rgb(214,110,17)" fg:x="22977" fg:w="620"/><text x="54.5025%" y="831.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_scrape::{{closure}} (17 samples, 0.04%)</title><rect x="55.6762%" y="805" width="0.0401%" height="15" fill="rgb(237,197,12)" fg:x="23580" fg:w="17"/><text x="55.9262%" y="815.50"></text></g><g><title>torrust_tracker::core::Tracker::scrape::{{closure}} (16 samples, 0.04%)</title><rect x="55.6786%" y="789" width="0.0378%" height="15" fill="rgb(205,84,17)" fg:x="23581" fg:w="16"/><text x="55.9286%" y="799.50"></text></g><g><title>torrust_tracker::core::Tracker::get_swarm_metadata::{{closure}} (11 samples, 0.03%)</title><rect x="55.6904%" y="773" width="0.0260%" height="15" fill="rgb(237,18,45)" fg:x="23586" fg:w="11"/><text x="55.9404%" y="783.50"></text></g><g><title>core::fmt::Formatter::new (5 samples, 0.01%)</title><rect x="55.7447%" y="789" width="0.0118%" height="15" fill="rgb(221,87,14)" fg:x="23609" fg:w="5"/><text x="55.9947%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="55.7919%" y="677" width="0.0118%" height="15" fill="rgb(238,186,15)" fg:x="23629" fg:w="5"/><text x="56.0419%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="55.7919%" y="661" width="0.0118%" height="15" fill="rgb(208,115,11)" fg:x="23629" fg:w="5"/><text x="56.0419%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="55.7919%" y="645" width="0.0118%" height="15" fill="rgb(254,175,0)" fg:x="23629" fg:w="5"/><text x="56.0419%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="55.7919%" y="629" width="0.0118%" height="15" fill="rgb(227,24,42)" fg:x="23629" fg:w="5"/><text x="56.0419%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="55.7919%" y="613" width="0.0118%" height="15" fill="rgb(223,211,37)" fg:x="23629" fg:w="5"/><text x="56.0419%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="55.7919%" y="757" width="0.0165%" height="15" fill="rgb(235,49,27)" fg:x="23629" fg:w="7"/><text x="56.0419%" y="767.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="55.7919%" y="741" width="0.0165%" height="15" fill="rgb(254,97,51)" fg:x="23629" fg:w="7"/><text x="56.0419%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.02%)</title><rect x="55.7919%" y="725" width="0.0165%" height="15" fill="rgb(249,51,40)" fg:x="23629" fg:w="7"/><text x="56.0419%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.02%)</title><rect x="55.7919%" y="709" width="0.0165%" height="15" fill="rgb(210,128,45)" fg:x="23629" fg:w="7"/><text x="56.0419%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.02%)</title><rect x="55.7919%" y="693" width="0.0165%" height="15" fill="rgb(224,137,50)" fg:x="23629" fg:w="7"/><text x="56.0419%" y="703.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (29 samples, 0.07%)</title><rect x="55.7565%" y="789" width="0.0685%" height="15" fill="rgb(242,15,9)" fg:x="23614" fg:w="29"/><text x="56.0065%" y="799.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (28 samples, 0.07%)</title><rect x="55.7589%" y="773" width="0.0661%" height="15" fill="rgb(233,187,41)" fg:x="23615" fg:w="28"/><text x="56.0089%" y="783.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (15 samples, 0.04%)</title><rect x="55.8250%" y="789" width="0.0354%" height="15" fill="rgb(227,2,29)" fg:x="23643" fg:w="15"/><text x="56.0750%" y="799.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (14 samples, 0.03%)</title><rect x="55.8274%" y="773" width="0.0331%" height="15" fill="rgb(222,70,3)" fg:x="23644" fg:w="14"/><text x="56.0774%" y="783.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (55 samples, 0.13%)</title><rect x="55.7329%" y="805" width="0.1299%" height="15" fill="rgb(213,11,42)" fg:x="23604" fg:w="55"/><text x="55.9829%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (9 samples, 0.02%)</title><rect x="55.8651%" y="805" width="0.0213%" height="15" fill="rgb(225,150,9)" fg:x="23660" fg:w="9"/><text x="56.1151%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.02%)</title><rect x="55.8887%" y="741" width="0.0189%" height="15" fill="rgb(230,162,45)" fg:x="23670" fg:w="8"/><text x="56.1387%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.02%)</title><rect x="55.8887%" y="725" width="0.0189%" height="15" fill="rgb(222,14,52)" fg:x="23670" fg:w="8"/><text x="56.1387%" y="735.50"></text></g><g><title>__rdl_dealloc (8 samples, 0.02%)</title><rect x="55.8887%" y="709" width="0.0189%" height="15" fill="rgb(254,198,14)" fg:x="23670" fg:w="8"/><text x="56.1387%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (8 samples, 0.02%)</title><rect x="55.8887%" y="693" width="0.0189%" height="15" fill="rgb(220,217,30)" fg:x="23670" fg:w="8"/><text x="56.1387%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 0.03%)</title><rect x="55.8864%" y="805" width="0.0283%" height="15" fill="rgb(215,146,41)" fg:x="23669" fg:w="12"/><text x="56.1364%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.03%)</title><rect x="55.8864%" y="789" width="0.0283%" height="15" fill="rgb(217,27,36)" fg:x="23669" fg:w="12"/><text x="56.1364%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.03%)</title><rect x="55.8864%" y="773" width="0.0283%" height="15" fill="rgb(219,218,39)" fg:x="23669" fg:w="12"/><text x="56.1364%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="55.8864%" y="757" width="0.0283%" height="15" fill="rgb(219,4,42)" fg:x="23669" fg:w="12"/><text x="56.1364%" y="767.50"></text></g><g><title>torrust_tracker::servers::udp::logging::map_action_name (7 samples, 0.02%)</title><rect x="55.9194%" y="805" width="0.0165%" height="15" fill="rgb(249,119,36)" fg:x="23683" fg:w="7"/><text x="56.1694%" y="815.50"></text></g><g><title>binascii::bin2hex (13 samples, 0.03%)</title><rect x="55.9407%" y="757" width="0.0307%" height="15" fill="rgb(209,23,33)" fg:x="23692" fg:w="13"/><text x="56.1907%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="55.9572%" y="741" width="0.0142%" height="15" fill="rgb(211,10,0)" fg:x="23699" fg:w="6"/><text x="56.2072%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="55.9572%" y="725" width="0.0142%" height="15" fill="rgb(208,99,37)" fg:x="23699" fg:w="6"/><text x="56.2072%" y="735.50"></text></g><g><title>core::fmt::write (6 samples, 0.01%)</title><rect x="55.9785%" y="741" width="0.0142%" height="15" fill="rgb(213,132,31)" fg:x="23708" fg:w="6"/><text x="56.2285%" y="751.50"></text></g><g><title>torrust_tracker::shared::bit_torrent::info_hash::InfoHash::to_hex_string (32 samples, 0.08%)</title><rect x="55.9360%" y="805" width="0.0756%" height="15" fill="rgb(243,129,40)" fg:x="23690" fg:w="32"/><text x="56.1860%" y="815.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (32 samples, 0.08%)</title><rect x="55.9360%" y="789" width="0.0756%" height="15" fill="rgb(210,66,33)" fg:x="23690" fg:w="32"/><text x="56.1860%" y="799.50"></text></g><g><title>&lt;torrust_tracker::shared::bit_torrent::info_hash::InfoHash as core::fmt::Display&gt;::fmt (31 samples, 0.07%)</title><rect x="55.9383%" y="773" width="0.0732%" height="15" fill="rgb(209,189,4)" fg:x="23691" fg:w="31"/><text x="56.1883%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_fmt (17 samples, 0.04%)</title><rect x="55.9714%" y="757" width="0.0401%" height="15" fill="rgb(214,107,37)" fg:x="23705" fg:w="17"/><text x="56.2214%" y="767.50"></text></g><g><title>core::str::converts::from_utf8 (8 samples, 0.02%)</title><rect x="55.9926%" y="741" width="0.0189%" height="15" fill="rgb(245,88,54)" fg:x="23714" fg:w="8"/><text x="56.2426%" y="751.50"></text></g><g><title>core::str::validations::run_utf8_validation (6 samples, 0.01%)</title><rect x="55.9974%" y="725" width="0.0142%" height="15" fill="rgb(205,146,20)" fg:x="23716" fg:w="6"/><text x="56.2474%" y="735.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request (127 samples, 0.30%)</title><rect x="55.7164%" y="821" width="0.2999%" height="15" fill="rgb(220,161,25)" fg:x="23597" fg:w="127"/><text x="55.9664%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="56.0729%" y="677" width="0.0189%" height="15" fill="rgb(215,152,15)" fg:x="23748" fg:w="8"/><text x="56.3229%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="56.0729%" y="661" width="0.0189%" height="15" fill="rgb(233,192,44)" fg:x="23748" fg:w="8"/><text x="56.3229%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.02%)</title><rect x="56.0729%" y="645" width="0.0189%" height="15" fill="rgb(240,170,46)" fg:x="23748" fg:w="8"/><text x="56.3229%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.02%)</title><rect x="56.0729%" y="629" width="0.0189%" height="15" fill="rgb(207,104,33)" fg:x="23748" fg:w="8"/><text x="56.3229%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="56.0753%" y="613" width="0.0165%" height="15" fill="rgb(219,21,39)" fg:x="23749" fg:w="7"/><text x="56.3253%" y="623.50"></text></g><g><title>[[vdso]] (5 samples, 0.01%)</title><rect x="56.0800%" y="597" width="0.0118%" height="15" fill="rgb(214,133,29)" fg:x="23751" fg:w="5"/><text x="56.3300%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.03%)</title><rect x="56.0729%" y="757" width="0.0283%" height="15" fill="rgb(226,93,6)" fg:x="23748" fg:w="12"/><text x="56.3229%" y="767.50"></text></g><g><title>alloc::string::String::push_str (12 samples, 0.03%)</title><rect x="56.0729%" y="741" width="0.0283%" height="15" fill="rgb(252,222,34)" fg:x="23748" fg:w="12"/><text x="56.3229%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.03%)</title><rect x="56.0729%" y="725" width="0.0283%" height="15" fill="rgb(252,92,48)" fg:x="23748" fg:w="12"/><text x="56.3229%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.03%)</title><rect x="56.0729%" y="709" width="0.0283%" height="15" fill="rgb(245,223,24)" fg:x="23748" fg:w="12"/><text x="56.3229%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.03%)</title><rect x="56.0729%" y="693" width="0.0283%" height="15" fill="rgb(205,176,3)" fg:x="23748" fg:w="12"/><text x="56.3229%" y="703.50"></text></g><g><title>[[vdso]] (8 samples, 0.02%)</title><rect x="56.1012%" y="757" width="0.0189%" height="15" fill="rgb(235,151,15)" fg:x="23760" fg:w="8"/><text x="56.3512%" y="767.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (36 samples, 0.09%)</title><rect x="56.0469%" y="805" width="0.0850%" height="15" fill="rgb(237,209,11)" fg:x="23737" fg:w="36"/><text x="56.2969%" y="815.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (31 samples, 0.07%)</title><rect x="56.0587%" y="789" width="0.0732%" height="15" fill="rgb(243,227,24)" fg:x="23742" fg:w="31"/><text x="56.3087%" y="799.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (29 samples, 0.07%)</title><rect x="56.0635%" y="773" width="0.0685%" height="15" fill="rgb(239,193,16)" fg:x="23744" fg:w="29"/><text x="56.3135%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (6 samples, 0.01%)</title><rect x="56.1390%" y="805" width="0.0142%" height="15" fill="rgb(231,27,9)" fg:x="23776" fg:w="6"/><text x="56.3890%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.01%)</title><rect x="56.1532%" y="805" width="0.0118%" height="15" fill="rgb(219,169,10)" fg:x="23782" fg:w="5"/><text x="56.4032%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="56.1532%" y="789" width="0.0118%" height="15" fill="rgb(244,229,43)" fg:x="23782" fg:w="5"/><text x="56.4032%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="56.1532%" y="773" width="0.0118%" height="15" fill="rgb(254,38,20)" fg:x="23782" fg:w="5"/><text x="56.4032%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="56.1532%" y="757" width="0.0118%" height="15" fill="rgb(250,47,30)" fg:x="23782" fg:w="5"/><text x="56.4032%" y="767.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (3,697 samples, 8.73%)</title><rect x="47.4570%" y="837" width="8.7292%" height="15" fill="rgb(224,124,36)" fg:x="20099" fg:w="3697"/><text x="47.7070%" y="847.50">torrust_trac..</text></g><g><title>torrust_tracker::servers::udp::logging::log_response (72 samples, 0.17%)</title><rect x="56.0162%" y="821" width="0.1700%" height="15" fill="rgb(246,68,51)" fg:x="23724" fg:w="72"/><text x="56.2662%" y="831.50"></text></g><g><title>tracing_core::field::display (5 samples, 0.01%)</title><rect x="56.1744%" y="805" width="0.0118%" height="15" fill="rgb(253,43,49)" fg:x="23791" fg:w="5"/><text x="56.4244%" y="815.50"></text></g><g><title>__GI___lll_lock_wake_private (6 samples, 0.01%)</title><rect x="56.2642%" y="661" width="0.0142%" height="15" fill="rgb(219,54,36)" fg:x="23829" fg:w="6"/><text x="56.5142%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="56.2665%" y="645" width="0.0118%" height="15" fill="rgb(227,133,34)" fg:x="23830" fg:w="5"/><text x="56.5165%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="56.2665%" y="629" width="0.0118%" height="15" fill="rgb(247,227,15)" fg:x="23830" fg:w="5"/><text x="56.5165%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="56.3988%" y="629" width="0.0142%" height="15" fill="rgb(229,96,14)" fg:x="23886" fg:w="6"/><text x="56.6488%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="56.3988%" y="613" width="0.0142%" height="15" fill="rgb(220,79,17)" fg:x="23886" fg:w="6"/><text x="56.6488%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="56.3988%" y="597" width="0.0142%" height="15" fill="rgb(205,131,53)" fg:x="23886" fg:w="6"/><text x="56.6488%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="56.3988%" y="581" width="0.0142%" height="15" fill="rgb(209,50,29)" fg:x="23886" fg:w="6"/><text x="56.6488%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="56.3988%" y="565" width="0.0142%" height="15" fill="rgb(245,86,46)" fg:x="23886" fg:w="6"/><text x="56.6488%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="56.3988%" y="549" width="0.0142%" height="15" fill="rgb(235,66,46)" fg:x="23886" fg:w="6"/><text x="56.6488%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="56.3988%" y="533" width="0.0142%" height="15" fill="rgb(232,148,31)" fg:x="23886" fg:w="6"/><text x="56.6488%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="56.4011%" y="517" width="0.0118%" height="15" fill="rgb(217,149,8)" fg:x="23887" fg:w="5"/><text x="56.6511%" y="527.50"></text></g><g><title>sysmalloc (23 samples, 0.05%)</title><rect x="56.3964%" y="645" width="0.0543%" height="15" fill="rgb(209,183,11)" fg:x="23885" fg:w="23"/><text x="56.6464%" y="655.50"></text></g><g><title>grow_heap (16 samples, 0.04%)</title><rect x="56.4129%" y="629" width="0.0378%" height="15" fill="rgb(208,55,20)" fg:x="23892" fg:w="16"/><text x="56.6629%" y="639.50"></text></g><g><title>__GI_mprotect (15 samples, 0.04%)</title><rect x="56.4153%" y="613" width="0.0354%" height="15" fill="rgb(218,39,14)" fg:x="23893" fg:w="15"/><text x="56.6653%" y="623.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="56.4153%" y="597" width="0.0354%" height="15" fill="rgb(216,169,33)" fg:x="23893" fg:w="15"/><text x="56.6653%" y="607.50"></text></g><g><title>[unknown] (14 samples, 0.03%)</title><rect x="56.4176%" y="581" width="0.0331%" height="15" fill="rgb(233,80,24)" fg:x="23894" fg:w="14"/><text x="56.6676%" y="591.50"></text></g><g><title>[unknown] (14 samples, 0.03%)</title><rect x="56.4176%" y="565" width="0.0331%" height="15" fill="rgb(213,179,31)" fg:x="23894" fg:w="14"/><text x="56.6676%" y="575.50"></text></g><g><title>[unknown] (14 samples, 0.03%)</title><rect x="56.4176%" y="549" width="0.0331%" height="15" fill="rgb(209,19,5)" fg:x="23894" fg:w="14"/><text x="56.6676%" y="559.50"></text></g><g><title>[unknown] (13 samples, 0.03%)</title><rect x="56.4200%" y="533" width="0.0307%" height="15" fill="rgb(219,18,35)" fg:x="23895" fg:w="13"/><text x="56.6700%" y="543.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="56.4224%" y="517" width="0.0283%" height="15" fill="rgb(209,169,16)" fg:x="23896" fg:w="12"/><text x="56.6724%" y="527.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="56.4271%" y="501" width="0.0236%" height="15" fill="rgb(245,90,51)" fg:x="23898" fg:w="10"/><text x="56.6771%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="56.4342%" y="485" width="0.0165%" height="15" fill="rgb(220,99,45)" fg:x="23901" fg:w="7"/><text x="56.6842%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="56.4365%" y="469" width="0.0142%" height="15" fill="rgb(249,89,25)" fg:x="23902" fg:w="6"/><text x="56.6865%" y="479.50"></text></g><g><title>__libc_calloc (86 samples, 0.20%)</title><rect x="56.2500%" y="677" width="0.2031%" height="15" fill="rgb(239,193,0)" fg:x="23823" fg:w="86"/><text x="56.5000%" y="687.50"></text></g><g><title>_int_malloc (74 samples, 0.17%)</title><rect x="56.2783%" y="661" width="0.1747%" height="15" fill="rgb(231,126,1)" fg:x="23835" fg:w="74"/><text x="56.5283%" y="671.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (10 samples, 0.02%)</title><rect x="56.4531%" y="677" width="0.0236%" height="15" fill="rgb(243,166,3)" fg:x="23909" fg:w="10"/><text x="56.7031%" y="687.50"></text></g><g><title>__memset_avx512_unaligned_erms (9 samples, 0.02%)</title><rect x="56.4767%" y="677" width="0.0213%" height="15" fill="rgb(223,22,34)" fg:x="23919" fg:w="9"/><text x="56.7267%" y="687.50"></text></g><g><title>alloc::vec::from_elem (110 samples, 0.26%)</title><rect x="56.2429%" y="821" width="0.2597%" height="15" fill="rgb(251,52,51)" fg:x="23820" fg:w="110"/><text x="56.4929%" y="831.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (110 samples, 0.26%)</title><rect x="56.2429%" y="805" width="0.2597%" height="15" fill="rgb(221,165,28)" fg:x="23820" fg:w="110"/><text x="56.4929%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (110 samples, 0.26%)</title><rect x="56.2429%" y="789" width="0.2597%" height="15" fill="rgb(218,121,47)" fg:x="23820" fg:w="110"/><text x="56.4929%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (110 samples, 0.26%)</title><rect x="56.2429%" y="773" width="0.2597%" height="15" fill="rgb(209,120,9)" fg:x="23820" fg:w="110"/><text x="56.4929%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (109 samples, 0.26%)</title><rect x="56.2453%" y="757" width="0.2574%" height="15" fill="rgb(236,68,12)" fg:x="23821" fg:w="109"/><text x="56.4953%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (109 samples, 0.26%)</title><rect x="56.2453%" y="741" width="0.2574%" height="15" fill="rgb(225,194,26)" fg:x="23821" fg:w="109"/><text x="56.4953%" y="751.50"></text></g><g><title>alloc::alloc::alloc_zeroed (109 samples, 0.26%)</title><rect x="56.2453%" y="725" width="0.2574%" height="15" fill="rgb(231,84,39)" fg:x="23821" fg:w="109"/><text x="56.4953%" y="735.50"></text></g><g><title>__rdl_alloc_zeroed (109 samples, 0.26%)</title><rect x="56.2453%" y="709" width="0.2574%" height="15" fill="rgb(210,11,45)" fg:x="23821" fg:w="109"/><text x="56.4953%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (109 samples, 0.26%)</title><rect x="56.2453%" y="693" width="0.2574%" height="15" fill="rgb(224,54,52)" fg:x="23821" fg:w="109"/><text x="56.4953%" y="703.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_i32 (18 samples, 0.04%)</title><rect x="56.5570%" y="805" width="0.0425%" height="15" fill="rgb(238,102,14)" fg:x="23953" fg:w="18"/><text x="56.8070%" y="815.50"></text></g><g><title>std::io::Write::write_all (14 samples, 0.03%)</title><rect x="56.5664%" y="789" width="0.0331%" height="15" fill="rgb(243,160,52)" fg:x="23957" fg:w="14"/><text x="56.8164%" y="799.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,A&gt;&gt; as std::io::Write&gt;::write (14 samples, 0.03%)</title><rect x="56.5664%" y="773" width="0.0331%" height="15" fill="rgb(216,114,19)" fg:x="23957" fg:w="14"/><text x="56.8164%" y="783.50"></text></g><g><title>std::io::cursor::vec_write (14 samples, 0.03%)</title><rect x="56.5664%" y="757" width="0.0331%" height="15" fill="rgb(244,166,37)" fg:x="23957" fg:w="14"/><text x="56.8164%" y="767.50"></text></g><g><title>std::io::cursor::vec_write_unchecked (10 samples, 0.02%)</title><rect x="56.5758%" y="741" width="0.0236%" height="15" fill="rgb(246,29,44)" fg:x="23961" fg:w="10"/><text x="56.8258%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from (10 samples, 0.02%)</title><rect x="56.5758%" y="725" width="0.0236%" height="15" fill="rgb(215,56,53)" fg:x="23961" fg:w="10"/><text x="56.8258%" y="735.50"></text></g><g><title>core::intrinsics::copy (10 samples, 0.02%)</title><rect x="56.5758%" y="709" width="0.0236%" height="15" fill="rgb(217,60,2)" fg:x="23961" fg:w="10"/><text x="56.8258%" y="719.50"></text></g><g><title>aquatic_udp_protocol::response::Response::write (44 samples, 0.10%)</title><rect x="56.5026%" y="821" width="0.1039%" height="15" fill="rgb(207,26,24)" fg:x="23930" fg:w="44"/><text x="56.7526%" y="831.50"></text></g><g><title>_int_free (57 samples, 0.13%)</title><rect x="56.6538%" y="677" width="0.1346%" height="15" fill="rgb(252,210,15)" fg:x="23994" fg:w="57"/><text x="56.9038%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (76 samples, 0.18%)</title><rect x="56.6136%" y="757" width="0.1794%" height="15" fill="rgb(253,209,26)" fg:x="23977" fg:w="76"/><text x="56.8636%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (76 samples, 0.18%)</title><rect x="56.6136%" y="741" width="0.1794%" height="15" fill="rgb(238,170,14)" fg:x="23977" fg:w="76"/><text x="56.8636%" y="751.50"></text></g><g><title>__rdl_dealloc (76 samples, 0.18%)</title><rect x="56.6136%" y="725" width="0.1794%" height="15" fill="rgb(216,178,15)" fg:x="23977" fg:w="76"/><text x="56.8636%" y="735.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (76 samples, 0.18%)</title><rect x="56.6136%" y="709" width="0.1794%" height="15" fill="rgb(250,197,2)" fg:x="23977" fg:w="76"/><text x="56.8636%" y="719.50"></text></g><g><title>__GI___libc_free (76 samples, 0.18%)</title><rect x="56.6136%" y="693" width="0.1794%" height="15" fill="rgb(212,70,42)" fg:x="23977" fg:w="76"/><text x="56.8636%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (77 samples, 0.18%)</title><rect x="56.6136%" y="821" width="0.1818%" height="15" fill="rgb(227,213,9)" fg:x="23977" fg:w="77"/><text x="56.8636%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (77 samples, 0.18%)</title><rect x="56.6136%" y="805" width="0.1818%" height="15" fill="rgb(245,99,25)" fg:x="23977" fg:w="77"/><text x="56.8636%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (77 samples, 0.18%)</title><rect x="56.6136%" y="789" width="0.1818%" height="15" fill="rgb(250,82,29)" fg:x="23977" fg:w="77"/><text x="56.8636%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.18%)</title><rect x="56.6136%" y="773" width="0.1818%" height="15" fill="rgb(241,226,54)" fg:x="23977" fg:w="77"/><text x="56.8636%" y="783.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="56.7954%" y="821" width="0.0118%" height="15" fill="rgb(221,99,41)" fg:x="24054" fg:w="5"/><text x="57.0454%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::net::udp::UdpSocket::send_to&lt;&amp;core::net::socket_addr::SocketAddr&gt;::{{closure}}&gt; (5 samples, 0.01%)</title><rect x="56.8592%" y="805" width="0.0118%" height="15" fill="rgb(213,90,21)" fg:x="24081" fg:w="5"/><text x="57.1092%" y="815.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (6 samples, 0.01%)</title><rect x="56.9088%" y="789" width="0.0142%" height="15" fill="rgb(205,208,24)" fg:x="24102" fg:w="6"/><text x="57.1588%" y="799.50"></text></g><g><title>&lt;core::future::ready::Ready&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="56.9229%" y="789" width="0.0142%" height="15" fill="rgb(246,31,12)" fg:x="24108" fg:w="6"/><text x="57.1729%" y="799.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (49 samples, 0.12%)</title><rect x="56.9631%" y="757" width="0.1157%" height="15" fill="rgb(213,154,6)" fg:x="24125" fg:w="49"/><text x="57.2131%" y="767.50"></text></g><g><title>tokio::io::ready::Ready::intersection (9 samples, 0.02%)</title><rect x="57.0575%" y="741" width="0.0213%" height="15" fill="rgb(222,163,29)" fg:x="24165" fg:w="9"/><text x="57.3075%" y="751.50"></text></g><g><title>tokio::io::ready::Ready::from_interest (9 samples, 0.02%)</title><rect x="57.0575%" y="725" width="0.0213%" height="15" fill="rgb(227,201,8)" fg:x="24165" fg:w="9"/><text x="57.3075%" y="735.50"></text></g><g><title>tokio::io::interest::Interest::is_readable (6 samples, 0.01%)</title><rect x="57.0646%" y="709" width="0.0142%" height="15" fill="rgb(233,9,32)" fg:x="24168" fg:w="6"/><text x="57.3146%" y="719.50"></text></g><g><title>[unknown] (9,280 samples, 21.91%)</title><rect x="57.2228%" y="629" width="21.9116%" height="15" fill="rgb(217,54,24)" fg:x="24235" fg:w="9280"/><text x="57.4728%" y="639.50">[unknown]</text></g><g><title>[unknown] (9,225 samples, 21.78%)</title><rect x="57.3527%" y="613" width="21.7817%" height="15" fill="rgb(235,192,0)" fg:x="24290" fg:w="9225"/><text x="57.6027%" y="623.50">[unknown]</text></g><g><title>[unknown] (9,186 samples, 21.69%)</title><rect x="57.4447%" y="597" width="21.6896%" height="15" fill="rgb(235,45,9)" fg:x="24329" fg:w="9186"/><text x="57.6947%" y="607.50">[unknown]</text></g><g><title>[unknown] (9,178 samples, 21.67%)</title><rect x="57.4636%" y="581" width="21.6708%" height="15" fill="rgb(246,42,40)" fg:x="24337" fg:w="9178"/><text x="57.7136%" y="591.50">[unknown]</text></g><g><title>[unknown] (8,810 samples, 20.80%)</title><rect x="58.3325%" y="565" width="20.8019%" height="15" fill="rgb(248,111,24)" fg:x="24705" fg:w="8810"/><text x="58.5825%" y="575.50">[unknown]</text></g><g><title>[unknown] (8,693 samples, 20.53%)</title><rect x="58.6088%" y="549" width="20.5256%" height="15" fill="rgb(249,65,22)" fg:x="24822" fg:w="8693"/><text x="58.8588%" y="559.50">[unknown]</text></g><g><title>[unknown] (8,408 samples, 19.85%)</title><rect x="59.2817%" y="533" width="19.8527%" height="15" fill="rgb(238,111,51)" fg:x="25107" fg:w="8408"/><text x="59.5317%" y="543.50">[unknown]</text></g><g><title>[unknown] (7,899 samples, 18.65%)</title><rect x="60.4836%" y="517" width="18.6508%" height="15" fill="rgb(250,118,22)" fg:x="25616" fg:w="7899"/><text x="60.7336%" y="527.50">[unknown]</text></g><g><title>[unknown] (7,670 samples, 18.11%)</title><rect x="61.0243%" y="501" width="18.1101%" height="15" fill="rgb(234,84,26)" fg:x="25845" fg:w="7670"/><text x="61.2743%" y="511.50">[unknown]</text></g><g><title>[unknown] (7,204 samples, 17.01%)</title><rect x="62.1246%" y="485" width="17.0098%" height="15" fill="rgb(243,172,12)" fg:x="26311" fg:w="7204"/><text x="62.3746%" y="495.50">[unknown]</text></g><g><title>[unknown] (6,378 samples, 15.06%)</title><rect x="64.0749%" y="469" width="15.0595%" height="15" fill="rgb(236,150,49)" fg:x="27137" fg:w="6378"/><text x="64.3249%" y="479.50">[unknown]</text></g><g><title>[unknown] (5,353 samples, 12.64%)</title><rect x="66.4951%" y="453" width="12.6393%" height="15" fill="rgb(225,197,26)" fg:x="28162" fg:w="5353"/><text x="66.7451%" y="463.50">[unknown]</text></g><g><title>[unknown] (4,967 samples, 11.73%)</title><rect x="67.4065%" y="437" width="11.7279%" height="15" fill="rgb(214,17,42)" fg:x="28548" fg:w="4967"/><text x="67.6565%" y="447.50">[unknown]</text></g><g><title>[unknown] (4,431 samples, 10.46%)</title><rect x="68.6721%" y="421" width="10.4623%" height="15" fill="rgb(224,165,40)" fg:x="29084" fg:w="4431"/><text x="68.9221%" y="431.50">[unknown]</text></g><g><title>[unknown] (4,170 samples, 9.85%)</title><rect x="69.2883%" y="405" width="9.8461%" height="15" fill="rgb(246,100,4)" fg:x="29345" fg:w="4170"/><text x="69.5383%" y="415.50">[unknown]</text></g><g><title>[unknown] (3,514 samples, 8.30%)</title><rect x="70.8373%" y="389" width="8.2971%" height="15" fill="rgb(222,103,0)" fg:x="30001" fg:w="3514"/><text x="71.0873%" y="399.50">[unknown]</text></g><g><title>[unknown] (3,283 samples, 7.75%)</title><rect x="71.3827%" y="373" width="7.7517%" height="15" fill="rgb(227,189,26)" fg:x="30232" fg:w="3283"/><text x="71.6327%" y="383.50">[unknown]</text></g><g><title>[unknown] (3,155 samples, 7.45%)</title><rect x="71.6849%" y="357" width="7.4495%" height="15" fill="rgb(214,202,17)" fg:x="30360" fg:w="3155"/><text x="71.9349%" y="367.50">[unknown]</text></g><g><title>[unknown] (2,925 samples, 6.91%)</title><rect x="72.2280%" y="341" width="6.9064%" height="15" fill="rgb(229,111,3)" fg:x="30590" fg:w="2925"/><text x="72.4780%" y="351.50">[unknown]</text></g><g><title>[unknown] (2,830 samples, 6.68%)</title><rect x="72.4523%" y="325" width="6.6821%" height="15" fill="rgb(229,172,15)" fg:x="30685" fg:w="2830"/><text x="72.7023%" y="335.50">[unknown]</text></g><g><title>[unknown] (2,515 samples, 5.94%)</title><rect x="73.1961%" y="309" width="5.9383%" height="15" fill="rgb(230,224,35)" fg:x="31000" fg:w="2515"/><text x="73.4461%" y="319.50">[unknown]</text></g><g><title>[unknown] (2,384 samples, 5.63%)</title><rect x="73.5054%" y="293" width="5.6290%" height="15" fill="rgb(251,141,6)" fg:x="31131" fg:w="2384"/><text x="73.7554%" y="303.50">[unknow..</text></g><g><title>[unknown] (1,991 samples, 4.70%)</title><rect x="74.4333%" y="277" width="4.7011%" height="15" fill="rgb(225,208,6)" fg:x="31524" fg:w="1991"/><text x="74.6833%" y="287.50">[unkn..</text></g><g><title>[unknown] (1,407 samples, 3.32%)</title><rect x="75.8122%" y="261" width="3.3222%" height="15" fill="rgb(246,181,16)" fg:x="32108" fg:w="1407"/><text x="76.0622%" y="271.50">[un..</text></g><g><title>[unknown] (1,100 samples, 2.60%)</title><rect x="76.5371%" y="245" width="2.5973%" height="15" fill="rgb(227,129,36)" fg:x="32415" fg:w="1100"/><text x="76.7871%" y="255.50">[u..</text></g><g><title>[unknown] (942 samples, 2.22%)</title><rect x="76.9102%" y="229" width="2.2242%" height="15" fill="rgb(248,117,24)" fg:x="32573" fg:w="942"/><text x="77.1602%" y="239.50">[..</text></g><g><title>[unknown] (909 samples, 2.15%)</title><rect x="76.9881%" y="213" width="2.1463%" height="15" fill="rgb(214,185,35)" fg:x="32606" fg:w="909"/><text x="77.2381%" y="223.50">[..</text></g><g><title>[unknown] (805 samples, 1.90%)</title><rect x="77.2337%" y="197" width="1.9007%" height="15" fill="rgb(236,150,34)" fg:x="32710" fg:w="805"/><text x="77.4837%" y="207.50">[..</text></g><g><title>[unknown] (609 samples, 1.44%)</title><rect x="77.6964%" y="181" width="1.4379%" height="15" fill="rgb(243,228,27)" fg:x="32906" fg:w="609"/><text x="77.9464%" y="191.50"></text></g><g><title>[unknown] (533 samples, 1.26%)</title><rect x="77.8759%" y="165" width="1.2585%" height="15" fill="rgb(245,77,44)" fg:x="32982" fg:w="533"/><text x="78.1259%" y="175.50"></text></g><g><title>[unknown] (391 samples, 0.92%)</title><rect x="78.2112%" y="149" width="0.9232%" height="15" fill="rgb(235,214,42)" fg:x="33124" fg:w="391"/><text x="78.4612%" y="159.50"></text></g><g><title>[unknown] (109 samples, 0.26%)</title><rect x="78.8770%" y="133" width="0.2574%" height="15" fill="rgb(221,74,3)" fg:x="33406" fg:w="109"/><text x="79.1270%" y="143.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="79.0801%" y="117" width="0.0543%" height="15" fill="rgb(206,121,29)" fg:x="33492" fg:w="23"/><text x="79.3301%" y="127.50"></text></g><g><title>[unknown] (19 samples, 0.04%)</title><rect x="79.0895%" y="101" width="0.0449%" height="15" fill="rgb(249,131,53)" fg:x="33496" fg:w="19"/><text x="79.3395%" y="111.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="79.1202%" y="85" width="0.0142%" height="15" fill="rgb(236,170,29)" fg:x="33509" fg:w="6"/><text x="79.3702%" y="95.50"></text></g><g><title>__libc_sendto (9,358 samples, 22.10%)</title><rect x="57.0906%" y="645" width="22.0958%" height="15" fill="rgb(247,96,15)" fg:x="24179" fg:w="9358"/><text x="57.3406%" y="655.50">__libc_sendto</text></g><g><title>__GI___pthread_disable_asynccancel (22 samples, 0.05%)</title><rect x="79.1344%" y="629" width="0.0519%" height="15" fill="rgb(211,210,7)" fg:x="33515" fg:w="22"/><text x="79.3844%" y="639.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}}::{{closure}} (9,377 samples, 22.14%)</title><rect x="57.0882%" y="757" width="22.1406%" height="15" fill="rgb(240,88,50)" fg:x="24178" fg:w="9377"/><text x="57.3382%" y="767.50">tokio::net::udp::UdpSocket::send_to..</text></g><g><title>mio::net::udp::UdpSocket::send_to (9,377 samples, 22.14%)</title><rect x="57.0882%" y="741" width="22.1406%" height="15" fill="rgb(209,229,26)" fg:x="24178" fg:w="9377"/><text x="57.3382%" y="751.50">mio::net::udp::UdpSocket::send_to</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (9,377 samples, 22.14%)</title><rect x="57.0882%" y="725" width="22.1406%" height="15" fill="rgb(210,68,23)" fg:x="24178" fg:w="9377"/><text x="57.3382%" y="735.50">mio::io_source::IoSource&lt;T&gt;::do_io</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (9,377 samples, 22.14%)</title><rect x="57.0882%" y="709" width="22.1406%" height="15" fill="rgb(229,180,13)" fg:x="24178" fg:w="9377"/><text x="57.3382%" y="719.50">mio::sys::unix::stateless_io_source..</text></g><g><title>mio::net::udp::UdpSocket::send_to::{{closure}} (9,377 samples, 22.14%)</title><rect x="57.0882%" y="693" width="22.1406%" height="15" fill="rgb(236,53,44)" fg:x="24178" fg:w="9377"/><text x="57.3382%" y="703.50">mio::net::udp::UdpSocket::send_to::..</text></g><g><title>std::net::udp::UdpSocket::send_to (9,377 samples, 22.14%)</title><rect x="57.0882%" y="677" width="22.1406%" height="15" fill="rgb(244,214,29)" fg:x="24178" fg:w="9377"/><text x="57.3382%" y="687.50">std::net::udp::UdpSocket::send_to</text></g><g><title>std::sys_common::net::UdpSocket::send_to (9,377 samples, 22.14%)</title><rect x="57.0882%" y="661" width="22.1406%" height="15" fill="rgb(220,75,29)" fg:x="24178" fg:w="9377"/><text x="57.3382%" y="671.50">std::sys_common::net::UdpSocket::se..</text></g><g><title>std::sys::pal::unix::cvt (18 samples, 0.04%)</title><rect x="79.1863%" y="645" width="0.0425%" height="15" fill="rgb(214,183,37)" fg:x="33537" fg:w="18"/><text x="79.4363%" y="655.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (14 samples, 0.03%)</title><rect x="79.1958%" y="629" width="0.0331%" height="15" fill="rgb(239,117,29)" fg:x="33541" fg:w="14"/><text x="79.4458%" y="639.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (38 samples, 0.09%)</title><rect x="79.2383%" y="693" width="0.0897%" height="15" fill="rgb(237,171,35)" fg:x="33559" fg:w="38"/><text x="79.4883%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (38 samples, 0.09%)</title><rect x="79.2383%" y="677" width="0.0897%" height="15" fill="rgb(229,178,53)" fg:x="33559" fg:w="38"/><text x="79.4883%" y="687.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (37 samples, 0.09%)</title><rect x="79.2406%" y="661" width="0.0874%" height="15" fill="rgb(210,102,19)" fg:x="33560" fg:w="37"/><text x="79.4906%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (36 samples, 0.09%)</title><rect x="79.2430%" y="645" width="0.0850%" height="15" fill="rgb(235,127,22)" fg:x="33561" fg:w="36"/><text x="79.4930%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (36 samples, 0.09%)</title><rect x="79.2430%" y="629" width="0.0850%" height="15" fill="rgb(244,31,31)" fg:x="33561" fg:w="36"/><text x="79.4930%" y="639.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (41 samples, 0.10%)</title><rect x="79.2336%" y="709" width="0.0968%" height="15" fill="rgb(231,43,21)" fg:x="33557" fg:w="41"/><text x="79.4836%" y="719.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_response::{{closure}} (9,803 samples, 23.15%)</title><rect x="56.1862%" y="837" width="23.1465%" height="15" fill="rgb(217,131,35)" fg:x="23796" fg:w="9803"/><text x="56.4362%" y="847.50">torrust_tracker::servers::udp::server..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::send_packet::{{closure}} (9,540 samples, 22.53%)</title><rect x="56.8072%" y="821" width="22.5255%" height="15" fill="rgb(221,149,4)" fg:x="24059" fg:w="9540"/><text x="57.0572%" y="831.50">torrust_tracker::servers::udp::serve..</text></g><g><title>tokio::net::udp::UdpSocket::send_to::{{closure}} (9,513 samples, 22.46%)</title><rect x="56.8710%" y="805" width="22.4617%" height="15" fill="rgb(232,170,28)" fg:x="24086" fg:w="9513"/><text x="57.1210%" y="815.50">tokio::net::udp::UdpSocket::send_to:..</text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}} (9,485 samples, 22.40%)</title><rect x="56.9371%" y="789" width="22.3956%" height="15" fill="rgb(238,56,10)" fg:x="24114" fg:w="9485"/><text x="57.1871%" y="799.50">tokio::net::udp::UdpSocket::send_to..</text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (9,477 samples, 22.38%)</title><rect x="56.9560%" y="773" width="22.3767%" height="15" fill="rgb(235,196,14)" fg:x="24122" fg:w="9477"/><text x="57.2060%" y="783.50">tokio::runtime::io::registration::R..</text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (44 samples, 0.10%)</title><rect x="79.2288%" y="757" width="0.1039%" height="15" fill="rgb(216,45,48)" fg:x="33555" fg:w="44"/><text x="79.4788%" y="767.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (42 samples, 0.10%)</title><rect x="79.2336%" y="741" width="0.0992%" height="15" fill="rgb(238,213,17)" fg:x="33557" fg:w="42"/><text x="79.4836%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (42 samples, 0.10%)</title><rect x="79.2336%" y="725" width="0.0992%" height="15" fill="rgb(212,13,2)" fg:x="33557" fg:w="42"/><text x="79.4836%" y="735.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_request::{{closure}} (13,858 samples, 32.72%)</title><rect x="46.6141%" y="869" width="32.7210%" height="15" fill="rgb(240,114,20)" fg:x="19742" fg:w="13858"/><text x="46.8641%" y="879.50">torrust_tracker::servers::udp::server::Udp::process_r..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (13,677 samples, 32.29%)</title><rect x="47.0415%" y="853" width="32.2936%" height="15" fill="rgb(228,41,40)" fg:x="19923" fg:w="13677"/><text x="47.2915%" y="863.50">torrust_tracker::servers::udp::server::Udp::process_..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (41 samples, 0.10%)</title><rect x="79.3870%" y="837" width="0.0968%" height="15" fill="rgb(244,132,35)" fg:x="33622" fg:w="41"/><text x="79.6370%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (41 samples, 0.10%)</title><rect x="79.3870%" y="821" width="0.0968%" height="15" fill="rgb(253,189,4)" fg:x="33622" fg:w="41"/><text x="79.6370%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_add (41 samples, 0.10%)</title><rect x="79.3870%" y="805" width="0.0968%" height="15" fill="rgb(224,37,19)" fg:x="33622" fg:w="41"/><text x="79.6370%" y="815.50"></text></g><g><title>__GI___lll_lock_wake_private (65 samples, 0.15%)</title><rect x="79.4980%" y="773" width="0.1535%" height="15" fill="rgb(235,223,18)" fg:x="33669" fg:w="65"/><text x="79.7480%" y="783.50"></text></g><g><title>[unknown] (54 samples, 0.13%)</title><rect x="79.5240%" y="757" width="0.1275%" height="15" fill="rgb(235,163,25)" fg:x="33680" fg:w="54"/><text x="79.7740%" y="767.50"></text></g><g><title>[unknown] (53 samples, 0.13%)</title><rect x="79.5264%" y="741" width="0.1251%" height="15" fill="rgb(217,145,28)" fg:x="33681" fg:w="53"/><text x="79.7764%" y="751.50"></text></g><g><title>[unknown] (49 samples, 0.12%)</title><rect x="79.5358%" y="725" width="0.1157%" height="15" fill="rgb(223,223,32)" fg:x="33685" fg:w="49"/><text x="79.7858%" y="735.50"></text></g><g><title>[unknown] (48 samples, 0.11%)</title><rect x="79.5382%" y="709" width="0.1133%" height="15" fill="rgb(227,189,39)" fg:x="33686" fg:w="48"/><text x="79.7882%" y="719.50"></text></g><g><title>[unknown] (42 samples, 0.10%)</title><rect x="79.5523%" y="693" width="0.0992%" height="15" fill="rgb(248,10,22)" fg:x="33692" fg:w="42"/><text x="79.8023%" y="703.50"></text></g><g><title>[unknown] (14 samples, 0.03%)</title><rect x="79.6184%" y="677" width="0.0331%" height="15" fill="rgb(248,46,39)" fg:x="33720" fg:w="14"/><text x="79.8684%" y="687.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="79.6302%" y="661" width="0.0213%" height="15" fill="rgb(248,113,48)" fg:x="33725" fg:w="9"/><text x="79.8802%" y="671.50"></text></g><g><title>__GI___lll_lock_wait_private (91 samples, 0.21%)</title><rect x="79.7648%" y="757" width="0.2149%" height="15" fill="rgb(245,16,25)" fg:x="33782" fg:w="91"/><text x="80.0148%" y="767.50"></text></g><g><title>futex_wait (88 samples, 0.21%)</title><rect x="79.7719%" y="741" width="0.2078%" height="15" fill="rgb(249,152,16)" fg:x="33785" fg:w="88"/><text x="80.0219%" y="751.50"></text></g><g><title>[unknown] (87 samples, 0.21%)</title><rect x="79.7743%" y="725" width="0.2054%" height="15" fill="rgb(250,16,1)" fg:x="33786" fg:w="87"/><text x="80.0243%" y="735.50"></text></g><g><title>[unknown] (85 samples, 0.20%)</title><rect x="79.7790%" y="709" width="0.2007%" height="15" fill="rgb(249,138,3)" fg:x="33788" fg:w="85"/><text x="80.0290%" y="719.50"></text></g><g><title>[unknown] (84 samples, 0.20%)</title><rect x="79.7814%" y="693" width="0.1983%" height="15" fill="rgb(227,71,41)" fg:x="33789" fg:w="84"/><text x="80.0314%" y="703.50"></text></g><g><title>[unknown] (84 samples, 0.20%)</title><rect x="79.7814%" y="677" width="0.1983%" height="15" fill="rgb(209,184,23)" fg:x="33789" fg:w="84"/><text x="80.0314%" y="687.50"></text></g><g><title>[unknown] (81 samples, 0.19%)</title><rect x="79.7884%" y="661" width="0.1913%" height="15" fill="rgb(223,215,31)" fg:x="33792" fg:w="81"/><text x="80.0384%" y="671.50"></text></g><g><title>[unknown] (78 samples, 0.18%)</title><rect x="79.7955%" y="645" width="0.1842%" height="15" fill="rgb(210,146,28)" fg:x="33795" fg:w="78"/><text x="80.0455%" y="655.50"></text></g><g><title>[unknown] (68 samples, 0.16%)</title><rect x="79.8191%" y="629" width="0.1606%" height="15" fill="rgb(209,183,41)" fg:x="33805" fg:w="68"/><text x="80.0691%" y="639.50"></text></g><g><title>[unknown] (41 samples, 0.10%)</title><rect x="79.8829%" y="613" width="0.0968%" height="15" fill="rgb(209,224,45)" fg:x="33832" fg:w="41"/><text x="80.1329%" y="623.50"></text></g><g><title>[unknown] (38 samples, 0.09%)</title><rect x="79.8900%" y="597" width="0.0897%" height="15" fill="rgb(224,209,51)" fg:x="33835" fg:w="38"/><text x="80.1400%" y="607.50"></text></g><g><title>[unknown] (32 samples, 0.08%)</title><rect x="79.9041%" y="581" width="0.0756%" height="15" fill="rgb(223,17,39)" fg:x="33841" fg:w="32"/><text x="80.1541%" y="591.50"></text></g><g><title>[unknown] (25 samples, 0.06%)</title><rect x="79.9207%" y="565" width="0.0590%" height="15" fill="rgb(234,204,37)" fg:x="33848" fg:w="25"/><text x="80.1707%" y="575.50"></text></g><g><title>[unknown] (16 samples, 0.04%)</title><rect x="79.9419%" y="549" width="0.0378%" height="15" fill="rgb(236,120,5)" fg:x="33857" fg:w="16"/><text x="80.1919%" y="559.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="79.9514%" y="533" width="0.0283%" height="15" fill="rgb(248,97,27)" fg:x="33861" fg:w="12"/><text x="80.2014%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="79.9655%" y="517" width="0.0142%" height="15" fill="rgb(240,66,17)" fg:x="33867" fg:w="6"/><text x="80.2155%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="79.9679%" y="501" width="0.0118%" height="15" fill="rgb(210,79,3)" fg:x="33868" fg:w="5"/><text x="80.2179%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="79.9679%" y="485" width="0.0118%" height="15" fill="rgb(214,176,27)" fg:x="33868" fg:w="5"/><text x="80.2179%" y="495.50"></text></g><g><title>_int_free (141 samples, 0.33%)</title><rect x="79.6515%" y="773" width="0.3329%" height="15" fill="rgb(235,185,3)" fg:x="33734" fg:w="141"/><text x="79.9015%" y="783.50"></text></g><g><title>__GI___libc_free (212 samples, 0.50%)</title><rect x="79.4886%" y="789" width="0.5006%" height="15" fill="rgb(227,24,12)" fg:x="33665" fg:w="212"/><text x="79.7386%" y="799.50"></text></g><g><title>syscall (5 samples, 0.01%)</title><rect x="79.9891%" y="789" width="0.0118%" height="15" fill="rgb(252,169,48)" fg:x="33877" fg:w="5"/><text x="80.2391%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="80.0080%" y="725" width="0.0189%" height="15" fill="rgb(212,65,1)" fg:x="33885" fg:w="8"/><text x="80.2580%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (9 samples, 0.02%)</title><rect x="80.0080%" y="789" width="0.0213%" height="15" fill="rgb(242,39,24)" fg:x="33885" fg:w="9"/><text x="80.2580%" y="799.50"></text></g><g><title>core::mem::drop (9 samples, 0.02%)</title><rect x="80.0080%" y="773" width="0.0213%" height="15" fill="rgb(249,32,23)" fg:x="33885" fg:w="9"/><text x="80.2580%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="80.0080%" y="757" width="0.0213%" height="15" fill="rgb(251,195,23)" fg:x="33885" fg:w="9"/><text x="80.2580%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;torrust_tracker::servers::udp::server::Udp::process_request::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="80.0080%" y="741" width="0.0213%" height="15" fill="rgb(236,174,8)" fg:x="33885" fg:w="9"/><text x="80.2580%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::abort::AbortHandle&gt; (246 samples, 0.58%)</title><rect x="79.4838%" y="837" width="0.5808%" height="15" fill="rgb(220,197,8)" fg:x="33663" fg:w="246"/><text x="79.7338%" y="847.50"></text></g><g><title>&lt;tokio::runtime::task::abort::AbortHandle as core::ops::drop::Drop&gt;::drop (246 samples, 0.58%)</title><rect x="79.4838%" y="821" width="0.5808%" height="15" fill="rgb(240,108,37)" fg:x="33663" fg:w="246"/><text x="79.7338%" y="831.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::drop_abort_handle (245 samples, 0.58%)</title><rect x="79.4862%" y="805" width="0.5785%" height="15" fill="rgb(232,176,24)" fg:x="33664" fg:w="245"/><text x="79.7362%" y="815.50"></text></g><g><title>tokio::runtime::task::raw::drop_abort_handle (15 samples, 0.04%)</title><rect x="80.0293%" y="789" width="0.0354%" height="15" fill="rgb(243,35,29)" fg:x="33894" fg:w="15"/><text x="80.2793%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (13 samples, 0.03%)</title><rect x="80.0340%" y="773" width="0.0307%" height="15" fill="rgb(210,37,18)" fg:x="33896" fg:w="13"/><text x="80.2840%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (13 samples, 0.03%)</title><rect x="80.0340%" y="757" width="0.0307%" height="15" fill="rgb(224,184,40)" fg:x="33896" fg:w="13"/><text x="80.2840%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (5 samples, 0.01%)</title><rect x="80.0647%" y="805" width="0.0118%" height="15" fill="rgb(236,39,29)" fg:x="33909" fg:w="5"/><text x="80.3147%" y="815.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (5 samples, 0.01%)</title><rect x="80.0836%" y="789" width="0.0118%" height="15" fill="rgb(232,48,39)" fg:x="33917" fg:w="5"/><text x="80.3336%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (5 samples, 0.01%)</title><rect x="80.0836%" y="773" width="0.0118%" height="15" fill="rgb(236,34,42)" fg:x="33917" fg:w="5"/><text x="80.3336%" y="783.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::drop_join_handle_slow (9 samples, 0.02%)</title><rect x="80.0765%" y="805" width="0.0213%" height="15" fill="rgb(243,106,37)" fg:x="33914" fg:w="9"/><text x="80.3265%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (19 samples, 0.04%)</title><rect x="80.0647%" y="837" width="0.0449%" height="15" fill="rgb(218,96,6)" fg:x="33909" fg:w="19"/><text x="80.3147%" y="847.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.04%)</title><rect x="80.0647%" y="821" width="0.0449%" height="15" fill="rgb(235,130,12)" fg:x="33909" fg:w="19"/><text x="80.3147%" y="831.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (5 samples, 0.01%)</title><rect x="80.0978%" y="805" width="0.0118%" height="15" fill="rgb(231,95,0)" fg:x="33923" fg:w="5"/><text x="80.3478%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.01%)</title><rect x="80.0978%" y="789" width="0.0118%" height="15" fill="rgb(228,12,23)" fg:x="33923" fg:w="5"/><text x="80.3478%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.01%)</title><rect x="80.0978%" y="773" width="0.0118%" height="15" fill="rgb(216,12,1)" fg:x="33923" fg:w="5"/><text x="80.3478%" y="783.50"></text></g><g><title>ringbuf::ring_buffer::base::RbBase::is_full (8 samples, 0.02%)</title><rect x="80.1096%" y="821" width="0.0189%" height="15" fill="rgb(219,59,3)" fg:x="33928" fg:w="8"/><text x="80.3596%" y="831.50"></text></g><g><title>ringbuf::ring_buffer::base::RbBase::vacant_len (5 samples, 0.01%)</title><rect x="80.1166%" y="805" width="0.0118%" height="15" fill="rgb(215,208,46)" fg:x="33931" fg:w="5"/><text x="80.3666%" y="815.50"></text></g><g><title>ringbuf::ring_buffer::rb::Rb::push_overwrite (19 samples, 0.04%)</title><rect x="80.1096%" y="837" width="0.0449%" height="15" fill="rgb(254,224,29)" fg:x="33928" fg:w="19"/><text x="80.3596%" y="847.50"></text></g><g><title>ringbuf::ring_buffer::rb::Rb::push (7 samples, 0.02%)</title><rect x="80.1379%" y="821" width="0.0165%" height="15" fill="rgb(232,14,29)" fg:x="33940" fg:w="7"/><text x="80.3879%" y="831.50"></text></g><g><title>ringbuf::producer::Producer&lt;T,R&gt;::push (7 samples, 0.02%)</title><rect x="80.1379%" y="805" width="0.0165%" height="15" fill="rgb(208,45,52)" fg:x="33940" fg:w="7"/><text x="80.3879%" y="815.50"></text></g><g><title>tokio::runtime::task::join::JoinHandle&lt;T&gt;::abort_handle (6 samples, 0.01%)</title><rect x="80.1591%" y="837" width="0.0142%" height="15" fill="rgb(234,191,28)" fg:x="33949" fg:w="6"/><text x="80.4091%" y="847.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::ref_inc (6 samples, 0.01%)</title><rect x="80.1591%" y="821" width="0.0142%" height="15" fill="rgb(244,67,43)" fg:x="33949" fg:w="6"/><text x="80.4091%" y="831.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (6 samples, 0.01%)</title><rect x="80.1591%" y="805" width="0.0142%" height="15" fill="rgb(236,189,24)" fg:x="33949" fg:w="6"/><text x="80.4091%" y="815.50"></text></g><g><title>__GI___lll_lock_wait_private (81 samples, 0.19%)</title><rect x="80.2441%" y="661" width="0.1913%" height="15" fill="rgb(239,214,33)" fg:x="33985" fg:w="81"/><text x="80.4941%" y="671.50"></text></g><g><title>futex_wait (79 samples, 0.19%)</title><rect x="80.2489%" y="645" width="0.1865%" height="15" fill="rgb(226,176,41)" fg:x="33987" fg:w="79"/><text x="80.4989%" y="655.50"></text></g><g><title>[unknown] (75 samples, 0.18%)</title><rect x="80.2583%" y="629" width="0.1771%" height="15" fill="rgb(248,47,8)" fg:x="33991" fg:w="75"/><text x="80.5083%" y="639.50"></text></g><g><title>[unknown] (74 samples, 0.17%)</title><rect x="80.2607%" y="613" width="0.1747%" height="15" fill="rgb(218,81,44)" fg:x="33992" fg:w="74"/><text x="80.5107%" y="623.50"></text></g><g><title>[unknown] (74 samples, 0.17%)</title><rect x="80.2607%" y="597" width="0.1747%" height="15" fill="rgb(213,98,6)" fg:x="33992" fg:w="74"/><text x="80.5107%" y="607.50"></text></g><g><title>[unknown] (72 samples, 0.17%)</title><rect x="80.2654%" y="581" width="0.1700%" height="15" fill="rgb(222,85,22)" fg:x="33994" fg:w="72"/><text x="80.5154%" y="591.50"></text></g><g><title>[unknown] (70 samples, 0.17%)</title><rect x="80.2701%" y="565" width="0.1653%" height="15" fill="rgb(239,46,39)" fg:x="33996" fg:w="70"/><text x="80.5201%" y="575.50"></text></g><g><title>[unknown] (66 samples, 0.16%)</title><rect x="80.2796%" y="549" width="0.1558%" height="15" fill="rgb(237,12,29)" fg:x="34000" fg:w="66"/><text x="80.5296%" y="559.50"></text></g><g><title>[unknown] (60 samples, 0.14%)</title><rect x="80.2937%" y="533" width="0.1417%" height="15" fill="rgb(214,77,8)" fg:x="34006" fg:w="60"/><text x="80.5437%" y="543.50"></text></g><g><title>[unknown] (28 samples, 0.07%)</title><rect x="80.3693%" y="517" width="0.0661%" height="15" fill="rgb(217,168,37)" fg:x="34038" fg:w="28"/><text x="80.6193%" y="527.50"></text></g><g><title>[unknown] (24 samples, 0.06%)</title><rect x="80.3787%" y="501" width="0.0567%" height="15" fill="rgb(221,217,23)" fg:x="34042" fg:w="24"/><text x="80.6287%" y="511.50"></text></g><g><title>[unknown] (21 samples, 0.05%)</title><rect x="80.3858%" y="485" width="0.0496%" height="15" fill="rgb(243,229,36)" fg:x="34045" fg:w="21"/><text x="80.6358%" y="495.50"></text></g><g><title>[unknown] (17 samples, 0.04%)</title><rect x="80.3953%" y="469" width="0.0401%" height="15" fill="rgb(251,163,40)" fg:x="34049" fg:w="17"/><text x="80.6453%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="80.4118%" y="453" width="0.0236%" height="15" fill="rgb(237,222,12)" fg:x="34056" fg:w="10"/><text x="80.6618%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="80.4189%" y="437" width="0.0165%" height="15" fill="rgb(248,132,6)" fg:x="34059" fg:w="7"/><text x="80.6689%" y="447.50"></text></g><g><title>__GI___lll_lock_wake_private (96 samples, 0.23%)</title><rect x="80.4354%" y="661" width="0.2267%" height="15" fill="rgb(227,167,50)" fg:x="34066" fg:w="96"/><text x="80.6854%" y="671.50"></text></g><g><title>[unknown] (90 samples, 0.21%)</title><rect x="80.4496%" y="645" width="0.2125%" height="15" fill="rgb(242,84,37)" fg:x="34072" fg:w="90"/><text x="80.6996%" y="655.50"></text></g><g><title>[unknown] (88 samples, 0.21%)</title><rect x="80.4543%" y="629" width="0.2078%" height="15" fill="rgb(212,4,50)" fg:x="34074" fg:w="88"/><text x="80.7043%" y="639.50"></text></g><g><title>[unknown] (85 samples, 0.20%)</title><rect x="80.4614%" y="613" width="0.2007%" height="15" fill="rgb(230,228,32)" fg:x="34077" fg:w="85"/><text x="80.7114%" y="623.50"></text></g><g><title>[unknown] (80 samples, 0.19%)</title><rect x="80.4732%" y="597" width="0.1889%" height="15" fill="rgb(248,217,23)" fg:x="34082" fg:w="80"/><text x="80.7232%" y="607.50"></text></g><g><title>[unknown] (75 samples, 0.18%)</title><rect x="80.4850%" y="581" width="0.1771%" height="15" fill="rgb(238,197,32)" fg:x="34087" fg:w="75"/><text x="80.7350%" y="591.50"></text></g><g><title>[unknown] (51 samples, 0.12%)</title><rect x="80.5417%" y="565" width="0.1204%" height="15" fill="rgb(236,106,1)" fg:x="34111" fg:w="51"/><text x="80.7917%" y="575.50"></text></g><g><title>[unknown] (46 samples, 0.11%)</title><rect x="80.5535%" y="549" width="0.1086%" height="15" fill="rgb(219,228,13)" fg:x="34116" fg:w="46"/><text x="80.8035%" y="559.50"></text></g><g><title>[unknown] (20 samples, 0.05%)</title><rect x="80.6148%" y="533" width="0.0472%" height="15" fill="rgb(238,30,35)" fg:x="34142" fg:w="20"/><text x="80.8648%" y="543.50"></text></g><g><title>[unknown] (16 samples, 0.04%)</title><rect x="80.6243%" y="517" width="0.0378%" height="15" fill="rgb(236,70,23)" fg:x="34146" fg:w="16"/><text x="80.8743%" y="527.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="80.6432%" y="501" width="0.0189%" height="15" fill="rgb(249,104,48)" fg:x="34154" fg:w="8"/><text x="80.8932%" y="511.50"></text></g><g><title>malloc_consolidate (71 samples, 0.17%)</title><rect x="80.7967%" y="645" width="0.1676%" height="15" fill="rgb(254,117,50)" fg:x="34219" fg:w="71"/><text x="81.0467%" y="655.50"></text></g><g><title>sysmalloc (18 samples, 0.04%)</title><rect x="80.9643%" y="645" width="0.0425%" height="15" fill="rgb(223,152,4)" fg:x="34290" fg:w="18"/><text x="81.2143%" y="655.50"></text></g><g><title>grow_heap (13 samples, 0.03%)</title><rect x="80.9761%" y="629" width="0.0307%" height="15" fill="rgb(245,6,2)" fg:x="34295" fg:w="13"/><text x="81.2261%" y="639.50"></text></g><g><title>__GI_mprotect (13 samples, 0.03%)</title><rect x="80.9761%" y="613" width="0.0307%" height="15" fill="rgb(249,150,24)" fg:x="34295" fg:w="13"/><text x="81.2261%" y="623.50"></text></g><g><title>[unknown] (13 samples, 0.03%)</title><rect x="80.9761%" y="597" width="0.0307%" height="15" fill="rgb(228,185,42)" fg:x="34295" fg:w="13"/><text x="81.2261%" y="607.50"></text></g><g><title>[unknown] (13 samples, 0.03%)</title><rect x="80.9761%" y="581" width="0.0307%" height="15" fill="rgb(226,39,33)" fg:x="34295" fg:w="13"/><text x="81.2261%" y="591.50"></text></g><g><title>[unknown] (13 samples, 0.03%)</title><rect x="80.9761%" y="565" width="0.0307%" height="15" fill="rgb(221,166,19)" fg:x="34295" fg:w="13"/><text x="81.2261%" y="575.50"></text></g><g><title>[unknown] (13 samples, 0.03%)</title><rect x="80.9761%" y="549" width="0.0307%" height="15" fill="rgb(209,109,2)" fg:x="34295" fg:w="13"/><text x="81.2261%" y="559.50"></text></g><g><title>[unknown] (13 samples, 0.03%)</title><rect x="80.9761%" y="533" width="0.0307%" height="15" fill="rgb(252,216,26)" fg:x="34295" fg:w="13"/><text x="81.2261%" y="543.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="80.9832%" y="517" width="0.0236%" height="15" fill="rgb(227,173,36)" fg:x="34298" fg:w="10"/><text x="81.2332%" y="527.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="80.9832%" y="501" width="0.0236%" height="15" fill="rgb(209,90,7)" fg:x="34298" fg:w="10"/><text x="81.2332%" y="511.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="80.9855%" y="485" width="0.0213%" height="15" fill="rgb(250,194,11)" fg:x="34299" fg:w="9"/><text x="81.2355%" y="495.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="80.9879%" y="469" width="0.0189%" height="15" fill="rgb(220,72,50)" fg:x="34300" fg:w="8"/><text x="81.2379%" y="479.50"></text></g><g><title>_int_malloc (206 samples, 0.49%)</title><rect x="80.6621%" y="661" width="0.4864%" height="15" fill="rgb(222,106,48)" fg:x="34162" fg:w="206"/><text x="80.9121%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (60 samples, 0.14%)</title><rect x="81.0068%" y="645" width="0.1417%" height="15" fill="rgb(216,220,45)" fg:x="34308" fg:w="60"/><text x="81.2568%" y="655.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (15 samples, 0.04%)</title><rect x="81.1131%" y="629" width="0.0354%" height="15" fill="rgb(234,112,18)" fg:x="34353" fg:w="15"/><text x="81.3631%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (13 samples, 0.03%)</title><rect x="81.1178%" y="613" width="0.0307%" height="15" fill="rgb(206,179,9)" fg:x="34355" fg:w="13"/><text x="81.3678%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (402 samples, 0.95%)</title><rect x="80.2134%" y="821" width="0.9492%" height="15" fill="rgb(215,115,40)" fg:x="33972" fg:w="402"/><text x="80.4634%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (402 samples, 0.95%)</title><rect x="80.2134%" y="805" width="0.9492%" height="15" fill="rgb(222,69,34)" fg:x="33972" fg:w="402"/><text x="80.4634%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (402 samples, 0.95%)</title><rect x="80.2134%" y="789" width="0.9492%" height="15" fill="rgb(209,161,10)" fg:x="33972" fg:w="402"/><text x="80.4634%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (402 samples, 0.95%)</title><rect x="80.2134%" y="773" width="0.9492%" height="15" fill="rgb(217,6,38)" fg:x="33972" fg:w="402"/><text x="80.4634%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (402 samples, 0.95%)</title><rect x="80.2134%" y="757" width="0.9492%" height="15" fill="rgb(229,229,48)" fg:x="33972" fg:w="402"/><text x="80.4634%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (402 samples, 0.95%)</title><rect x="80.2134%" y="741" width="0.9492%" height="15" fill="rgb(225,21,28)" fg:x="33972" fg:w="402"/><text x="80.4634%" y="751.50"></text></g><g><title>alloc::alloc::alloc (402 samples, 0.95%)</title><rect x="80.2134%" y="725" width="0.9492%" height="15" fill="rgb(206,33,13)" fg:x="33972" fg:w="402"/><text x="80.4634%" y="735.50"></text></g><g><title>__rdl_alloc (402 samples, 0.95%)</title><rect x="80.2134%" y="709" width="0.9492%" height="15" fill="rgb(242,178,17)" fg:x="33972" fg:w="402"/><text x="80.4634%" y="719.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (402 samples, 0.95%)</title><rect x="80.2134%" y="693" width="0.9492%" height="15" fill="rgb(220,162,5)" fg:x="33972" fg:w="402"/><text x="80.4634%" y="703.50"></text></g><g><title>__GI___libc_malloc (402 samples, 0.95%)</title><rect x="80.2134%" y="677" width="0.9492%" height="15" fill="rgb(210,33,43)" fg:x="33972" fg:w="402"/><text x="80.4634%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::net::udp::UdpSocket&gt;&gt; (19 samples, 0.04%)</title><rect x="81.1626%" y="821" width="0.0449%" height="15" fill="rgb(216,116,54)" fg:x="34374" fg:w="19"/><text x="81.4126%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.04%)</title><rect x="81.1626%" y="805" width="0.0449%" height="15" fill="rgb(249,92,24)" fg:x="34374" fg:w="19"/><text x="81.4126%" y="815.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (24 samples, 0.06%)</title><rect x="81.2169%" y="789" width="0.0567%" height="15" fill="rgb(231,189,14)" fg:x="34397" fg:w="24"/><text x="81.4669%" y="799.50"></text></g><g><title>tokio::io::ready::Ready::intersection (5 samples, 0.01%)</title><rect x="81.2618%" y="773" width="0.0118%" height="15" fill="rgb(230,8,41)" fg:x="34416" fg:w="5"/><text x="81.5118%" y="783.50"></text></g><g><title>tokio::io::ready::Ready::from_interest (5 samples, 0.01%)</title><rect x="81.2618%" y="757" width="0.0118%" height="15" fill="rgb(249,7,27)" fg:x="34416" fg:w="5"/><text x="81.5118%" y="767.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="81.3114%" y="741" width="0.0118%" height="15" fill="rgb(232,86,5)" fg:x="34437" fg:w="5"/><text x="81.5614%" y="751.50"></text></g><g><title>tokio::net::udp::UdpSocket::readable::{{closure}} (55 samples, 0.13%)</title><rect x="81.2075%" y="821" width="0.1299%" height="15" fill="rgb(224,175,18)" fg:x="34393" fg:w="55"/><text x="81.4575%" y="831.50"></text></g><g><title>tokio::net::udp::UdpSocket::ready::{{closure}} (54 samples, 0.13%)</title><rect x="81.2099%" y="805" width="0.1275%" height="15" fill="rgb(220,129,12)" fg:x="34394" fg:w="54"/><text x="81.4599%" y="815.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (27 samples, 0.06%)</title><rect x="81.2736%" y="789" width="0.0638%" height="15" fill="rgb(210,19,36)" fg:x="34421" fg:w="27"/><text x="81.5236%" y="799.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (23 samples, 0.05%)</title><rect x="81.2831%" y="773" width="0.0543%" height="15" fill="rgb(219,96,14)" fg:x="34425" fg:w="23"/><text x="81.5331%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (20 samples, 0.05%)</title><rect x="81.2901%" y="757" width="0.0472%" height="15" fill="rgb(249,106,1)" fg:x="34428" fg:w="20"/><text x="81.5401%" y="767.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (6 samples, 0.01%)</title><rect x="81.3232%" y="741" width="0.0142%" height="15" fill="rgb(249,155,20)" fg:x="34442" fg:w="6"/><text x="81.5732%" y="751.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (13 samples, 0.03%)</title><rect x="81.5121%" y="789" width="0.0307%" height="15" fill="rgb(244,168,9)" fg:x="34522" fg:w="13"/><text x="81.7621%" y="799.50"></text></g><g><title>[unknown] (2,299 samples, 5.43%)</title><rect x="81.6514%" y="629" width="5.4283%" height="15" fill="rgb(216,23,50)" fg:x="34581" fg:w="2299"/><text x="81.9014%" y="639.50">[unknow..</text></g><g><title>[unknown] (2,285 samples, 5.40%)</title><rect x="81.6845%" y="613" width="5.3953%" height="15" fill="rgb(224,219,20)" fg:x="34595" fg:w="2285"/><text x="81.9345%" y="623.50">[unknow..</text></g><g><title>[unknown] (2,266 samples, 5.35%)</title><rect x="81.7293%" y="597" width="5.3504%" height="15" fill="rgb(222,156,15)" fg:x="34614" fg:w="2266"/><text x="81.9793%" y="607.50">[unknow..</text></g><g><title>[unknown] (2,243 samples, 5.30%)</title><rect x="81.7836%" y="581" width="5.2961%" height="15" fill="rgb(231,97,17)" fg:x="34637" fg:w="2243"/><text x="82.0336%" y="591.50">[unkno..</text></g><g><title>[unknown] (2,045 samples, 4.83%)</title><rect x="82.2511%" y="565" width="4.8286%" height="15" fill="rgb(218,70,48)" fg:x="34835" fg:w="2045"/><text x="82.5011%" y="575.50">[unkno..</text></g><g><title>[unknown] (1,928 samples, 4.55%)</title><rect x="82.5274%" y="549" width="4.5523%" height="15" fill="rgb(212,196,52)" fg:x="34952" fg:w="1928"/><text x="82.7774%" y="559.50">[unkn..</text></g><g><title>[unknown] (1,828 samples, 4.32%)</title><rect x="82.7635%" y="533" width="4.3162%" height="15" fill="rgb(243,203,18)" fg:x="35052" fg:w="1828"/><text x="83.0135%" y="543.50">[unkn..</text></g><g><title>[unknown] (1,505 samples, 3.55%)</title><rect x="83.5262%" y="517" width="3.5536%" height="15" fill="rgb(252,125,41)" fg:x="35375" fg:w="1505"/><text x="83.7762%" y="527.50">[unk..</text></g><g><title>[unknown] (1,087 samples, 2.57%)</title><rect x="84.5131%" y="501" width="2.5666%" height="15" fill="rgb(223,180,33)" fg:x="35793" fg:w="1087"/><text x="84.7631%" y="511.50">[u..</text></g><g><title>[unknown] (1,002 samples, 2.37%)</title><rect x="84.7138%" y="485" width="2.3659%" height="15" fill="rgb(254,159,46)" fg:x="35878" fg:w="1002"/><text x="84.9638%" y="495.50">[u..</text></g><g><title>[unknown] (677 samples, 1.60%)</title><rect x="85.4812%" y="469" width="1.5985%" height="15" fill="rgb(254,38,10)" fg:x="36203" fg:w="677"/><text x="85.7312%" y="479.50"></text></g><g><title>[unknown] (563 samples, 1.33%)</title><rect x="85.7504%" y="453" width="1.3293%" height="15" fill="rgb(208,217,32)" fg:x="36317" fg:w="563"/><text x="86.0004%" y="463.50"></text></g><g><title>[unknown] (354 samples, 0.84%)</title><rect x="86.2439%" y="437" width="0.8359%" height="15" fill="rgb(221,120,13)" fg:x="36526" fg:w="354"/><text x="86.4939%" y="447.50"></text></g><g><title>[unknown] (167 samples, 0.39%)</title><rect x="86.6854%" y="421" width="0.3943%" height="15" fill="rgb(246,54,52)" fg:x="36713" fg:w="167"/><text x="86.9354%" y="431.50"></text></g><g><title>[unknown] (50 samples, 0.12%)</title><rect x="86.9617%" y="405" width="0.1181%" height="15" fill="rgb(242,34,25)" fg:x="36830" fg:w="50"/><text x="87.2117%" y="415.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="87.0514%" y="389" width="0.0283%" height="15" fill="rgb(247,209,9)" fg:x="36868" fg:w="12"/><text x="87.3014%" y="399.50"></text></g><g><title>__libc_recvfrom (2,332 samples, 5.51%)</title><rect x="81.5876%" y="645" width="5.5062%" height="15" fill="rgb(228,71,26)" fg:x="34554" fg:w="2332"/><text x="81.8376%" y="655.50">__libc_..</text></g><g><title>__GI___pthread_disable_asynccancel (6 samples, 0.01%)</title><rect x="87.0797%" y="629" width="0.0142%" height="15" fill="rgb(222,145,49)" fg:x="36880" fg:w="6"/><text x="87.3297%" y="639.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}}::{{closure}} (2,365 samples, 5.58%)</title><rect x="81.5475%" y="789" width="5.5842%" height="15" fill="rgb(218,121,17)" fg:x="34537" fg:w="2365"/><text x="81.7975%" y="799.50">tokio::..</text></g><g><title>mio::net::udp::UdpSocket::recv_from (2,352 samples, 5.55%)</title><rect x="81.5782%" y="773" width="5.5535%" height="15" fill="rgb(244,50,7)" fg:x="34550" fg:w="2352"/><text x="81.8282%" y="783.50">mio::ne..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2,352 samples, 5.55%)</title><rect x="81.5782%" y="757" width="5.5535%" height="15" fill="rgb(246,229,37)" fg:x="34550" fg:w="2352"/><text x="81.8282%" y="767.50">mio::io..</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (2,352 samples, 5.55%)</title><rect x="81.5782%" y="741" width="5.5535%" height="15" fill="rgb(225,18,5)" fg:x="34550" fg:w="2352"/><text x="81.8282%" y="751.50">mio::sy..</text></g><g><title>mio::net::udp::UdpSocket::recv_from::{{closure}} (2,352 samples, 5.55%)</title><rect x="81.5782%" y="725" width="5.5535%" height="15" fill="rgb(213,204,8)" fg:x="34550" fg:w="2352"/><text x="81.8282%" y="735.50">mio::ne..</text></g><g><title>std::net::udp::UdpSocket::recv_from (2,352 samples, 5.55%)</title><rect x="81.5782%" y="709" width="5.5535%" height="15" fill="rgb(238,103,6)" fg:x="34550" fg:w="2352"/><text x="81.8282%" y="719.50">std::ne..</text></g><g><title>std::sys_common::net::UdpSocket::recv_from (2,352 samples, 5.55%)</title><rect x="81.5782%" y="693" width="5.5535%" height="15" fill="rgb(222,25,35)" fg:x="34550" fg:w="2352"/><text x="81.8282%" y="703.50">std::sy..</text></g><g><title>std::sys::pal::unix::net::Socket::recv_from (2,352 samples, 5.55%)</title><rect x="81.5782%" y="677" width="5.5535%" height="15" fill="rgb(213,203,35)" fg:x="34550" fg:w="2352"/><text x="81.8282%" y="687.50">std::sy..</text></g><g><title>std::sys::pal::unix::net::Socket::recv_from_with_flags (2,352 samples, 5.55%)</title><rect x="81.5782%" y="661" width="5.5535%" height="15" fill="rgb(221,79,53)" fg:x="34550" fg:w="2352"/><text x="81.8282%" y="671.50">std::sy..</text></g><g><title>std::sys_common::net::sockaddr_to_addr (14 samples, 0.03%)</title><rect x="87.0986%" y="645" width="0.0331%" height="15" fill="rgb(243,200,35)" fg:x="36888" fg:w="14"/><text x="87.3486%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.02%)</title><rect x="87.1340%" y="773" width="0.0213%" height="15" fill="rgb(248,60,25)" fg:x="36903" fg:w="9"/><text x="87.3840%" y="783.50"></text></g><g><title>_int_malloc (6 samples, 0.01%)</title><rect x="87.1624%" y="757" width="0.0142%" height="15" fill="rgb(227,53,46)" fg:x="36915" fg:w="6"/><text x="87.4124%" y="767.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="87.1647%" y="741" width="0.0118%" height="15" fill="rgb(216,120,32)" fg:x="36916" fg:w="5"/><text x="87.4147%" y="751.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::receive_request::{{closure}} (2,972 samples, 7.02%)</title><rect x="80.1733%" y="837" width="7.0174%" height="15" fill="rgb(220,134,1)" fg:x="33955" fg:w="2972"/><text x="80.4233%" y="847.50">torrust_t..</text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}} (2,479 samples, 5.85%)</title><rect x="81.3374%" y="821" width="5.8533%" height="15" fill="rgb(237,168,5)" fg:x="34448" fg:w="2479"/><text x="81.5874%" y="831.50">tokio::..</text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (2,478 samples, 5.85%)</title><rect x="81.3397%" y="805" width="5.8510%" height="15" fill="rgb(231,100,33)" fg:x="34449" fg:w="2478"/><text x="81.5897%" y="815.50">tokio::..</text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (25 samples, 0.06%)</title><rect x="87.1317%" y="789" width="0.0590%" height="15" fill="rgb(236,177,47)" fg:x="36902" fg:w="25"/><text x="87.3817%" y="799.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (15 samples, 0.04%)</title><rect x="87.1553%" y="773" width="0.0354%" height="15" fill="rgb(235,7,49)" fg:x="36912" fg:w="15"/><text x="87.4053%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (6 samples, 0.01%)</title><rect x="87.1765%" y="757" width="0.0142%" height="15" fill="rgb(232,119,22)" fg:x="36921" fg:w="6"/><text x="87.4265%" y="767.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (26 samples, 0.06%)</title><rect x="87.2072%" y="757" width="0.0614%" height="15" fill="rgb(254,73,53)" fg:x="36934" fg:w="26"/><text x="87.4572%" y="767.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (5 samples, 0.01%)</title><rect x="87.2710%" y="757" width="0.0118%" height="15" fill="rgb(251,35,20)" fg:x="36961" fg:w="5"/><text x="87.5210%" y="767.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="87.2710%" y="741" width="0.0118%" height="15" fill="rgb(241,119,20)" fg:x="36961" fg:w="5"/><text x="87.5210%" y="751.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (256 samples, 0.60%)</title><rect x="87.2851%" y="741" width="0.6045%" height="15" fill="rgb(207,102,14)" fg:x="36967" fg:w="256"/><text x="87.5351%" y="751.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (12 samples, 0.03%)</title><rect x="87.8896%" y="741" width="0.0283%" height="15" fill="rgb(248,201,50)" fg:x="37223" fg:w="12"/><text x="88.1396%" y="751.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (12 samples, 0.03%)</title><rect x="87.8896%" y="725" width="0.0283%" height="15" fill="rgb(222,185,44)" fg:x="37223" fg:w="12"/><text x="88.1396%" y="735.50"></text></g><g><title>core::cell::BorrowRef::new (12 samples, 0.03%)</title><rect x="87.8896%" y="709" width="0.0283%" height="15" fill="rgb(218,107,18)" fg:x="37223" fg:w="12"/><text x="88.1396%" y="719.50"></text></g><g><title>core::cell::is_reading (8 samples, 0.02%)</title><rect x="87.8990%" y="693" width="0.0189%" height="15" fill="rgb(237,177,39)" fg:x="37227" fg:w="8"/><text x="88.1490%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="87.9439%" y="661" width="0.0118%" height="15" fill="rgb(246,69,6)" fg:x="37246" fg:w="5"/><text x="88.1939%" y="671.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (70 samples, 0.17%)</title><rect x="87.9557%" y="661" width="0.1653%" height="15" fill="rgb(234,208,37)" fg:x="37251" fg:w="70"/><text x="88.2057%" y="671.50"></text></g><g><title>syscall (364 samples, 0.86%)</title><rect x="88.2013%" y="485" width="0.8595%" height="15" fill="rgb(225,4,6)" fg:x="37355" fg:w="364"/><text x="88.4513%" y="495.50"></text></g><g><title>[unknown] (343 samples, 0.81%)</title><rect x="88.2509%" y="469" width="0.8099%" height="15" fill="rgb(233,45,0)" fg:x="37376" fg:w="343"/><text x="88.5009%" y="479.50"></text></g><g><title>[unknown] (341 samples, 0.81%)</title><rect x="88.2556%" y="453" width="0.8052%" height="15" fill="rgb(226,136,5)" fg:x="37378" fg:w="341"/><text x="88.5056%" y="463.50"></text></g><g><title>[unknown] (329 samples, 0.78%)</title><rect x="88.2839%" y="437" width="0.7768%" height="15" fill="rgb(211,91,47)" fg:x="37390" fg:w="329"/><text x="88.5339%" y="447.50"></text></g><g><title>[unknown] (316 samples, 0.75%)</title><rect x="88.3146%" y="421" width="0.7461%" height="15" fill="rgb(242,88,51)" fg:x="37403" fg:w="316"/><text x="88.5646%" y="431.50"></text></g><g><title>[unknown] (306 samples, 0.72%)</title><rect x="88.3382%" y="405" width="0.7225%" height="15" fill="rgb(230,91,28)" fg:x="37413" fg:w="306"/><text x="88.5882%" y="415.50"></text></g><g><title>[unknown] (240 samples, 0.57%)</title><rect x="88.4940%" y="389" width="0.5667%" height="15" fill="rgb(254,186,29)" fg:x="37479" fg:w="240"/><text x="88.7440%" y="399.50"></text></g><g><title>[unknown] (219 samples, 0.52%)</title><rect x="88.5436%" y="373" width="0.5171%" height="15" fill="rgb(238,6,4)" fg:x="37500" fg:w="219"/><text x="88.7936%" y="383.50"></text></g><g><title>[unknown] (145 samples, 0.34%)</title><rect x="88.7184%" y="357" width="0.3424%" height="15" fill="rgb(221,151,16)" fg:x="37574" fg:w="145"/><text x="88.9684%" y="367.50"></text></g><g><title>[unknown] (102 samples, 0.24%)</title><rect x="88.8199%" y="341" width="0.2408%" height="15" fill="rgb(251,143,52)" fg:x="37617" fg:w="102"/><text x="89.0699%" y="351.50"></text></g><g><title>[unknown] (49 samples, 0.12%)</title><rect x="88.9450%" y="325" width="0.1157%" height="15" fill="rgb(206,90,15)" fg:x="37670" fg:w="49"/><text x="89.1950%" y="335.50"></text></g><g><title>[unknown] (26 samples, 0.06%)</title><rect x="88.9993%" y="309" width="0.0614%" height="15" fill="rgb(218,35,8)" fg:x="37693" fg:w="26"/><text x="89.2493%" y="319.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="89.0253%" y="293" width="0.0354%" height="15" fill="rgb(239,215,6)" fg:x="37704" fg:w="15"/><text x="89.2753%" y="303.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="89.0253%" y="277" width="0.0354%" height="15" fill="rgb(245,116,39)" fg:x="37704" fg:w="15"/><text x="89.2753%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="89.0961%" y="373" width="0.0118%" height="15" fill="rgb(242,65,28)" fg:x="37734" fg:w="5"/><text x="89.3461%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::store (5 samples, 0.01%)</title><rect x="89.1127%" y="341" width="0.0118%" height="15" fill="rgb(252,132,53)" fg:x="37741" fg:w="5"/><text x="89.3627%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_store (5 samples, 0.01%)</title><rect x="89.1127%" y="325" width="0.0118%" height="15" fill="rgb(224,159,50)" fg:x="37741" fg:w="5"/><text x="89.3627%" y="335.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_finish (10 samples, 0.02%)</title><rect x="89.1103%" y="357" width="0.0236%" height="15" fill="rgb(224,93,4)" fg:x="37740" fg:w="10"/><text x="89.3603%" y="367.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (12 samples, 0.03%)</title><rect x="89.1080%" y="373" width="0.0283%" height="15" fill="rgb(208,81,34)" fg:x="37739" fg:w="12"/><text x="89.3580%" y="383.50"></text></g><g><title>tokio::runtime::context::with_scheduler (40 samples, 0.09%)</title><rect x="89.0607%" y="485" width="0.0944%" height="15" fill="rgb(233,92,54)" fg:x="37719" fg:w="40"/><text x="89.3107%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (37 samples, 0.09%)</title><rect x="89.0678%" y="469" width="0.0874%" height="15" fill="rgb(237,21,14)" fg:x="37722" fg:w="37"/><text x="89.3178%" y="479.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (36 samples, 0.09%)</title><rect x="89.0702%" y="453" width="0.0850%" height="15" fill="rgb(249,128,51)" fg:x="37723" fg:w="36"/><text x="89.3202%" y="463.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (35 samples, 0.08%)</title><rect x="89.0725%" y="437" width="0.0826%" height="15" fill="rgb(223,129,24)" fg:x="37724" fg:w="35"/><text x="89.3225%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (35 samples, 0.08%)</title><rect x="89.0725%" y="421" width="0.0826%" height="15" fill="rgb(231,168,25)" fg:x="37724" fg:w="35"/><text x="89.3225%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (35 samples, 0.08%)</title><rect x="89.0725%" y="405" width="0.0826%" height="15" fill="rgb(224,39,20)" fg:x="37724" fg:w="35"/><text x="89.3225%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (32 samples, 0.08%)</title><rect x="89.0796%" y="389" width="0.0756%" height="15" fill="rgb(225,152,53)" fg:x="37727" fg:w="32"/><text x="89.3296%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (8 samples, 0.02%)</title><rect x="89.1363%" y="373" width="0.0189%" height="15" fill="rgb(252,17,24)" fg:x="37751" fg:w="8"/><text x="89.3863%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (6 samples, 0.01%)</title><rect x="89.1575%" y="469" width="0.0142%" height="15" fill="rgb(250,114,30)" fg:x="37760" fg:w="6"/><text x="89.4075%" y="479.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (9 samples, 0.02%)</title><rect x="89.1788%" y="437" width="0.0213%" height="15" fill="rgb(229,5,4)" fg:x="37769" fg:w="9"/><text x="89.4288%" y="447.50"></text></g><g><title>std::sync::poison::Flag::guard (9 samples, 0.02%)</title><rect x="89.1788%" y="421" width="0.0213%" height="15" fill="rgb(225,176,49)" fg:x="37769" fg:w="9"/><text x="89.4288%" y="431.50"></text></g><g><title>std::thread::panicking (8 samples, 0.02%)</title><rect x="89.1811%" y="405" width="0.0189%" height="15" fill="rgb(224,221,49)" fg:x="37770" fg:w="8"/><text x="89.4311%" y="415.50"></text></g><g><title>std::panicking::panicking (8 samples, 0.02%)</title><rect x="89.1811%" y="389" width="0.0189%" height="15" fill="rgb(253,169,27)" fg:x="37770" fg:w="8"/><text x="89.4311%" y="399.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (8 samples, 0.02%)</title><rect x="89.1811%" y="373" width="0.0189%" height="15" fill="rgb(211,206,16)" fg:x="37770" fg:w="8"/><text x="89.4311%" y="383.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (19 samples, 0.04%)</title><rect x="89.1788%" y="469" width="0.0449%" height="15" fill="rgb(244,87,35)" fg:x="37769" fg:w="19"/><text x="89.4288%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (19 samples, 0.04%)</title><rect x="89.1788%" y="453" width="0.0449%" height="15" fill="rgb(246,28,10)" fg:x="37769" fg:w="19"/><text x="89.4288%" y="463.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (10 samples, 0.02%)</title><rect x="89.2000%" y="437" width="0.0236%" height="15" fill="rgb(229,12,44)" fg:x="37778" fg:w="10"/><text x="89.4500%" y="447.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (5 samples, 0.01%)</title><rect x="89.2118%" y="421" width="0.0118%" height="15" fill="rgb(210,145,37)" fg:x="37783" fg:w="5"/><text x="89.4618%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (265 samples, 0.63%)</title><rect x="89.2355%" y="453" width="0.6257%" height="15" fill="rgb(227,112,52)" fg:x="37793" fg:w="265"/><text x="89.4855%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (265 samples, 0.63%)</title><rect x="89.2355%" y="437" width="0.6257%" height="15" fill="rgb(238,155,34)" fg:x="37793" fg:w="265"/><text x="89.4855%" y="447.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (309 samples, 0.73%)</title><rect x="89.1552%" y="485" width="0.7296%" height="15" fill="rgb(239,226,36)" fg:x="37759" fg:w="309"/><text x="89.4052%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (280 samples, 0.66%)</title><rect x="89.2236%" y="469" width="0.6611%" height="15" fill="rgb(230,16,23)" fg:x="37788" fg:w="280"/><text x="89.4736%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::num_unparked (10 samples, 0.02%)</title><rect x="89.8612%" y="453" width="0.0236%" height="15" fill="rgb(236,171,36)" fg:x="38058" fg:w="10"/><text x="90.1112%" y="463.50"></text></g><g><title>__GI___libc_write (84 samples, 0.20%)</title><rect x="89.8848%" y="309" width="0.1983%" height="15" fill="rgb(221,22,14)" fg:x="38068" fg:w="84"/><text x="90.1348%" y="319.50"></text></g><g><title>__GI___libc_write (84 samples, 0.20%)</title><rect x="89.8848%" y="293" width="0.1983%" height="15" fill="rgb(242,43,11)" fg:x="38068" fg:w="84"/><text x="90.1348%" y="303.50"></text></g><g><title>[unknown] (83 samples, 0.20%)</title><rect x="89.8871%" y="277" width="0.1960%" height="15" fill="rgb(232,69,23)" fg:x="38069" fg:w="83"/><text x="90.1371%" y="287.50"></text></g><g><title>[unknown] (83 samples, 0.20%)</title><rect x="89.8871%" y="261" width="0.1960%" height="15" fill="rgb(216,180,54)" fg:x="38069" fg:w="83"/><text x="90.1371%" y="271.50"></text></g><g><title>[unknown] (83 samples, 0.20%)</title><rect x="89.8871%" y="245" width="0.1960%" height="15" fill="rgb(216,5,24)" fg:x="38069" fg:w="83"/><text x="90.1371%" y="255.50"></text></g><g><title>[unknown] (76 samples, 0.18%)</title><rect x="89.9037%" y="229" width="0.1794%" height="15" fill="rgb(225,89,9)" fg:x="38076" fg:w="76"/><text x="90.1537%" y="239.50"></text></g><g><title>[unknown] (70 samples, 0.17%)</title><rect x="89.9178%" y="213" width="0.1653%" height="15" fill="rgb(243,75,33)" fg:x="38082" fg:w="70"/><text x="90.1678%" y="223.50"></text></g><g><title>[unknown] (67 samples, 0.16%)</title><rect x="89.9249%" y="197" width="0.1582%" height="15" fill="rgb(247,141,45)" fg:x="38085" fg:w="67"/><text x="90.1749%" y="207.50"></text></g><g><title>[unknown] (57 samples, 0.13%)</title><rect x="89.9485%" y="181" width="0.1346%" height="15" fill="rgb(232,177,36)" fg:x="38095" fg:w="57"/><text x="90.1985%" y="191.50"></text></g><g><title>[unknown] (40 samples, 0.09%)</title><rect x="89.9887%" y="165" width="0.0944%" height="15" fill="rgb(219,125,36)" fg:x="38112" fg:w="40"/><text x="90.2387%" y="175.50"></text></g><g><title>[unknown] (40 samples, 0.09%)</title><rect x="89.9887%" y="149" width="0.0944%" height="15" fill="rgb(227,94,9)" fg:x="38112" fg:w="40"/><text x="90.2387%" y="159.50"></text></g><g><title>[unknown] (33 samples, 0.08%)</title><rect x="90.0052%" y="133" width="0.0779%" height="15" fill="rgb(240,34,52)" fg:x="38119" fg:w="33"/><text x="90.2552%" y="143.50"></text></g><g><title>[unknown] (28 samples, 0.07%)</title><rect x="90.0170%" y="117" width="0.0661%" height="15" fill="rgb(216,45,12)" fg:x="38124" fg:w="28"/><text x="90.2670%" y="127.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="90.0477%" y="101" width="0.0354%" height="15" fill="rgb(246,21,19)" fg:x="38137" fg:w="15"/><text x="90.2977%" y="111.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="90.0571%" y="85" width="0.0260%" height="15" fill="rgb(213,98,42)" fg:x="38141" fg:w="11"/><text x="90.3071%" y="95.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="90.0595%" y="69" width="0.0236%" height="15" fill="rgb(250,136,47)" fg:x="38142" fg:w="10"/><text x="90.3095%" y="79.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="90.0666%" y="53" width="0.0165%" height="15" fill="rgb(251,124,27)" fg:x="38145" fg:w="7"/><text x="90.3166%" y="63.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="90.0713%" y="37" width="0.0118%" height="15" fill="rgb(229,180,14)" fg:x="38147" fg:w="5"/><text x="90.3213%" y="47.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (85 samples, 0.20%)</title><rect x="89.8848%" y="453" width="0.2007%" height="15" fill="rgb(245,216,25)" fg:x="38068" fg:w="85"/><text x="90.1348%" y="463.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (85 samples, 0.20%)</title><rect x="89.8848%" y="437" width="0.2007%" height="15" fill="rgb(251,43,5)" fg:x="38068" fg:w="85"/><text x="90.1348%" y="447.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (85 samples, 0.20%)</title><rect x="89.8848%" y="421" width="0.2007%" height="15" fill="rgb(250,128,24)" fg:x="38068" fg:w="85"/><text x="90.1348%" y="431.50"></text></g><g><title>mio::waker::Waker::wake (85 samples, 0.20%)</title><rect x="89.8848%" y="405" width="0.2007%" height="15" fill="rgb(217,117,27)" fg:x="38068" fg:w="85"/><text x="90.1348%" y="415.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (85 samples, 0.20%)</title><rect x="89.8848%" y="389" width="0.2007%" height="15" fill="rgb(245,147,4)" fg:x="38068" fg:w="85"/><text x="90.1348%" y="399.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (85 samples, 0.20%)</title><rect x="89.8848%" y="373" width="0.2007%" height="15" fill="rgb(242,201,35)" fg:x="38068" fg:w="85"/><text x="90.1348%" y="383.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (85 samples, 0.20%)</title><rect x="89.8848%" y="357" width="0.2007%" height="15" fill="rgb(218,181,1)" fg:x="38068" fg:w="85"/><text x="90.1348%" y="367.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (85 samples, 0.20%)</title><rect x="89.8848%" y="341" width="0.2007%" height="15" fill="rgb(222,6,29)" fg:x="38068" fg:w="85"/><text x="90.1348%" y="351.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (85 samples, 0.20%)</title><rect x="89.8848%" y="325" width="0.2007%" height="15" fill="rgb(208,186,3)" fg:x="38068" fg:w="85"/><text x="90.1348%" y="335.50"></text></g><g><title>tokio::runtime::context::with_scheduler (805 samples, 1.90%)</title><rect x="88.1918%" y="613" width="1.9007%" height="15" fill="rgb(216,36,26)" fg:x="37351" fg:w="805"/><text x="88.4418%" y="623.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (805 samples, 1.90%)</title><rect x="88.1918%" y="597" width="1.9007%" height="15" fill="rgb(248,201,23)" fg:x="37351" fg:w="805"/><text x="88.4418%" y="607.50">s..</text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (805 samples, 1.90%)</title><rect x="88.1918%" y="581" width="1.9007%" height="15" fill="rgb(251,170,31)" fg:x="37351" fg:w="805"/><text x="88.4418%" y="591.50">t..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (805 samples, 1.90%)</title><rect x="88.1918%" y="565" width="1.9007%" height="15" fill="rgb(207,110,25)" fg:x="37351" fg:w="805"/><text x="88.4418%" y="575.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (805 samples, 1.90%)</title><rect x="88.1918%" y="549" width="1.9007%" height="15" fill="rgb(250,54,15)" fg:x="37351" fg:w="805"/><text x="88.4418%" y="559.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (805 samples, 1.90%)</title><rect x="88.1918%" y="533" width="1.9007%" height="15" fill="rgb(227,68,33)" fg:x="37351" fg:w="805"/><text x="88.4418%" y="543.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (801 samples, 1.89%)</title><rect x="88.2013%" y="517" width="1.8913%" height="15" fill="rgb(238,34,41)" fg:x="37355" fg:w="801"/><text x="88.4513%" y="527.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (801 samples, 1.89%)</title><rect x="88.2013%" y="501" width="1.8913%" height="15" fill="rgb(220,11,15)" fg:x="37355" fg:w="801"/><text x="88.4513%" y="511.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (88 samples, 0.21%)</title><rect x="89.8848%" y="485" width="0.2078%" height="15" fill="rgb(246,111,35)" fg:x="38068" fg:w="88"/><text x="90.1348%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (88 samples, 0.21%)</title><rect x="89.8848%" y="469" width="0.2078%" height="15" fill="rgb(209,88,53)" fg:x="38068" fg:w="88"/><text x="90.1348%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (836 samples, 1.97%)</title><rect x="88.1210%" y="661" width="1.9739%" height="15" fill="rgb(231,185,47)" fg:x="37321" fg:w="836"/><text x="88.3710%" y="671.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (836 samples, 1.97%)</title><rect x="88.1210%" y="645" width="1.9739%" height="15" fill="rgb(233,154,1)" fg:x="37321" fg:w="836"/><text x="88.3710%" y="655.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (836 samples, 1.97%)</title><rect x="88.1210%" y="629" width="1.9739%" height="15" fill="rgb(225,15,46)" fg:x="37321" fg:w="836"/><text x="88.3710%" y="639.50">t..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::sharded_list::ShardGuard&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt; (15 samples, 0.04%)</title><rect x="90.1351%" y="613" width="0.0354%" height="15" fill="rgb(211,135,41)" fg:x="38174" fg:w="15"/><text x="90.3851%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (15 samples, 0.04%)</title><rect x="90.1351%" y="597" width="0.0354%" height="15" fill="rgb(208,54,0)" fg:x="38174" fg:w="15"/><text x="90.3851%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.04%)</title><rect x="90.1351%" y="581" width="0.0354%" height="15" fill="rgb(244,136,14)" fg:x="38174" fg:w="15"/><text x="90.3851%" y="591.50"></text></g><g><title>std::sync::poison::Flag::done (15 samples, 0.04%)</title><rect x="90.1351%" y="565" width="0.0354%" height="15" fill="rgb(241,56,14)" fg:x="38174" fg:w="15"/><text x="90.3851%" y="575.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (20 samples, 0.05%)</title><rect x="90.1351%" y="629" width="0.0472%" height="15" fill="rgb(205,80,24)" fg:x="38174" fg:w="20"/><text x="90.3851%" y="639.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::sharded_list::ShardedListItem&gt;::get_shard_id (6 samples, 0.01%)</title><rect x="90.1823%" y="613" width="0.0142%" height="15" fill="rgb(220,57,4)" fg:x="38194" fg:w="6"/><text x="90.4323%" y="623.50"></text></g><g><title>tokio::runtime::task::core::Header::get_id (6 samples, 0.01%)</title><rect x="90.1823%" y="597" width="0.0142%" height="15" fill="rgb(226,193,50)" fg:x="38194" fg:w="6"/><text x="90.4323%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (45 samples, 0.11%)</title><rect x="90.2059%" y="549" width="0.1063%" height="15" fill="rgb(231,168,22)" fg:x="38204" fg:w="45"/><text x="90.4559%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (45 samples, 0.11%)</title><rect x="90.2059%" y="533" width="0.1063%" height="15" fill="rgb(254,215,14)" fg:x="38204" fg:w="45"/><text x="90.4559%" y="543.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (122 samples, 0.29%)</title><rect x="90.1185%" y="645" width="0.2881%" height="15" fill="rgb(211,115,16)" fg:x="38167" fg:w="122"/><text x="90.3685%" y="655.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (95 samples, 0.22%)</title><rect x="90.1823%" y="629" width="0.2243%" height="15" fill="rgb(236,210,16)" fg:x="38194" fg:w="95"/><text x="90.4323%" y="639.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (89 samples, 0.21%)</title><rect x="90.1964%" y="613" width="0.2101%" height="15" fill="rgb(221,94,12)" fg:x="38200" fg:w="89"/><text x="90.4464%" y="623.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (86 samples, 0.20%)</title><rect x="90.2035%" y="597" width="0.2031%" height="15" fill="rgb(235,218,49)" fg:x="38203" fg:w="86"/><text x="90.4535%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (86 samples, 0.20%)</title><rect x="90.2035%" y="581" width="0.2031%" height="15" fill="rgb(217,114,14)" fg:x="38203" fg:w="86"/><text x="90.4535%" y="591.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (85 samples, 0.20%)</title><rect x="90.2059%" y="565" width="0.2007%" height="15" fill="rgb(216,145,22)" fg:x="38204" fg:w="85"/><text x="90.4559%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (40 samples, 0.09%)</title><rect x="90.3121%" y="549" width="0.0944%" height="15" fill="rgb(217,112,39)" fg:x="38249" fg:w="40"/><text x="90.5621%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (40 samples, 0.09%)</title><rect x="90.3121%" y="533" width="0.0944%" height="15" fill="rgb(225,85,32)" fg:x="38249" fg:w="40"/><text x="90.5621%" y="543.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (61 samples, 0.14%)</title><rect x="90.4184%" y="597" width="0.1440%" height="15" fill="rgb(245,209,47)" fg:x="38294" fg:w="61"/><text x="90.6684%" y="607.50"></text></g><g><title>__GI___lll_lock_wake_private (13 samples, 0.03%)</title><rect x="90.5648%" y="581" width="0.0307%" height="15" fill="rgb(218,220,15)" fg:x="38356" fg:w="13"/><text x="90.8148%" y="591.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (26 samples, 0.06%)</title><rect x="90.5955%" y="581" width="0.0614%" height="15" fill="rgb(222,202,31)" fg:x="38369" fg:w="26"/><text x="90.8455%" y="591.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (7 samples, 0.02%)</title><rect x="90.6710%" y="469" width="0.0165%" height="15" fill="rgb(243,203,4)" fg:x="38401" fg:w="7"/><text x="90.9210%" y="479.50"></text></g><g><title>__GI___lll_lock_wait_private (94 samples, 0.22%)</title><rect x="90.7230%" y="421" width="0.2219%" height="15" fill="rgb(237,92,17)" fg:x="38423" fg:w="94"/><text x="90.9730%" y="431.50"></text></g><g><title>futex_wait (93 samples, 0.22%)</title><rect x="90.7253%" y="405" width="0.2196%" height="15" fill="rgb(231,119,7)" fg:x="38424" fg:w="93"/><text x="90.9753%" y="415.50"></text></g><g><title>[unknown] (93 samples, 0.22%)</title><rect x="90.7253%" y="389" width="0.2196%" height="15" fill="rgb(237,82,41)" fg:x="38424" fg:w="93"/><text x="90.9753%" y="399.50"></text></g><g><title>[unknown] (93 samples, 0.22%)</title><rect x="90.7253%" y="373" width="0.2196%" height="15" fill="rgb(226,81,48)" fg:x="38424" fg:w="93"/><text x="90.9753%" y="383.50"></text></g><g><title>[unknown] (91 samples, 0.21%)</title><rect x="90.7301%" y="357" width="0.2149%" height="15" fill="rgb(234,70,51)" fg:x="38426" fg:w="91"/><text x="90.9801%" y="367.50"></text></g><g><title>[unknown] (91 samples, 0.21%)</title><rect x="90.7301%" y="341" width="0.2149%" height="15" fill="rgb(251,86,4)" fg:x="38426" fg:w="91"/><text x="90.9801%" y="351.50"></text></g><g><title>[unknown] (90 samples, 0.21%)</title><rect x="90.7324%" y="325" width="0.2125%" height="15" fill="rgb(244,144,28)" fg:x="38427" fg:w="90"/><text x="90.9824%" y="335.50"></text></g><g><title>[unknown] (86 samples, 0.20%)</title><rect x="90.7419%" y="309" width="0.2031%" height="15" fill="rgb(232,161,39)" fg:x="38431" fg:w="86"/><text x="90.9919%" y="319.50"></text></g><g><title>[unknown] (79 samples, 0.19%)</title><rect x="90.7584%" y="293" width="0.1865%" height="15" fill="rgb(247,34,51)" fg:x="38438" fg:w="79"/><text x="91.0084%" y="303.50"></text></g><g><title>[unknown] (41 samples, 0.10%)</title><rect x="90.8481%" y="277" width="0.0968%" height="15" fill="rgb(225,132,2)" fg:x="38476" fg:w="41"/><text x="91.0981%" y="287.50"></text></g><g><title>[unknown] (38 samples, 0.09%)</title><rect x="90.8552%" y="261" width="0.0897%" height="15" fill="rgb(209,159,44)" fg:x="38479" fg:w="38"/><text x="91.1052%" y="271.50"></text></g><g><title>[unknown] (30 samples, 0.07%)</title><rect x="90.8741%" y="245" width="0.0708%" height="15" fill="rgb(251,214,1)" fg:x="38487" fg:w="30"/><text x="91.1241%" y="255.50"></text></g><g><title>[unknown] (26 samples, 0.06%)</title><rect x="90.8835%" y="229" width="0.0614%" height="15" fill="rgb(247,84,47)" fg:x="38491" fg:w="26"/><text x="91.1335%" y="239.50"></text></g><g><title>[unknown] (20 samples, 0.05%)</title><rect x="90.8977%" y="213" width="0.0472%" height="15" fill="rgb(240,111,43)" fg:x="38497" fg:w="20"/><text x="91.1477%" y="223.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="90.9190%" y="197" width="0.0260%" height="15" fill="rgb(215,214,35)" fg:x="38506" fg:w="11"/><text x="91.1690%" y="207.50"></text></g><g><title>__GI___lll_lock_wake_private (151 samples, 0.36%)</title><rect x="90.9449%" y="421" width="0.3565%" height="15" fill="rgb(248,207,23)" fg:x="38517" fg:w="151"/><text x="91.1949%" y="431.50"></text></g><g><title>[unknown] (140 samples, 0.33%)</title><rect x="90.9709%" y="405" width="0.3306%" height="15" fill="rgb(214,186,4)" fg:x="38528" fg:w="140"/><text x="91.2209%" y="415.50"></text></g><g><title>[unknown] (138 samples, 0.33%)</title><rect x="90.9756%" y="389" width="0.3258%" height="15" fill="rgb(220,133,22)" fg:x="38530" fg:w="138"/><text x="91.2256%" y="399.50"></text></g><g><title>[unknown] (133 samples, 0.31%)</title><rect x="90.9874%" y="373" width="0.3140%" height="15" fill="rgb(239,134,19)" fg:x="38535" fg:w="133"/><text x="91.2374%" y="383.50"></text></g><g><title>[unknown] (127 samples, 0.30%)</title><rect x="91.0016%" y="357" width="0.2999%" height="15" fill="rgb(250,140,9)" fg:x="38541" fg:w="127"/><text x="91.2516%" y="367.50"></text></g><g><title>[unknown] (123 samples, 0.29%)</title><rect x="91.0111%" y="341" width="0.2904%" height="15" fill="rgb(225,59,14)" fg:x="38545" fg:w="123"/><text x="91.2611%" y="351.50"></text></g><g><title>[unknown] (85 samples, 0.20%)</title><rect x="91.1008%" y="325" width="0.2007%" height="15" fill="rgb(214,152,51)" fg:x="38583" fg:w="85"/><text x="91.3508%" y="335.50"></text></g><g><title>[unknown] (75 samples, 0.18%)</title><rect x="91.1244%" y="309" width="0.1771%" height="15" fill="rgb(251,227,43)" fg:x="38593" fg:w="75"/><text x="91.3744%" y="319.50"></text></g><g><title>[unknown] (39 samples, 0.09%)</title><rect x="91.2094%" y="293" width="0.0921%" height="15" fill="rgb(241,96,17)" fg:x="38629" fg:w="39"/><text x="91.4594%" y="303.50"></text></g><g><title>[unknown] (25 samples, 0.06%)</title><rect x="91.2424%" y="277" width="0.0590%" height="15" fill="rgb(234,198,43)" fg:x="38643" fg:w="25"/><text x="91.4924%" y="287.50"></text></g><g><title>[unknown] (19 samples, 0.04%)</title><rect x="91.2566%" y="261" width="0.0449%" height="15" fill="rgb(220,108,29)" fg:x="38649" fg:w="19"/><text x="91.5066%" y="271.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="91.2802%" y="245" width="0.0213%" height="15" fill="rgb(226,163,33)" fg:x="38659" fg:w="9"/><text x="91.5302%" y="255.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="91.2826%" y="229" width="0.0189%" height="15" fill="rgb(205,194,45)" fg:x="38660" fg:w="8"/><text x="91.5326%" y="239.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="91.2826%" y="213" width="0.0189%" height="15" fill="rgb(206,143,44)" fg:x="38660" fg:w="8"/><text x="91.5326%" y="223.50"></text></g><g><title>_int_free (21 samples, 0.05%)</title><rect x="91.3204%" y="405" width="0.0496%" height="15" fill="rgb(236,136,36)" fg:x="38676" fg:w="21"/><text x="91.5704%" y="415.50"></text></g><g><title>[unknown] (117 samples, 0.28%)</title><rect x="91.5329%" y="373" width="0.2763%" height="15" fill="rgb(249,172,42)" fg:x="38766" fg:w="117"/><text x="91.7829%" y="383.50"></text></g><g><title>[unknown] (112 samples, 0.26%)</title><rect x="91.5447%" y="357" width="0.2645%" height="15" fill="rgb(216,139,23)" fg:x="38771" fg:w="112"/><text x="91.7947%" y="367.50"></text></g><g><title>[unknown] (108 samples, 0.26%)</title><rect x="91.5541%" y="341" width="0.2550%" height="15" fill="rgb(207,166,20)" fg:x="38775" fg:w="108"/><text x="91.8041%" y="351.50"></text></g><g><title>[unknown] (104 samples, 0.25%)</title><rect x="91.5636%" y="325" width="0.2456%" height="15" fill="rgb(210,209,22)" fg:x="38779" fg:w="104"/><text x="91.8136%" y="335.50"></text></g><g><title>[unknown] (101 samples, 0.24%)</title><rect x="91.5706%" y="309" width="0.2385%" height="15" fill="rgb(232,118,20)" fg:x="38782" fg:w="101"/><text x="91.8206%" y="319.50"></text></g><g><title>[unknown] (94 samples, 0.22%)</title><rect x="91.5872%" y="293" width="0.2219%" height="15" fill="rgb(238,113,42)" fg:x="38789" fg:w="94"/><text x="91.8372%" y="303.50"></text></g><g><title>[unknown] (88 samples, 0.21%)</title><rect x="91.6013%" y="277" width="0.2078%" height="15" fill="rgb(231,42,5)" fg:x="38795" fg:w="88"/><text x="91.8513%" y="287.50"></text></g><g><title>[unknown] (80 samples, 0.19%)</title><rect x="91.6202%" y="261" width="0.1889%" height="15" fill="rgb(243,166,24)" fg:x="38803" fg:w="80"/><text x="91.8702%" y="271.50"></text></g><g><title>[unknown] (72 samples, 0.17%)</title><rect x="91.6391%" y="245" width="0.1700%" height="15" fill="rgb(237,226,12)" fg:x="38811" fg:w="72"/><text x="91.8891%" y="255.50"></text></g><g><title>[unknown] (55 samples, 0.13%)</title><rect x="91.6793%" y="229" width="0.1299%" height="15" fill="rgb(229,133,24)" fg:x="38828" fg:w="55"/><text x="91.9293%" y="239.50"></text></g><g><title>[unknown] (43 samples, 0.10%)</title><rect x="91.7076%" y="213" width="0.1015%" height="15" fill="rgb(238,33,43)" fg:x="38840" fg:w="43"/><text x="91.9576%" y="223.50"></text></g><g><title>[unknown] (30 samples, 0.07%)</title><rect x="91.7383%" y="197" width="0.0708%" height="15" fill="rgb(227,59,38)" fg:x="38853" fg:w="30"/><text x="91.9883%" y="207.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="91.7879%" y="181" width="0.0213%" height="15" fill="rgb(230,97,0)" fg:x="38874" fg:w="9"/><text x="92.0379%" y="191.50"></text></g><g><title>sysmalloc (326 samples, 0.77%)</title><rect x="91.5140%" y="389" width="0.7697%" height="15" fill="rgb(250,173,50)" fg:x="38758" fg:w="326"/><text x="91.7640%" y="399.50"></text></g><g><title>grow_heap (201 samples, 0.47%)</title><rect x="91.8091%" y="373" width="0.4746%" height="15" fill="rgb(240,15,50)" fg:x="38883" fg:w="201"/><text x="92.0591%" y="383.50"></text></g><g><title>__GI_mprotect (200 samples, 0.47%)</title><rect x="91.8115%" y="357" width="0.4722%" height="15" fill="rgb(221,93,22)" fg:x="38884" fg:w="200"/><text x="92.0615%" y="367.50"></text></g><g><title>[unknown] (198 samples, 0.47%)</title><rect x="91.8162%" y="341" width="0.4675%" height="15" fill="rgb(245,180,53)" fg:x="38886" fg:w="198"/><text x="92.0662%" y="351.50"></text></g><g><title>[unknown] (195 samples, 0.46%)</title><rect x="91.8233%" y="325" width="0.4604%" height="15" fill="rgb(231,88,51)" fg:x="38889" fg:w="195"/><text x="92.0733%" y="335.50"></text></g><g><title>[unknown] (192 samples, 0.45%)</title><rect x="91.8304%" y="309" width="0.4533%" height="15" fill="rgb(240,58,21)" fg:x="38892" fg:w="192"/><text x="92.0804%" y="319.50"></text></g><g><title>[unknown] (192 samples, 0.45%)</title><rect x="91.8304%" y="293" width="0.4533%" height="15" fill="rgb(237,21,10)" fg:x="38892" fg:w="192"/><text x="92.0804%" y="303.50"></text></g><g><title>[unknown] (187 samples, 0.44%)</title><rect x="91.8422%" y="277" width="0.4415%" height="15" fill="rgb(218,43,11)" fg:x="38897" fg:w="187"/><text x="92.0922%" y="287.50"></text></g><g><title>[unknown] (178 samples, 0.42%)</title><rect x="91.8634%" y="261" width="0.4203%" height="15" fill="rgb(218,221,29)" fg:x="38906" fg:w="178"/><text x="92.1134%" y="271.50"></text></g><g><title>[unknown] (162 samples, 0.38%)</title><rect x="91.9012%" y="245" width="0.3825%" height="15" fill="rgb(214,118,42)" fg:x="38922" fg:w="162"/><text x="92.1512%" y="255.50"></text></g><g><title>[unknown] (139 samples, 0.33%)</title><rect x="91.9555%" y="229" width="0.3282%" height="15" fill="rgb(251,200,26)" fg:x="38945" fg:w="139"/><text x="92.2055%" y="239.50"></text></g><g><title>[unknown] (120 samples, 0.28%)</title><rect x="92.0004%" y="213" width="0.2833%" height="15" fill="rgb(237,101,39)" fg:x="38964" fg:w="120"/><text x="92.2504%" y="223.50"></text></g><g><title>[unknown] (91 samples, 0.21%)</title><rect x="92.0689%" y="197" width="0.2149%" height="15" fill="rgb(251,117,11)" fg:x="38993" fg:w="91"/><text x="92.3189%" y="207.50"></text></g><g><title>[unknown] (62 samples, 0.15%)</title><rect x="92.1373%" y="181" width="0.1464%" height="15" fill="rgb(216,223,23)" fg:x="39022" fg:w="62"/><text x="92.3873%" y="191.50"></text></g><g><title>[unknown] (34 samples, 0.08%)</title><rect x="92.2034%" y="165" width="0.0803%" height="15" fill="rgb(251,54,12)" fg:x="39050" fg:w="34"/><text x="92.4534%" y="175.50"></text></g><g><title>[unknown] (13 samples, 0.03%)</title><rect x="92.2530%" y="149" width="0.0307%" height="15" fill="rgb(254,176,54)" fg:x="39071" fg:w="13"/><text x="92.5030%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,857 samples, 4.38%)</title><rect x="87.9179%" y="741" width="4.3847%" height="15" fill="rgb(210,32,8)" fg:x="37235" fg:w="1857"/><text x="88.1679%" y="751.50">core:..</text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (1,857 samples, 4.38%)</title><rect x="87.9179%" y="725" width="4.3847%" height="15" fill="rgb(235,52,38)" fg:x="37235" fg:w="1857"/><text x="88.1679%" y="735.50">tokio..</text></g><g><title>tokio::runtime::scheduler::Handle::spawn (1,857 samples, 4.38%)</title><rect x="87.9179%" y="709" width="4.3847%" height="15" fill="rgb(231,4,44)" fg:x="37235" fg:w="1857"/><text x="88.1679%" y="719.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (1,857 samples, 4.38%)</title><rect x="87.9179%" y="693" width="4.3847%" height="15" fill="rgb(249,2,32)" fg:x="37235" fg:w="1857"/><text x="88.1679%" y="703.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (1,856 samples, 4.38%)</title><rect x="87.9203%" y="677" width="4.3823%" height="15" fill="rgb(224,65,26)" fg:x="37236" fg:w="1856"/><text x="88.1703%" y="687.50">tokio..</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (935 samples, 2.21%)</title><rect x="90.0949%" y="661" width="2.2077%" height="15" fill="rgb(250,73,40)" fg:x="38157" fg:w="935"/><text x="90.3449%" y="671.50">t..</text></g><g><title>tokio::runtime::task::new_task (803 samples, 1.90%)</title><rect x="90.4066%" y="645" width="1.8960%" height="15" fill="rgb(253,177,16)" fg:x="38289" fg:w="803"/><text x="90.6566%" y="655.50">t..</text></g><g><title>tokio::runtime::task::raw::RawTask::new (803 samples, 1.90%)</title><rect x="90.4066%" y="629" width="1.8960%" height="15" fill="rgb(217,32,34)" fg:x="38289" fg:w="803"/><text x="90.6566%" y="639.50">t..</text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (803 samples, 1.90%)</title><rect x="90.4066%" y="613" width="1.8960%" height="15" fill="rgb(212,7,10)" fg:x="38289" fg:w="803"/><text x="90.6566%" y="623.50">t..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (737 samples, 1.74%)</title><rect x="90.5624%" y="597" width="1.7402%" height="15" fill="rgb(245,89,8)" fg:x="38355" fg:w="737"/><text x="90.8124%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (697 samples, 1.65%)</title><rect x="90.6569%" y="581" width="1.6457%" height="15" fill="rgb(237,16,53)" fg:x="38395" fg:w="697"/><text x="90.9069%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (693 samples, 1.64%)</title><rect x="90.6663%" y="565" width="1.6363%" height="15" fill="rgb(250,204,30)" fg:x="38399" fg:w="693"/><text x="90.9163%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (693 samples, 1.64%)</title><rect x="90.6663%" y="549" width="1.6363%" height="15" fill="rgb(208,77,27)" fg:x="38399" fg:w="693"/><text x="90.9163%" y="559.50"></text></g><g><title>alloc::alloc::alloc (693 samples, 1.64%)</title><rect x="90.6663%" y="533" width="1.6363%" height="15" fill="rgb(250,204,28)" fg:x="38399" fg:w="693"/><text x="90.9163%" y="543.50"></text></g><g><title>__rdl_alloc (693 samples, 1.64%)</title><rect x="90.6663%" y="517" width="1.6363%" height="15" fill="rgb(244,63,21)" fg:x="38399" fg:w="693"/><text x="90.9163%" y="527.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (693 samples, 1.64%)</title><rect x="90.6663%" y="501" width="1.6363%" height="15" fill="rgb(236,85,44)" fg:x="38399" fg:w="693"/><text x="90.9163%" y="511.50"></text></g><g><title>std::sys::pal::unix::alloc::aligned_malloc (693 samples, 1.64%)</title><rect x="90.6663%" y="485" width="1.6363%" height="15" fill="rgb(215,98,4)" fg:x="38399" fg:w="693"/><text x="90.9163%" y="495.50"></text></g><g><title>__posix_memalign (684 samples, 1.62%)</title><rect x="90.6876%" y="469" width="1.6150%" height="15" fill="rgb(235,38,11)" fg:x="38408" fg:w="684"/><text x="90.9376%" y="479.50"></text></g><g><title>__posix_memalign (683 samples, 1.61%)</title><rect x="90.6899%" y="453" width="1.6127%" height="15" fill="rgb(254,186,25)" fg:x="38409" fg:w="683"/><text x="90.9399%" y="463.50"></text></g><g><title>_mid_memalign (683 samples, 1.61%)</title><rect x="90.6899%" y="437" width="1.6127%" height="15" fill="rgb(225,55,31)" fg:x="38409" fg:w="683"/><text x="90.9399%" y="447.50"></text></g><g><title>_int_memalign (423 samples, 1.00%)</title><rect x="91.3038%" y="421" width="0.9988%" height="15" fill="rgb(211,15,21)" fg:x="38669" fg:w="423"/><text x="91.5538%" y="431.50"></text></g><g><title>_int_malloc (395 samples, 0.93%)</title><rect x="91.3699%" y="405" width="0.9327%" height="15" fill="rgb(215,187,41)" fg:x="38697" fg:w="395"/><text x="91.6199%" y="415.50"></text></g><g><title>unlink_chunk (8 samples, 0.02%)</title><rect x="92.2837%" y="389" width="0.0189%" height="15" fill="rgb(248,69,32)" fg:x="39084" fg:w="8"/><text x="92.5337%" y="399.50"></text></g><g><title>tokio::runtime::context::current::with_current (2,163 samples, 5.11%)</title><rect x="87.2001%" y="789" width="5.1072%" height="15" fill="rgb(252,102,52)" fg:x="36931" fg:w="2163"/><text x="87.4501%" y="799.50">tokio:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,163 samples, 5.11%)</title><rect x="87.2001%" y="773" width="5.1072%" height="15" fill="rgb(253,140,32)" fg:x="36931" fg:w="2163"/><text x="87.4501%" y="783.50">std::t..</text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (2,128 samples, 5.02%)</title><rect x="87.2828%" y="757" width="5.0246%" height="15" fill="rgb(216,56,42)" fg:x="36966" fg:w="2128"/><text x="87.5328%" y="767.50">tokio:..</text></g><g><title>tokio::task::spawn::spawn (2,169 samples, 5.12%)</title><rect x="87.1907%" y="821" width="5.1214%" height="15" fill="rgb(216,184,14)" fg:x="36927" fg:w="2169"/><text x="87.4407%" y="831.50">tokio:..</text></g><g><title>tokio::task::spawn::spawn_inner (2,169 samples, 5.12%)</title><rect x="87.1907%" y="805" width="5.1214%" height="15" fill="rgb(237,187,27)" fg:x="36927" fg:w="2169"/><text x="87.4407%" y="815.50">tokio:..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (19,388 samples, 45.78%)</title><rect x="46.5456%" y="901" width="45.7782%" height="15" fill="rgb(219,65,3)" fg:x="19713" fg:w="19388"/><text x="46.7956%" y="911.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (19,388 samples, 45.78%)</title><rect x="46.5456%" y="885" width="45.7782%" height="15" fill="rgb(245,83,25)" fg:x="19713" fg:w="19388"/><text x="46.7956%" y="895.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_with_graceful_shutdown::{{closure}}::{{closure}} (5,501 samples, 12.99%)</title><rect x="79.3351%" y="869" width="12.9888%" height="15" fill="rgb(214,205,45)" fg:x="33600" fg:w="5501"/><text x="79.5851%" y="879.50">torrust_tracker::ser..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_udp_server::{{closure}} (5,501 samples, 12.99%)</title><rect x="79.3351%" y="853" width="12.9888%" height="15" fill="rgb(241,20,18)" fg:x="33600" fg:w="5501"/><text x="79.5851%" y="863.50">torrust_tracker::ser..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::spawn_request_processor (2,174 samples, 5.13%)</title><rect x="87.1907%" y="837" width="5.1332%" height="15" fill="rgb(232,163,23)" fg:x="36927" fg:w="2174"/><text x="87.4407%" y="847.50">torrus..</text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_request (5 samples, 0.01%)</title><rect x="92.3121%" y="821" width="0.0118%" height="15" fill="rgb(214,5,46)" fg:x="39096" fg:w="5"/><text x="92.5621%" y="831.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (5 samples, 0.01%)</title><rect x="92.3286%" y="869" width="0.0118%" height="15" fill="rgb(229,78,17)" fg:x="39103" fg:w="5"/><text x="92.5786%" y="879.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (212 samples, 0.50%)</title><rect x="92.3451%" y="837" width="0.5006%" height="15" fill="rgb(248,89,10)" fg:x="39110" fg:w="212"/><text x="92.5951%" y="847.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (217 samples, 0.51%)</title><rect x="92.3404%" y="869" width="0.5124%" height="15" fill="rgb(248,54,15)" fg:x="39108" fg:w="217"/><text x="92.5904%" y="879.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (217 samples, 0.51%)</title><rect x="92.3404%" y="853" width="0.5124%" height="15" fill="rgb(223,116,6)" fg:x="39108" fg:w="217"/><text x="92.5904%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (19,613 samples, 46.31%)</title><rect x="46.5456%" y="917" width="46.3095%" height="15" fill="rgb(205,125,38)" fg:x="19713" fg:w="19613"/><text x="46.7956%" y="927.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (225 samples, 0.53%)</title><rect x="92.3239%" y="901" width="0.5313%" height="15" fill="rgb(251,78,38)" fg:x="39101" fg:w="225"/><text x="92.5739%" y="911.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (225 samples, 0.53%)</title><rect x="92.3239%" y="885" width="0.5313%" height="15" fill="rgb(253,78,28)" fg:x="39101" fg:w="225"/><text x="92.5739%" y="895.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (103 samples, 0.24%)</title><rect x="92.8575%" y="885" width="0.2432%" height="15" fill="rgb(209,120,3)" fg:x="39327" fg:w="103"/><text x="93.1075%" y="895.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (170 samples, 0.40%)</title><rect x="93.1030%" y="853" width="0.4014%" height="15" fill="rgb(238,229,9)" fg:x="39431" fg:w="170"/><text x="93.3530%" y="863.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (176 samples, 0.42%)</title><rect x="93.1007%" y="885" width="0.4156%" height="15" fill="rgb(253,159,18)" fg:x="39430" fg:w="176"/><text x="93.3507%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (175 samples, 0.41%)</title><rect x="93.1030%" y="869" width="0.4132%" height="15" fill="rgb(244,42,34)" fg:x="39431" fg:w="175"/><text x="93.3530%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (19,897 samples, 46.98%)</title><rect x="46.5456%" y="1013" width="46.9801%" height="15" fill="rgb(224,8,7)" fg:x="19713" fg:w="19897"/><text x="46.7956%" y="1023.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (19,897 samples, 46.98%)</title><rect x="46.5456%" y="997" width="46.9801%" height="15" fill="rgb(210,201,45)" fg:x="19713" fg:w="19897"/><text x="46.7956%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (19,897 samples, 46.98%)</title><rect x="46.5456%" y="981" width="46.9801%" height="15" fill="rgb(252,185,21)" fg:x="19713" fg:w="19897"/><text x="46.7956%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (19,897 samples, 46.98%)</title><rect x="46.5456%" y="965" width="46.9801%" height="15" fill="rgb(223,131,1)" fg:x="19713" fg:w="19897"/><text x="46.7956%" y="975.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19,897 samples, 46.98%)</title><rect x="46.5456%" y="949" width="46.9801%" height="15" fill="rgb(245,141,16)" fg:x="19713" fg:w="19897"/><text x="46.7956%" y="959.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (19,897 samples, 46.98%)</title><rect x="46.5456%" y="933" width="46.9801%" height="15" fill="rgb(229,55,45)" fg:x="19713" fg:w="19897"/><text x="46.7956%" y="943.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (284 samples, 0.67%)</title><rect x="92.8551%" y="917" width="0.6706%" height="15" fill="rgb(208,92,15)" fg:x="39326" fg:w="284"/><text x="93.1051%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (283 samples, 0.67%)</title><rect x="92.8575%" y="901" width="0.6682%" height="15" fill="rgb(234,185,47)" fg:x="39327" fg:w="283"/><text x="93.1075%" y="911.50"></text></g><g><title>tokio::runtime::coop::budget (20,267 samples, 47.85%)</title><rect x="45.7570%" y="1141" width="47.8537%" height="15" fill="rgb(253,104,50)" fg:x="19379" fg:w="20267"/><text x="46.0070%" y="1151.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (20,267 samples, 47.85%)</title><rect x="45.7570%" y="1125" width="47.8537%" height="15" fill="rgb(205,70,7)" fg:x="19379" fg:w="20267"/><text x="46.0070%" y="1135.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (20,263 samples, 47.84%)</title><rect x="45.7664%" y="1109" width="47.8443%" height="15" fill="rgb(240,178,43)" fg:x="19383" fg:w="20263"/><text x="46.0164%" y="1119.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (20,262 samples, 47.84%)</title><rect x="45.7688%" y="1093" width="47.8419%" height="15" fill="rgb(214,112,2)" fg:x="19384" fg:w="20262"/><text x="46.0188%" y="1103.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (20,262 samples, 47.84%)</title><rect x="45.7688%" y="1077" width="47.8419%" height="15" fill="rgb(206,46,17)" fg:x="19384" fg:w="20262"/><text x="46.0188%" y="1087.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (20,196 samples, 47.69%)</title><rect x="45.9246%" y="1061" width="47.6861%" height="15" fill="rgb(225,220,16)" fg:x="19450" fg:w="20196"/><text x="46.1746%" y="1071.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (20,187 samples, 47.66%)</title><rect x="45.9459%" y="1045" width="47.6648%" height="15" fill="rgb(238,65,40)" fg:x="19459" fg:w="20187"/><text x="46.1959%" y="1055.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (19,945 samples, 47.09%)</title><rect x="46.5173%" y="1029" width="47.0934%" height="15" fill="rgb(230,151,21)" fg:x="19701" fg:w="19945"/><text x="46.7673%" y="1039.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (36 samples, 0.09%)</title><rect x="93.5257%" y="1013" width="0.0850%" height="15" fill="rgb(218,58,49)" fg:x="39610" fg:w="36"/><text x="93.7757%" y="1023.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (36 samples, 0.09%)</title><rect x="93.5257%" y="997" width="0.0850%" height="15" fill="rgb(219,179,14)" fg:x="39610" fg:w="36"/><text x="93.7757%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (9 samples, 0.02%)</title><rect x="93.6107%" y="1141" width="0.0213%" height="15" fill="rgb(223,72,1)" fg:x="39646" fg:w="9"/><text x="93.8607%" y="1151.50"></text></g><g><title>syscall (665 samples, 1.57%)</title><rect x="93.6319%" y="1093" width="1.5702%" height="15" fill="rgb(238,126,10)" fg:x="39655" fg:w="665"/><text x="93.8819%" y="1103.50"></text></g><g><title>[unknown] (643 samples, 1.52%)</title><rect x="93.6839%" y="1077" width="1.5182%" height="15" fill="rgb(224,206,38)" fg:x="39677" fg:w="643"/><text x="93.9339%" y="1087.50"></text></g><g><title>[unknown] (638 samples, 1.51%)</title><rect x="93.6957%" y="1061" width="1.5064%" height="15" fill="rgb(212,201,54)" fg:x="39682" fg:w="638"/><text x="93.9457%" y="1071.50"></text></g><g><title>[unknown] (583 samples, 1.38%)</title><rect x="93.8256%" y="1045" width="1.3766%" height="15" fill="rgb(218,154,48)" fg:x="39737" fg:w="583"/><text x="94.0756%" y="1055.50"></text></g><g><title>[unknown] (558 samples, 1.32%)</title><rect x="93.8846%" y="1029" width="1.3175%" height="15" fill="rgb(232,93,24)" fg:x="39762" fg:w="558"/><text x="94.1346%" y="1039.50"></text></g><g><title>[unknown] (537 samples, 1.27%)</title><rect x="93.9342%" y="1013" width="1.2679%" height="15" fill="rgb(245,30,21)" fg:x="39783" fg:w="537"/><text x="94.1842%" y="1023.50"></text></g><g><title>[unknown] (435 samples, 1.03%)</title><rect x="94.1750%" y="997" width="1.0271%" height="15" fill="rgb(242,148,29)" fg:x="39885" fg:w="435"/><text x="94.4250%" y="1007.50"></text></g><g><title>[unknown] (392 samples, 0.93%)</title><rect x="94.2765%" y="981" width="0.9256%" height="15" fill="rgb(244,153,54)" fg:x="39928" fg:w="392"/><text x="94.5265%" y="991.50"></text></g><g><title>[unknown] (332 samples, 0.78%)</title><rect x="94.4182%" y="965" width="0.7839%" height="15" fill="rgb(252,87,22)" fg:x="39988" fg:w="332"/><text x="94.6682%" y="975.50"></text></g><g><title>[unknown] (205 samples, 0.48%)</title><rect x="94.7181%" y="949" width="0.4840%" height="15" fill="rgb(210,51,29)" fg:x="40115" fg:w="205"/><text x="94.9681%" y="959.50"></text></g><g><title>[unknown] (110 samples, 0.26%)</title><rect x="94.9424%" y="933" width="0.2597%" height="15" fill="rgb(242,136,47)" fg:x="40210" fg:w="110"/><text x="95.1924%" y="943.50"></text></g><g><title>[unknown] (21 samples, 0.05%)</title><rect x="95.1525%" y="917" width="0.0496%" height="15" fill="rgb(238,68,4)" fg:x="40299" fg:w="21"/><text x="95.4025%" y="927.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="95.1856%" y="901" width="0.0165%" height="15" fill="rgb(242,161,30)" fg:x="40313" fg:w="7"/><text x="95.4356%" y="911.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="95.1856%" y="885" width="0.0165%" height="15" fill="rgb(218,58,44)" fg:x="40313" fg:w="7"/><text x="95.4356%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (9 samples, 0.02%)</title><rect x="95.2021%" y="1077" width="0.0213%" height="15" fill="rgb(252,125,32)" fg:x="40320" fg:w="9"/><text x="95.4521%" y="1087.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.03%)</title><rect x="95.2257%" y="1077" width="0.0260%" height="15" fill="rgb(219,178,0)" fg:x="40330" fg:w="11"/><text x="95.4757%" y="1087.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.02%)</title><rect x="95.2281%" y="1061" width="0.0236%" height="15" fill="rgb(213,152,7)" fg:x="40331" fg:w="10"/><text x="95.4781%" y="1071.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (7 samples, 0.02%)</title><rect x="95.2352%" y="1045" width="0.0165%" height="15" fill="rgb(249,109,34)" fg:x="40334" fg:w="7"/><text x="95.4852%" y="1055.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (5 samples, 0.01%)</title><rect x="95.2399%" y="1029" width="0.0118%" height="15" fill="rgb(232,96,21)" fg:x="40336" fg:w="5"/><text x="95.4899%" y="1039.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (5 samples, 0.01%)</title><rect x="95.2399%" y="1013" width="0.0118%" height="15" fill="rgb(228,27,39)" fg:x="40336" fg:w="5"/><text x="95.4899%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (132 samples, 0.31%)</title><rect x="95.2517%" y="1077" width="0.3117%" height="15" fill="rgb(211,182,52)" fg:x="40341" fg:w="132"/><text x="95.5017%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (132 samples, 0.31%)</title><rect x="95.2517%" y="1061" width="0.3117%" height="15" fill="rgb(234,178,38)" fg:x="40341" fg:w="132"/><text x="95.5017%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (132 samples, 0.31%)</title><rect x="95.2517%" y="1045" width="0.3117%" height="15" fill="rgb(221,111,3)" fg:x="40341" fg:w="132"/><text x="95.5017%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (154 samples, 0.36%)</title><rect x="95.2021%" y="1093" width="0.3636%" height="15" fill="rgb(228,175,21)" fg:x="40320" fg:w="154"/><text x="95.4521%" y="1103.50"></text></g><g><title>[unknown] (231 samples, 0.55%)</title><rect x="95.6012%" y="885" width="0.5454%" height="15" fill="rgb(228,174,43)" fg:x="40489" fg:w="231"/><text x="95.8512%" y="895.50"></text></g><g><title>[unknown] (228 samples, 0.54%)</title><rect x="95.6082%" y="869" width="0.5383%" height="15" fill="rgb(211,191,0)" fg:x="40492" fg:w="228"/><text x="95.8582%" y="879.50"></text></g><g><title>[unknown] (218 samples, 0.51%)</title><rect x="95.6318%" y="853" width="0.5147%" height="15" fill="rgb(253,117,3)" fg:x="40502" fg:w="218"/><text x="95.8818%" y="863.50"></text></g><g><title>[unknown] (215 samples, 0.51%)</title><rect x="95.6389%" y="837" width="0.5077%" height="15" fill="rgb(241,127,19)" fg:x="40505" fg:w="215"/><text x="95.8889%" y="847.50"></text></g><g><title>[unknown] (197 samples, 0.47%)</title><rect x="95.6814%" y="821" width="0.4651%" height="15" fill="rgb(218,103,12)" fg:x="40523" fg:w="197"/><text x="95.9314%" y="831.50"></text></g><g><title>[unknown] (192 samples, 0.45%)</title><rect x="95.6932%" y="805" width="0.4533%" height="15" fill="rgb(236,214,43)" fg:x="40528" fg:w="192"/><text x="95.9432%" y="815.50"></text></g><g><title>[unknown] (163 samples, 0.38%)</title><rect x="95.7617%" y="789" width="0.3849%" height="15" fill="rgb(244,144,19)" fg:x="40557" fg:w="163"/><text x="96.0117%" y="799.50"></text></g><g><title>[unknown] (99 samples, 0.23%)</title><rect x="95.9128%" y="773" width="0.2338%" height="15" fill="rgb(246,188,10)" fg:x="40621" fg:w="99"/><text x="96.1628%" y="783.50"></text></g><g><title>[unknown] (92 samples, 0.22%)</title><rect x="95.9294%" y="757" width="0.2172%" height="15" fill="rgb(212,193,33)" fg:x="40628" fg:w="92"/><text x="96.1794%" y="767.50"></text></g><g><title>[unknown] (73 samples, 0.17%)</title><rect x="95.9742%" y="741" width="0.1724%" height="15" fill="rgb(241,51,29)" fg:x="40647" fg:w="73"/><text x="96.2242%" y="751.50"></text></g><g><title>[unknown] (67 samples, 0.16%)</title><rect x="95.9884%" y="725" width="0.1582%" height="15" fill="rgb(211,58,19)" fg:x="40653" fg:w="67"/><text x="96.2384%" y="735.50"></text></g><g><title>[unknown] (35 samples, 0.08%)</title><rect x="96.0639%" y="709" width="0.0826%" height="15" fill="rgb(229,111,26)" fg:x="40685" fg:w="35"/><text x="96.3139%" y="719.50"></text></g><g><title>[unknown] (31 samples, 0.07%)</title><rect x="96.0734%" y="693" width="0.0732%" height="15" fill="rgb(213,115,40)" fg:x="40689" fg:w="31"/><text x="96.3234%" y="703.50"></text></g><g><title>[unknown] (22 samples, 0.05%)</title><rect x="96.0946%" y="677" width="0.0519%" height="15" fill="rgb(209,56,44)" fg:x="40698" fg:w="22"/><text x="96.3446%" y="687.50"></text></g><g><title>[unknown] (16 samples, 0.04%)</title><rect x="96.1088%" y="661" width="0.0378%" height="15" fill="rgb(230,108,32)" fg:x="40704" fg:w="16"/><text x="96.3588%" y="671.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="96.1230%" y="645" width="0.0236%" height="15" fill="rgb(216,165,31)" fg:x="40710" fg:w="10"/><text x="96.3730%" y="655.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="96.1277%" y="629" width="0.0189%" height="15" fill="rgb(218,122,21)" fg:x="40712" fg:w="8"/><text x="96.3777%" y="639.50"></text></g><g><title>__GI___libc_write (245 samples, 0.58%)</title><rect x="95.5728%" y="917" width="0.5785%" height="15" fill="rgb(223,224,47)" fg:x="40477" fg:w="245"/><text x="95.8228%" y="927.50"></text></g><g><title>__GI___libc_write (245 samples, 0.58%)</title><rect x="95.5728%" y="901" width="0.5785%" height="15" fill="rgb(238,102,44)" fg:x="40477" fg:w="245"/><text x="95.8228%" y="911.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (246 samples, 0.58%)</title><rect x="95.5728%" y="981" width="0.5808%" height="15" fill="rgb(236,46,40)" fg:x="40477" fg:w="246"/><text x="95.8228%" y="991.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (246 samples, 0.58%)</title><rect x="95.5728%" y="965" width="0.5808%" height="15" fill="rgb(247,202,50)" fg:x="40477" fg:w="246"/><text x="95.8228%" y="975.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (246 samples, 0.58%)</title><rect x="95.5728%" y="949" width="0.5808%" height="15" fill="rgb(209,99,20)" fg:x="40477" fg:w="246"/><text x="95.8228%" y="959.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (246 samples, 0.58%)</title><rect x="95.5728%" y="933" width="0.5808%" height="15" fill="rgb(252,27,34)" fg:x="40477" fg:w="246"/><text x="95.8228%" y="943.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (264 samples, 0.62%)</title><rect x="95.5705%" y="1061" width="0.6233%" height="15" fill="rgb(215,206,23)" fg:x="40476" fg:w="264"/><text x="95.8205%" y="1071.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (264 samples, 0.62%)</title><rect x="95.5705%" y="1045" width="0.6233%" height="15" fill="rgb(212,135,36)" fg:x="40476" fg:w="264"/><text x="95.8205%" y="1055.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (264 samples, 0.62%)</title><rect x="95.5705%" y="1029" width="0.6233%" height="15" fill="rgb(240,189,1)" fg:x="40476" fg:w="264"/><text x="95.8205%" y="1039.50"></text></g><g><title>mio::waker::Waker::wake (263 samples, 0.62%)</title><rect x="95.5728%" y="1013" width="0.6210%" height="15" fill="rgb(242,56,20)" fg:x="40477" fg:w="263"/><text x="95.8228%" y="1023.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (263 samples, 0.62%)</title><rect x="95.5728%" y="997" width="0.6210%" height="15" fill="rgb(247,132,33)" fg:x="40477" fg:w="263"/><text x="95.8228%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (17 samples, 0.04%)</title><rect x="96.1537%" y="981" width="0.0401%" height="15" fill="rgb(208,149,11)" fg:x="40723" fg:w="17"/><text x="96.4037%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (17 samples, 0.04%)</title><rect x="96.1537%" y="965" width="0.0401%" height="15" fill="rgb(211,33,11)" fg:x="40723" fg:w="17"/><text x="96.4037%" y="975.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (17 samples, 0.04%)</title><rect x="96.1537%" y="949" width="0.0401%" height="15" fill="rgb(221,29,38)" fg:x="40723" fg:w="17"/><text x="96.4037%" y="959.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (17 samples, 0.04%)</title><rect x="96.1537%" y="933" width="0.0401%" height="15" fill="rgb(206,182,49)" fg:x="40723" fg:w="17"/><text x="96.4037%" y="943.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="96.1584%" y="917" width="0.0354%" height="15" fill="rgb(216,140,1)" fg:x="40725" fg:w="15"/><text x="96.4084%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (21,372 samples, 50.46%)</title><rect x="45.7357%" y="1157" width="50.4628%" height="15" fill="rgb(232,57,40)" fg:x="19370" fg:w="21372"/><text x="45.9857%" y="1167.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (1,087 samples, 2.57%)</title><rect x="93.6319%" y="1141" width="2.5666%" height="15" fill="rgb(224,186,18)" fg:x="39655" fg:w="1087"/><text x="93.8819%" y="1151.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (1,087 samples, 2.57%)</title><rect x="93.6319%" y="1125" width="2.5666%" height="15" fill="rgb(215,121,11)" fg:x="39655" fg:w="1087"/><text x="93.8819%" y="1135.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (1,087 samples, 2.57%)</title><rect x="93.6319%" y="1109" width="2.5666%" height="15" fill="rgb(245,147,10)" fg:x="39655" fg:w="1087"/><text x="93.8819%" y="1119.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (268 samples, 0.63%)</title><rect x="95.5657%" y="1093" width="0.6328%" height="15" fill="rgb(238,153,13)" fg:x="40474" fg:w="268"/><text x="95.8157%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (267 samples, 0.63%)</title><rect x="95.5681%" y="1077" width="0.6304%" height="15" fill="rgb(233,108,0)" fg:x="40475" fg:w="267"/><text x="95.8181%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (8 samples, 0.02%)</title><rect x="96.2127%" y="1125" width="0.0189%" height="15" fill="rgb(212,157,17)" fg:x="40748" fg:w="8"/><text x="96.4627%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::{{closure}} (8 samples, 0.02%)</title><rect x="96.2127%" y="1109" width="0.0189%" height="15" fill="rgb(225,213,38)" fg:x="40748" fg:w="8"/><text x="96.4627%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (8 samples, 0.02%)</title><rect x="96.2127%" y="1093" width="0.0189%" height="15" fill="rgb(248,16,11)" fg:x="40748" fg:w="8"/><text x="96.4627%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (9 samples, 0.02%)</title><rect x="96.2127%" y="1141" width="0.0213%" height="15" fill="rgb(241,33,4)" fg:x="40748" fg:w="9"/><text x="96.4627%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (19 samples, 0.04%)</title><rect x="96.1985%" y="1157" width="0.0449%" height="15" fill="rgb(222,26,43)" fg:x="40742" fg:w="19"/><text x="96.4485%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.04%)</title><rect x="97.1241%" y="1141" width="0.0401%" height="15" fill="rgb(243,29,36)" fg:x="41134" fg:w="17"/><text x="97.3741%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (17 samples, 0.04%)</title><rect x="97.1241%" y="1125" width="0.0401%" height="15" fill="rgb(241,9,27)" fg:x="41134" fg:w="17"/><text x="97.3741%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (17 samples, 0.04%)</title><rect x="97.1241%" y="1109" width="0.0401%" height="15" fill="rgb(205,117,26)" fg:x="41134" fg:w="17"/><text x="97.3741%" y="1119.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (40 samples, 0.09%)</title><rect x="97.1642%" y="1141" width="0.0944%" height="15" fill="rgb(209,80,39)" fg:x="41151" fg:w="40"/><text x="97.4142%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (40 samples, 0.09%)</title><rect x="97.1642%" y="1125" width="0.0944%" height="15" fill="rgb(239,155,6)" fg:x="41151" fg:w="40"/><text x="97.4142%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (40 samples, 0.09%)</title><rect x="97.1642%" y="1109" width="0.0944%" height="15" fill="rgb(212,104,12)" fg:x="41151" fg:w="40"/><text x="97.4142%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.04%)</title><rect x="97.2965%" y="1125" width="0.0354%" height="15" fill="rgb(234,204,3)" fg:x="41207" fg:w="15"/><text x="97.5465%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (15 samples, 0.04%)</title><rect x="97.2965%" y="1109" width="0.0354%" height="15" fill="rgb(251,218,7)" fg:x="41207" fg:w="15"/><text x="97.5465%" y="1119.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (15 samples, 0.04%)</title><rect x="97.2965%" y="1093" width="0.0354%" height="15" fill="rgb(221,81,32)" fg:x="41207" fg:w="15"/><text x="97.5465%" y="1103.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (42 samples, 0.10%)</title><rect x="97.3319%" y="1125" width="0.0992%" height="15" fill="rgb(214,152,26)" fg:x="41222" fg:w="42"/><text x="97.5819%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (17 samples, 0.04%)</title><rect x="97.4311%" y="1125" width="0.0401%" height="15" fill="rgb(223,22,3)" fg:x="41264" fg:w="17"/><text x="97.6811%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.04%)</title><rect x="97.4311%" y="1109" width="0.0401%" height="15" fill="rgb(207,174,7)" fg:x="41264" fg:w="17"/><text x="97.6811%" y="1119.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (13 samples, 0.03%)</title><rect x="97.4712%" y="1125" width="0.0307%" height="15" fill="rgb(224,19,52)" fg:x="41281" fg:w="13"/><text x="97.7212%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (13 samples, 0.03%)</title><rect x="97.4712%" y="1109" width="0.0307%" height="15" fill="rgb(228,24,14)" fg:x="41281" fg:w="13"/><text x="97.7212%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.03%)</title><rect x="97.4712%" y="1093" width="0.0307%" height="15" fill="rgb(230,153,43)" fg:x="41281" fg:w="13"/><text x="97.7212%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (23 samples, 0.05%)</title><rect x="97.7427%" y="1109" width="0.0543%" height="15" fill="rgb(231,106,12)" fg:x="41396" fg:w="23"/><text x="97.9927%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (23 samples, 0.05%)</title><rect x="97.7427%" y="1093" width="0.0543%" height="15" fill="rgb(215,92,2)" fg:x="41396" fg:w="23"/><text x="97.9927%" y="1103.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (23 samples, 0.05%)</title><rect x="97.7427%" y="1077" width="0.0543%" height="15" fill="rgb(249,143,25)" fg:x="41396" fg:w="23"/><text x="97.9927%" y="1087.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (8 samples, 0.02%)</title><rect x="97.7970%" y="1109" width="0.0189%" height="15" fill="rgb(252,7,35)" fg:x="41419" fg:w="8"/><text x="98.0470%" y="1119.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (16 samples, 0.04%)</title><rect x="97.8159%" y="1109" width="0.0378%" height="15" fill="rgb(216,69,40)" fg:x="41427" fg:w="16"/><text x="98.0659%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (19 samples, 0.04%)</title><rect x="97.8537%" y="1109" width="0.0449%" height="15" fill="rgb(240,36,33)" fg:x="41443" fg:w="19"/><text x="98.1037%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.04%)</title><rect x="97.8537%" y="1093" width="0.0449%" height="15" fill="rgb(231,128,14)" fg:x="41443" fg:w="19"/><text x="98.1037%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (46 samples, 0.11%)</title><rect x="97.9009%" y="1109" width="0.1086%" height="15" fill="rgb(245,143,14)" fg:x="41463" fg:w="46"/><text x="98.1509%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (46 samples, 0.11%)</title><rect x="97.9009%" y="1093" width="0.1086%" height="15" fill="rgb(222,130,28)" fg:x="41463" fg:w="46"/><text x="98.1509%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::pack (33 samples, 0.08%)</title><rect x="98.0095%" y="1109" width="0.0779%" height="15" fill="rgb(212,10,48)" fg:x="41509" fg:w="33"/><text x="98.2595%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (306 samples, 0.72%)</title><rect x="97.5019%" y="1125" width="0.7225%" height="15" fill="rgb(254,118,45)" fg:x="41294" fg:w="306"/><text x="97.7519%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (58 samples, 0.14%)</title><rect x="98.0875%" y="1109" width="0.1369%" height="15" fill="rgb(228,6,45)" fg:x="41542" fg:w="58"/><text x="98.3375%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (419 samples, 0.99%)</title><rect x="97.2587%" y="1141" width="0.9893%" height="15" fill="rgb(241,18,35)" fg:x="41191" fg:w="419"/><text x="97.5087%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (10 samples, 0.02%)</title><rect x="98.2244%" y="1125" width="0.0236%" height="15" fill="rgb(227,214,53)" fg:x="41600" fg:w="10"/><text x="98.4744%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (41 samples, 0.10%)</title><rect x="98.2504%" y="1141" width="0.0968%" height="15" fill="rgb(224,107,51)" fg:x="41611" fg:w="41"/><text x="98.5004%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (11 samples, 0.03%)</title><rect x="98.3212%" y="1125" width="0.0260%" height="15" fill="rgb(248,60,28)" fg:x="41641" fg:w="11"/><text x="98.5712%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (898 samples, 2.12%)</title><rect x="96.2457%" y="1157" width="2.1203%" height="15" fill="rgb(249,101,23)" fg:x="40762" fg:w="898"/><text x="96.4957%" y="1167.50">t..</text></g><g><title>tokio::util::rand::FastRand::fastrand_n (8 samples, 0.02%)</title><rect x="98.3472%" y="1141" width="0.0189%" height="15" fill="rgb(228,51,19)" fg:x="41652" fg:w="8"/><text x="98.5972%" y="1151.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (8 samples, 0.02%)</title><rect x="98.3472%" y="1125" width="0.0189%" height="15" fill="rgb(213,20,6)" fg:x="41652" fg:w="8"/><text x="98.5972%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (29,494 samples, 69.64%)</title><rect x="28.7354%" y="1717" width="69.6402%" height="15" fill="rgb(212,124,10)" fg:x="12170" fg:w="29494"/><text x="28.9854%" y="1727.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (29,494 samples, 69.64%)</title><rect x="28.7354%" y="1701" width="69.6402%" height="15" fill="rgb(248,3,40)" fg:x="12170" fg:w="29494"/><text x="28.9854%" y="1711.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (29,494 samples, 69.64%)</title><rect x="28.7354%" y="1685" width="69.6402%" height="15" fill="rgb(223,178,23)" fg:x="12170" fg:w="29494"/><text x="28.9854%" y="1695.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29,494 samples, 69.64%)</title><rect x="28.7354%" y="1669" width="69.6402%" height="15" fill="rgb(240,132,45)" fg:x="12170" fg:w="29494"/><text x="28.9854%" y="1679.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (29,494 samples, 69.64%)</title><rect x="28.7354%" y="1653" width="69.6402%" height="15" fill="rgb(245,164,36)" fg:x="12170" fg:w="29494"/><text x="28.9854%" y="1663.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29,494 samples, 69.64%)</title><rect x="28.7354%" y="1637" width="69.6402%" height="15" fill="rgb(231,188,53)" fg:x="12170" fg:w="29494"/><text x="28.9854%" y="1647.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (29,494 samples, 69.64%)</title><rect x="28.7354%" y="1621" width="69.6402%" height="15" fill="rgb(237,198,39)" fg:x="12170" fg:w="29494"/><text x="28.9854%" y="1631.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (29,494 samples, 69.64%)</title><rect x="28.7354%" y="1605" width="69.6402%" height="15" fill="rgb(223,120,35)" fg:x="12170" fg:w="29494"/><text x="28.9854%" y="1615.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1589" width="69.4536%" height="15" fill="rgb(253,107,49)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1599.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1573" width="69.4536%" height="15" fill="rgb(216,44,31)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1583.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1557" width="69.4536%" height="15" fill="rgb(253,87,21)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1567.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1541" width="69.4536%" height="15" fill="rgb(226,18,2)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1551.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1525" width="69.4536%" height="15" fill="rgb(216,8,46)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1535.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1509" width="69.4536%" height="15" fill="rgb(226,140,39)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1519.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1493" width="69.4536%" height="15" fill="rgb(221,194,54)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1503.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1477" width="69.4536%" height="15" fill="rgb(213,92,11)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1487.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1461" width="69.4536%" height="15" fill="rgb(229,162,46)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1471.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1445" width="69.4536%" height="15" fill="rgb(214,111,36)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1455.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1429" width="69.4536%" height="15" fill="rgb(207,6,21)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1439.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1413" width="69.4536%" height="15" fill="rgb(213,127,38)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1423.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1397" width="69.4536%" height="15" fill="rgb(238,118,32)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1407.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1381" width="69.4536%" height="15" fill="rgb(240,139,39)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1391.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1365" width="69.4536%" height="15" fill="rgb(235,10,37)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1375.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1349" width="69.4536%" height="15" fill="rgb(249,171,38)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1359.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1333" width="69.4536%" height="15" fill="rgb(242,144,32)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1343.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1317" width="69.4536%" height="15" fill="rgb(217,117,21)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1327.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1301" width="69.4536%" height="15" fill="rgb(249,87,1)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1311.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1285" width="69.4536%" height="15" fill="rgb(248,196,48)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1295.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1269" width="69.4536%" height="15" fill="rgb(251,206,33)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1279.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1253" width="69.4536%" height="15" fill="rgb(232,141,28)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1263.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1237" width="69.4536%" height="15" fill="rgb(209,167,14)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1247.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1221" width="69.4536%" height="15" fill="rgb(225,11,50)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1231.50">tokio::runtime::context::set_scheduler::{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1205" width="69.4536%" height="15" fill="rgb(209,50,20)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1215.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1189" width="69.4536%" height="15" fill="rgb(212,17,46)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1199.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (29,415 samples, 69.45%)</title><rect x="28.9219%" y="1173" width="69.4536%" height="15" fill="rgb(216,101,39)" fg:x="12249" fg:w="29415"/><text x="29.1719%" y="1183.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29,496 samples, 69.64%)</title><rect x="28.7354%" y="1781" width="69.6449%" height="15" fill="rgb(212,228,48)" fg:x="12170" fg:w="29496"/><text x="28.9854%" y="1791.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29,496 samples, 69.64%)</title><rect x="28.7354%" y="1765" width="69.6449%" height="15" fill="rgb(250,6,50)" fg:x="12170" fg:w="29496"/><text x="28.9854%" y="1775.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (29,496 samples, 69.64%)</title><rect x="28.7354%" y="1749" width="69.6449%" height="15" fill="rgb(250,160,48)" fg:x="12170" fg:w="29496"/><text x="28.9854%" y="1759.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (29,496 samples, 69.64%)</title><rect x="28.7354%" y="1733" width="69.6449%" height="15" fill="rgb(244,216,33)" fg:x="12170" fg:w="29496"/><text x="28.9854%" y="1743.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>__GI_munmap (26 samples, 0.06%)</title><rect x="98.3802%" y="1733" width="0.0614%" height="15" fill="rgb(207,157,5)" fg:x="41666" fg:w="26"/><text x="98.6302%" y="1743.50"></text></g><g><title>[unknown] (26 samples, 0.06%)</title><rect x="98.3802%" y="1717" width="0.0614%" height="15" fill="rgb(228,199,8)" fg:x="41666" fg:w="26"/><text x="98.6302%" y="1727.50"></text></g><g><title>[unknown] (26 samples, 0.06%)</title><rect x="98.3802%" y="1701" width="0.0614%" height="15" fill="rgb(227,80,20)" fg:x="41666" fg:w="26"/><text x="98.6302%" y="1711.50"></text></g><g><title>[unknown] (26 samples, 0.06%)</title><rect x="98.3802%" y="1685" width="0.0614%" height="15" fill="rgb(222,9,33)" fg:x="41666" fg:w="26"/><text x="98.6302%" y="1695.50"></text></g><g><title>[unknown] (26 samples, 0.06%)</title><rect x="98.3802%" y="1669" width="0.0614%" height="15" fill="rgb(239,44,28)" fg:x="41666" fg:w="26"/><text x="98.6302%" y="1679.50"></text></g><g><title>[unknown] (26 samples, 0.06%)</title><rect x="98.3802%" y="1653" width="0.0614%" height="15" fill="rgb(249,187,43)" fg:x="41666" fg:w="26"/><text x="98.6302%" y="1663.50"></text></g><g><title>[unknown] (26 samples, 0.06%)</title><rect x="98.3802%" y="1637" width="0.0614%" height="15" fill="rgb(216,141,28)" fg:x="41666" fg:w="26"/><text x="98.6302%" y="1647.50"></text></g><g><title>[unknown] (25 samples, 0.06%)</title><rect x="98.3826%" y="1621" width="0.0590%" height="15" fill="rgb(230,154,53)" fg:x="41667" fg:w="25"/><text x="98.6326%" y="1631.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="98.3873%" y="1605" width="0.0543%" height="15" fill="rgb(227,82,4)" fg:x="41669" fg:w="23"/><text x="98.6373%" y="1615.50"></text></g><g><title>[unknown] (19 samples, 0.04%)</title><rect x="98.3968%" y="1589" width="0.0449%" height="15" fill="rgb(220,107,16)" fg:x="41673" fg:w="19"/><text x="98.6468%" y="1599.50"></text></g><g><title>[unknown] (19 samples, 0.04%)</title><rect x="98.3968%" y="1573" width="0.0449%" height="15" fill="rgb(207,187,2)" fg:x="41673" fg:w="19"/><text x="98.6468%" y="1583.50"></text></g><g><title>[unknown] (18 samples, 0.04%)</title><rect x="98.3991%" y="1557" width="0.0425%" height="15" fill="rgb(210,162,52)" fg:x="41674" fg:w="18"/><text x="98.6491%" y="1567.50"></text></g><g><title>[unknown] (13 samples, 0.03%)</title><rect x="98.4109%" y="1541" width="0.0307%" height="15" fill="rgb(217,216,49)" fg:x="41679" fg:w="13"/><text x="98.6609%" y="1551.50"></text></g><g><title>[unknown] (12 samples, 0.03%)</title><rect x="98.4133%" y="1525" width="0.0283%" height="15" fill="rgb(218,146,49)" fg:x="41680" fg:w="12"/><text x="98.6633%" y="1535.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="98.4298%" y="1509" width="0.0118%" height="15" fill="rgb(216,55,40)" fg:x="41687" fg:w="5"/><text x="98.6798%" y="1519.50"></text></g><g><title>clone3 (29,548 samples, 69.77%)</title><rect x="28.6763%" y="1829" width="69.7677%" height="15" fill="rgb(208,196,21)" fg:x="12145" fg:w="29548"/><text x="28.9263%" y="1839.50">clone3</text></g><g><title>start_thread (29,548 samples, 69.77%)</title><rect x="28.6763%" y="1813" width="69.7677%" height="15" fill="rgb(242,117,42)" fg:x="12145" fg:w="29548"/><text x="28.9263%" y="1823.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (29,523 samples, 69.71%)</title><rect x="28.7354%" y="1797" width="69.7086%" height="15" fill="rgb(210,11,23)" fg:x="12170" fg:w="29523"/><text x="28.9854%" y="1807.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::stack_overflow::Handler&gt; (27 samples, 0.06%)</title><rect x="98.3802%" y="1781" width="0.0638%" height="15" fill="rgb(217,110,2)" fg:x="41666" fg:w="27"/><text x="98.6302%" y="1791.50"></text></g><g><title>&lt;std::sys::pal::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (27 samples, 0.06%)</title><rect x="98.3802%" y="1765" width="0.0638%" height="15" fill="rgb(229,77,54)" fg:x="41666" fg:w="27"/><text x="98.6302%" y="1775.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::drop_handler (27 samples, 0.06%)</title><rect x="98.3802%" y="1749" width="0.0638%" height="15" fill="rgb(218,53,16)" fg:x="41666" fg:w="27"/><text x="98.6302%" y="1759.50"></text></g><g><title>core::fmt::Formatter::pad_integral (7 samples, 0.02%)</title><rect x="98.4511%" y="1829" width="0.0165%" height="15" fill="rgb(215,38,13)" fg:x="41696" fg:w="7"/><text x="98.7011%" y="1839.50"></text></g><g><title>rand_chacha::guts::round (6 samples, 0.01%)</title><rect x="98.4959%" y="1781" width="0.0142%" height="15" fill="rgb(235,42,18)" fg:x="41715" fg:w="6"/><text x="98.7459%" y="1791.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (8 samples, 0.02%)</title><rect x="98.4936%" y="1829" width="0.0189%" height="15" fill="rgb(219,66,54)" fg:x="41714" fg:w="8"/><text x="98.7436%" y="1839.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (8 samples, 0.02%)</title><rect x="98.4936%" y="1813" width="0.0189%" height="15" fill="rgb(222,205,4)" fg:x="41714" fg:w="8"/><text x="98.7436%" y="1823.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (8 samples, 0.02%)</title><rect x="98.4936%" y="1797" width="0.0189%" height="15" fill="rgb(227,213,46)" fg:x="41714" fg:w="8"/><text x="98.7436%" y="1807.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="98.5361%" y="1813" width="0.0118%" height="15" fill="rgb(250,145,42)" fg:x="41732" fg:w="5"/><text x="98.7861%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (5 samples, 0.01%)</title><rect x="98.5550%" y="1765" width="0.0118%" height="15" fill="rgb(219,15,2)" fg:x="41740" fg:w="5"/><text x="98.8050%" y="1775.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (12 samples, 0.03%)</title><rect x="98.5668%" y="1749" width="0.0283%" height="15" fill="rgb(231,181,52)" fg:x="41745" fg:w="12"/><text x="98.8168%" y="1759.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (12 samples, 0.03%)</title><rect x="98.5668%" y="1733" width="0.0283%" height="15" fill="rgb(235,1,42)" fg:x="41745" fg:w="12"/><text x="98.8168%" y="1743.50"></text></g><g><title>core::cell::BorrowRefMut::new (12 samples, 0.03%)</title><rect x="98.5668%" y="1717" width="0.0283%" height="15" fill="rgb(249,88,27)" fg:x="41745" fg:w="12"/><text x="98.8168%" y="1727.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (20 samples, 0.05%)</title><rect x="98.5550%" y="1813" width="0.0472%" height="15" fill="rgb(235,145,16)" fg:x="41740" fg:w="20"/><text x="98.8050%" y="1823.50"></text></g><g><title>tokio::runtime::coop::budget (20 samples, 0.05%)</title><rect x="98.5550%" y="1797" width="0.0472%" height="15" fill="rgb(237,114,19)" fg:x="41740" fg:w="20"/><text x="98.8050%" y="1807.50"></text></g><g><title>tokio::runtime::coop::with_budget (20 samples, 0.05%)</title><rect x="98.5550%" y="1781" width="0.0472%" height="15" fill="rgb(238,51,50)" fg:x="41740" fg:w="20"/><text x="98.8050%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (15 samples, 0.04%)</title><rect x="98.5668%" y="1765" width="0.0354%" height="15" fill="rgb(205,194,25)" fg:x="41745" fg:w="15"/><text x="98.8168%" y="1775.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (36 samples, 0.09%)</title><rect x="98.5196%" y="1829" width="0.0850%" height="15" fill="rgb(215,203,17)" fg:x="41725" fg:w="36"/><text x="98.7696%" y="1839.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (16 samples, 0.04%)</title><rect x="98.6046%" y="1829" width="0.0378%" height="15" fill="rgb(233,112,49)" fg:x="41761" fg:w="16"/><text x="98.8546%" y="1839.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (12 samples, 0.03%)</title><rect x="98.6423%" y="1829" width="0.0283%" height="15" fill="rgb(241,130,26)" fg:x="41777" fg:w="12"/><text x="98.8923%" y="1839.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (6 samples, 0.01%)</title><rect x="98.6848%" y="1717" width="0.0142%" height="15" fill="rgb(252,223,19)" fg:x="41795" fg:w="6"/><text x="98.9348%" y="1727.50"></text></g><g><title>std::sys_common::thread_info::set (19 samples, 0.04%)</title><rect x="98.6707%" y="1829" width="0.0449%" height="15" fill="rgb(211,95,25)" fg:x="41789" fg:w="19"/><text x="98.9207%" y="1839.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.04%)</title><rect x="98.6707%" y="1813" width="0.0449%" height="15" fill="rgb(251,182,27)" fg:x="41789" fg:w="19"/><text x="98.9207%" y="1823.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.04%)</title><rect x="98.6707%" y="1797" width="0.0449%" height="15" fill="rgb(238,24,4)" fg:x="41789" fg:w="19"/><text x="98.9207%" y="1807.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (19 samples, 0.04%)</title><rect x="98.6707%" y="1781" width="0.0449%" height="15" fill="rgb(224,220,25)" fg:x="41789" fg:w="19"/><text x="98.9207%" y="1791.50"></text></g><g><title>std::sys::thread_local::fast_local::Key&lt;T&gt;::register_dtor (19 samples, 0.04%)</title><rect x="98.6707%" y="1765" width="0.0449%" height="15" fill="rgb(239,133,26)" fg:x="41789" fg:w="19"/><text x="98.9207%" y="1775.50"></text></g><g><title>__cxa_thread_atexit_impl (19 samples, 0.04%)</title><rect x="98.6707%" y="1749" width="0.0449%" height="15" fill="rgb(211,94,48)" fg:x="41789" fg:w="19"/><text x="98.9207%" y="1759.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (19 samples, 0.04%)</title><rect x="98.6707%" y="1733" width="0.0449%" height="15" fill="rgb(239,87,6)" fg:x="41789" fg:w="19"/><text x="98.9207%" y="1743.50"></text></g><g><title>syscall (5 samples, 0.01%)</title><rect x="98.7155%" y="1829" width="0.0118%" height="15" fill="rgb(227,62,0)" fg:x="41808" fg:w="5"/><text x="98.9655%" y="1839.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (14 samples, 0.03%)</title><rect x="98.7675%" y="1669" width="0.0331%" height="15" fill="rgb(211,226,4)" fg:x="41830" fg:w="14"/><text x="99.0175%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (14 samples, 0.03%)</title><rect x="98.7675%" y="1653" width="0.0331%" height="15" fill="rgb(253,38,52)" fg:x="41830" fg:w="14"/><text x="99.0175%" y="1663.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.03%)</title><rect x="98.7698%" y="1637" width="0.0307%" height="15" fill="rgb(229,126,40)" fg:x="41831" fg:w="13"/><text x="99.0198%" y="1647.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (13 samples, 0.03%)</title><rect x="98.7698%" y="1621" width="0.0307%" height="15" fill="rgb(229,165,44)" fg:x="41831" fg:w="13"/><text x="99.0198%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (13 samples, 0.03%)</title><rect x="98.7698%" y="1605" width="0.0307%" height="15" fill="rgb(247,95,47)" fg:x="41831" fg:w="13"/><text x="99.0198%" y="1615.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (13 samples, 0.03%)</title><rect x="98.7698%" y="1589" width="0.0307%" height="15" fill="rgb(216,140,30)" fg:x="41831" fg:w="13"/><text x="99.0198%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (13 samples, 0.03%)</title><rect x="98.7698%" y="1573" width="0.0307%" height="15" fill="rgb(246,214,8)" fg:x="41831" fg:w="13"/><text x="99.0198%" y="1583.50"></text></g><g><title>tokio::runtime::context::set_scheduler (13 samples, 0.03%)</title><rect x="98.7698%" y="1557" width="0.0307%" height="15" fill="rgb(227,224,15)" fg:x="41831" fg:w="13"/><text x="99.0198%" y="1567.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.03%)</title><rect x="98.7698%" y="1541" width="0.0307%" height="15" fill="rgb(233,175,4)" fg:x="41831" fg:w="13"/><text x="99.0198%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.03%)</title><rect x="98.7698%" y="1525" width="0.0307%" height="15" fill="rgb(221,66,45)" fg:x="41831" fg:w="13"/><text x="99.0198%" y="1535.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (13 samples, 0.03%)</title><rect x="98.7698%" y="1509" width="0.0307%" height="15" fill="rgb(221,178,18)" fg:x="41831" fg:w="13"/><text x="99.0198%" y="1519.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (13 samples, 0.03%)</title><rect x="98.7698%" y="1493" width="0.0307%" height="15" fill="rgb(213,81,29)" fg:x="41831" fg:w="13"/><text x="99.0198%" y="1503.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (13 samples, 0.03%)</title><rect x="98.7698%" y="1477" width="0.0307%" height="15" fill="rgb(220,89,49)" fg:x="41831" fg:w="13"/><text x="99.0198%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (13 samples, 0.03%)</title><rect x="98.7698%" y="1461" width="0.0307%" height="15" fill="rgb(227,60,33)" fg:x="41831" fg:w="13"/><text x="99.0198%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (5 samples, 0.01%)</title><rect x="98.7887%" y="1445" width="0.0118%" height="15" fill="rgb(205,113,12)" fg:x="41839" fg:w="5"/><text x="99.0387%" y="1455.50"></text></g><g><title>tokio::runtime::task::raw::poll (19 samples, 0.04%)</title><rect x="98.7651%" y="1829" width="0.0449%" height="15" fill="rgb(211,32,1)" fg:x="41829" fg:w="19"/><text x="99.0151%" y="1839.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (18 samples, 0.04%)</title><rect x="98.7675%" y="1813" width="0.0425%" height="15" fill="rgb(246,2,12)" fg:x="41830" fg:w="18"/><text x="99.0175%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (18 samples, 0.04%)</title><rect x="98.7675%" y="1797" width="0.0425%" height="15" fill="rgb(243,37,27)" fg:x="41830" fg:w="18"/><text x="99.0175%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (18 samples, 0.04%)</title><rect x="98.7675%" y="1781" width="0.0425%" height="15" fill="rgb(248,211,31)" fg:x="41830" fg:w="18"/><text x="99.0175%" y="1791.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.04%)</title><rect x="98.7675%" y="1765" width="0.0425%" height="15" fill="rgb(242,146,47)" fg:x="41830" fg:w="18"/><text x="99.0175%" y="1775.50"></text></g><g><title>std::panicking::try (18 samples, 0.04%)</title><rect x="98.7675%" y="1749" width="0.0425%" height="15" fill="rgb(206,70,20)" fg:x="41830" fg:w="18"/><text x="99.0175%" y="1759.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.04%)</title><rect x="98.7675%" y="1733" width="0.0425%" height="15" fill="rgb(215,10,51)" fg:x="41830" fg:w="18"/><text x="99.0175%" y="1743.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.04%)</title><rect x="98.7675%" y="1717" width="0.0425%" height="15" fill="rgb(243,178,53)" fg:x="41830" fg:w="18"/><text x="99.0175%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (18 samples, 0.04%)</title><rect x="98.7675%" y="1701" width="0.0425%" height="15" fill="rgb(233,221,20)" fg:x="41830" fg:w="18"/><text x="99.0175%" y="1711.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (18 samples, 0.04%)</title><rect x="98.7675%" y="1685" width="0.0425%" height="15" fill="rgb(218,95,35)" fg:x="41830" fg:w="18"/><text x="99.0175%" y="1695.50"></text></g><g><title>torrust_tracker::servers::http::v1::routes::router::{{closure}}::__CALLSITE::META (5 samples, 0.01%)</title><rect x="98.8359%" y="1829" width="0.0118%" height="15" fill="rgb(229,13,5)" fg:x="41859" fg:w="5"/><text x="99.0859%" y="1839.50"></text></g><g><title>__libc_calloc (23 samples, 0.05%)</title><rect x="98.8548%" y="1813" width="0.0543%" height="15" fill="rgb(252,164,30)" fg:x="41867" fg:w="23"/><text x="99.1048%" y="1823.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (75 samples, 0.18%)</title><rect x="98.9091%" y="1813" width="0.1771%" height="15" fill="rgb(232,68,36)" fg:x="41890" fg:w="75"/><text x="99.1591%" y="1823.50"></text></g><g><title>_int_free (61 samples, 0.14%)</title><rect x="99.0862%" y="1813" width="0.1440%" height="15" fill="rgb(219,59,54)" fg:x="41965" fg:w="61"/><text x="99.3362%" y="1823.50"></text></g><g><title>[unknown] (37 samples, 0.09%)</title><rect x="99.1429%" y="1797" width="0.0874%" height="15" fill="rgb(250,92,33)" fg:x="41989" fg:w="37"/><text x="99.3929%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request::__CALLSITE::META (170 samples, 0.40%)</title><rect x="98.8501%" y="1829" width="0.4014%" height="15" fill="rgb(229,162,54)" fg:x="41865" fg:w="170"/><text x="99.1001%" y="1839.50"></text></g><g><title>__GI___lll_lock_wait_private (39 samples, 0.09%)</title><rect x="99.2515%" y="1813" width="0.0921%" height="15" fill="rgb(244,114,52)" fg:x="42035" fg:w="39"/><text x="99.5015%" y="1823.50"></text></g><g><title>futex_wait (25 samples, 0.06%)</title><rect x="99.2846%" y="1797" width="0.0590%" height="15" fill="rgb(212,211,43)" fg:x="42049" fg:w="25"/><text x="99.5346%" y="1807.50"></text></g><g><title>futex_fatal_error (16 samples, 0.04%)</title><rect x="99.3058%" y="1781" width="0.0378%" height="15" fill="rgb(226,147,8)" fg:x="42058" fg:w="16"/><text x="99.5558%" y="1791.50"></text></g><g><title>__memcpy_avx512_unaligned_erms (90 samples, 0.21%)</title><rect x="99.3436%" y="1813" width="0.2125%" height="15" fill="rgb(226,23,13)" fg:x="42074" fg:w="90"/><text x="99.5936%" y="1823.50"></text></g><g><title>_int_malloc (8 samples, 0.02%)</title><rect x="99.5561%" y="1813" width="0.0189%" height="15" fill="rgb(240,63,4)" fg:x="42164" fg:w="8"/><text x="99.8061%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request::__CALLSITE (144 samples, 0.34%)</title><rect x="99.2515%" y="1829" width="0.3400%" height="15" fill="rgb(221,1,32)" fg:x="42035" fg:w="144"/><text x="99.5015%" y="1839.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_request::{{closure}} (10 samples, 0.02%)</title><rect x="99.5915%" y="1829" width="0.0236%" height="15" fill="rgb(242,117,10)" fg:x="42179" fg:w="10"/><text x="99.8415%" y="1839.50"></text></g><g><title>torrust_tracker::core::Tracker::update_torrent_with_peer_and_get_stats::{{closure}} (13 samples, 0.03%)</title><rect x="99.6789%" y="1749" width="0.0307%" height="15" fill="rgb(249,172,44)" fg:x="42216" fg:w="13"/><text x="99.9289%" y="1759.50"></text></g><g><title>&lt;torrust_tracker::core::torrent::repository::RepositoryAsyncSingle as torrust_tracker::core::torrent::repository::TRepositoryAsync&gt;::update_torrent_with_peer_and_get_stats::{{closure}} (12 samples, 0.03%)</title><rect x="99.6812%" y="1733" width="0.0283%" height="15" fill="rgb(244,46,45)" fg:x="42217" fg:w="12"/><text x="99.9312%" y="1743.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_request::{{closure}} (31 samples, 0.07%)</title><rect x="99.6387%" y="1797" width="0.0732%" height="15" fill="rgb(206,43,17)" fg:x="42199" fg:w="31"/><text x="99.8887%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_announce::{{closure}} (22 samples, 0.05%)</title><rect x="99.6600%" y="1781" width="0.0519%" height="15" fill="rgb(239,218,39)" fg:x="42208" fg:w="22"/><text x="99.9100%" y="1791.50"></text></g><g><title>torrust_tracker::core::Tracker::announce::{{closure}} (17 samples, 0.04%)</title><rect x="99.6718%" y="1765" width="0.0401%" height="15" fill="rgb(208,169,54)" fg:x="42213" fg:w="17"/><text x="99.9218%" y="1775.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (5 samples, 0.01%)</title><rect x="99.7119%" y="1781" width="0.0118%" height="15" fill="rgb(247,25,42)" fg:x="42230" fg:w="5"/><text x="99.9619%" y="1791.50"></text></g><g><title>torrust_tracker::servers::udp::logging::log_request (7 samples, 0.02%)</title><rect x="99.7119%" y="1797" width="0.0165%" height="15" fill="rgb(226,23,31)" fg:x="42230" fg:w="7"/><text x="99.9619%" y="1807.50"></text></g><g><title>torrust_tracker::servers::udp::handlers::handle_packet::{{closure}} (46 samples, 0.11%)</title><rect x="99.6269%" y="1813" width="0.1086%" height="15" fill="rgb(247,16,28)" fg:x="42194" fg:w="46"/><text x="99.8769%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::process_valid_request::{{closure}} (55 samples, 0.13%)</title><rect x="99.6151%" y="1829" width="0.1299%" height="15" fill="rgb(231,147,38)" fg:x="42189" fg:w="55"/><text x="99.8651%" y="1839.50"></text></g><g><title>ringbuf::ring_buffer::rb::Rb::push_overwrite (5 samples, 0.01%)</title><rect x="99.7592%" y="1797" width="0.0118%" height="15" fill="rgb(253,81,48)" fg:x="42250" fg:w="5"/><text x="100.0092%" y="1807.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.03%)</title><rect x="99.8040%" y="1573" width="0.0283%" height="15" fill="rgb(249,222,43)" fg:x="42269" fg:w="12"/><text x="100.0540%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (21 samples, 0.05%)</title><rect x="99.7851%" y="1781" width="0.0496%" height="15" fill="rgb(221,3,27)" fg:x="42261" fg:w="21"/><text x="100.0351%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.05%)</title><rect x="99.7851%" y="1765" width="0.0496%" height="15" fill="rgb(228,180,5)" fg:x="42261" fg:w="21"/><text x="100.0351%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.05%)</title><rect x="99.7851%" y="1749" width="0.0496%" height="15" fill="rgb(227,131,42)" fg:x="42261" fg:w="21"/><text x="100.0351%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (21 samples, 0.05%)</title><rect x="99.7851%" y="1733" width="0.0496%" height="15" fill="rgb(212,3,39)" fg:x="42261" fg:w="21"/><text x="100.0351%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.05%)</title><rect x="99.7851%" y="1717" width="0.0496%" height="15" fill="rgb(226,45,5)" fg:x="42261" fg:w="21"/><text x="100.0351%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.05%)</title><rect x="99.7851%" y="1701" width="0.0496%" height="15" fill="rgb(215,167,45)" fg:x="42261" fg:w="21"/><text x="100.0351%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.05%)</title><rect x="99.7851%" y="1685" width="0.0496%" height="15" fill="rgb(250,218,53)" fg:x="42261" fg:w="21"/><text x="100.0351%" y="1695.50"></text></g><g><title>__rdl_alloc (21 samples, 0.05%)</title><rect x="99.7851%" y="1669" width="0.0496%" height="15" fill="rgb(207,140,0)" fg:x="42261" fg:w="21"/><text x="100.0351%" y="1679.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (21 samples, 0.05%)</title><rect x="99.7851%" y="1653" width="0.0496%" height="15" fill="rgb(238,133,51)" fg:x="42261" fg:w="21"/><text x="100.0351%" y="1663.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (20 samples, 0.05%)</title><rect x="99.7875%" y="1637" width="0.0472%" height="15" fill="rgb(218,203,53)" fg:x="42262" fg:w="20"/><text x="100.0375%" y="1647.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (20 samples, 0.05%)</title><rect x="99.7875%" y="1621" width="0.0472%" height="15" fill="rgb(226,184,25)" fg:x="42262" fg:w="20"/><text x="100.0375%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (20 samples, 0.05%)</title><rect x="99.7875%" y="1605" width="0.0472%" height="15" fill="rgb(231,121,21)" fg:x="42262" fg:w="20"/><text x="100.0375%" y="1615.50"></text></g><g><title>_int_malloc (13 samples, 0.03%)</title><rect x="99.8040%" y="1589" width="0.0307%" height="15" fill="rgb(251,14,34)" fg:x="42269" fg:w="13"/><text x="100.0540%" y="1599.50"></text></g><g><title>tokio::net::udp::UdpSocket::readable::{{closure}} (8 samples, 0.02%)</title><rect x="99.8347%" y="1781" width="0.0189%" height="15" fill="rgb(249,193,11)" fg:x="42282" fg:w="8"/><text x="100.0847%" y="1791.50"></text></g><g><title>tokio::net::udp::UdpSocket::ready::{{closure}} (7 samples, 0.02%)</title><rect x="99.8371%" y="1765" width="0.0165%" height="15" fill="rgb(220,172,37)" fg:x="42283" fg:w="7"/><text x="100.0871%" y="1775.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="99.8631%" y="1749" width="0.0236%" height="15" fill="rgb(231,229,43)" fg:x="42294" fg:w="10"/><text x="100.1131%" y="1759.50"></text></g><g><title>[unknown] (13 samples, 0.03%)</title><rect x="99.8914%" y="1605" width="0.0307%" height="15" fill="rgb(250,161,5)" fg:x="42306" fg:w="13"/><text x="100.1414%" y="1615.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::receive_request::{{closure}} (69 samples, 0.16%)</title><rect x="99.7781%" y="1797" width="0.1629%" height="15" fill="rgb(218,225,18)" fg:x="42258" fg:w="69"/><text x="100.0281%" y="1807.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}} (37 samples, 0.09%)</title><rect x="99.8536%" y="1781" width="0.0874%" height="15" fill="rgb(245,45,42)" fg:x="42290" fg:w="37"/><text x="100.1036%" y="1791.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (37 samples, 0.09%)</title><rect x="99.8536%" y="1765" width="0.0874%" height="15" fill="rgb(211,115,1)" fg:x="42290" fg:w="37"/><text x="100.1036%" y="1775.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_buf_from::{{closure}}::{{closure}} (22 samples, 0.05%)</title><rect x="99.8890%" y="1749" width="0.0519%" height="15" fill="rgb(248,133,52)" fg:x="42305" fg:w="22"/><text x="100.1390%" y="1759.50"></text></g><g><title>mio::net::udp::UdpSocket::recv_from (21 samples, 0.05%)</title><rect x="99.8914%" y="1733" width="0.0496%" height="15" fill="rgb(238,100,21)" fg:x="42306" fg:w="21"/><text x="100.1414%" y="1743.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (21 samples, 0.05%)</title><rect x="99.8914%" y="1717" width="0.0496%" height="15" fill="rgb(247,144,11)" fg:x="42306" fg:w="21"/><text x="100.1414%" y="1727.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (21 samples, 0.05%)</title><rect x="99.8914%" y="1701" width="0.0496%" height="15" fill="rgb(206,164,16)" fg:x="42306" fg:w="21"/><text x="100.1414%" y="1711.50"></text></g><g><title>mio::net::udp::UdpSocket::recv_from::{{closure}} (21 samples, 0.05%)</title><rect x="99.8914%" y="1685" width="0.0496%" height="15" fill="rgb(222,34,3)" fg:x="42306" fg:w="21"/><text x="100.1414%" y="1695.50"></text></g><g><title>std::net::udp::UdpSocket::recv_from (21 samples, 0.05%)</title><rect x="99.8914%" y="1669" width="0.0496%" height="15" fill="rgb(248,82,4)" fg:x="42306" fg:w="21"/><text x="100.1414%" y="1679.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv_from (21 samples, 0.05%)</title><rect x="99.8914%" y="1653" width="0.0496%" height="15" fill="rgb(228,81,46)" fg:x="42306" fg:w="21"/><text x="100.1414%" y="1663.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_from (21 samples, 0.05%)</title><rect x="99.8914%" y="1637" width="0.0496%" height="15" fill="rgb(227,67,47)" fg:x="42306" fg:w="21"/><text x="100.1414%" y="1647.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_from_with_flags (21 samples, 0.05%)</title><rect x="99.8914%" y="1621" width="0.0496%" height="15" fill="rgb(215,93,53)" fg:x="42306" fg:w="21"/><text x="100.1414%" y="1631.50"></text></g><g><title>core::mem::zeroed (8 samples, 0.02%)</title><rect x="99.9221%" y="1605" width="0.0189%" height="15" fill="rgb(248,194,39)" fg:x="42319" fg:w="8"/><text x="100.1721%" y="1615.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::zeroed (8 samples, 0.02%)</title><rect x="99.9221%" y="1589" width="0.0189%" height="15" fill="rgb(215,5,19)" fg:x="42319" fg:w="8"/><text x="100.1721%" y="1599.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (8 samples, 0.02%)</title><rect x="99.9221%" y="1573" width="0.0189%" height="15" fill="rgb(226,215,51)" fg:x="42319" fg:w="8"/><text x="100.1721%" y="1583.50"></text></g><g><title>core::intrinsics::write_bytes (8 samples, 0.02%)</title><rect x="99.9221%" y="1557" width="0.0189%" height="15" fill="rgb(225,56,26)" fg:x="42319" fg:w="8"/><text x="100.1721%" y="1567.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="99.9221%" y="1541" width="0.0189%" height="15" fill="rgb(222,75,29)" fg:x="42319" fg:w="8"/><text x="100.1721%" y="1551.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (13 samples, 0.03%)</title><rect x="99.9410%" y="1621" width="0.0307%" height="15" fill="rgb(236,139,6)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (13 samples, 0.03%)</title><rect x="99.9410%" y="1605" width="0.0307%" height="15" fill="rgb(223,137,36)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (13 samples, 0.03%)</title><rect x="99.9410%" y="1589" width="0.0307%" height="15" fill="rgb(226,99,2)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1599.50"></text></g><g><title>tokio::runtime::context::with_scheduler (13 samples, 0.03%)</title><rect x="99.9410%" y="1573" width="0.0307%" height="15" fill="rgb(206,133,23)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1583.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.03%)</title><rect x="99.9410%" y="1557" width="0.0307%" height="15" fill="rgb(243,173,15)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1567.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (13 samples, 0.03%)</title><rect x="99.9410%" y="1541" width="0.0307%" height="15" fill="rgb(228,69,28)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1551.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (13 samples, 0.03%)</title><rect x="99.9410%" y="1525" width="0.0307%" height="15" fill="rgb(212,51,22)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1535.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (13 samples, 0.03%)</title><rect x="99.9410%" y="1509" width="0.0307%" height="15" fill="rgb(227,113,0)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1519.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (13 samples, 0.03%)</title><rect x="99.9410%" y="1493" width="0.0307%" height="15" fill="rgb(252,84,27)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1503.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (13 samples, 0.03%)</title><rect x="99.9410%" y="1477" width="0.0307%" height="15" fill="rgb(223,145,39)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (13 samples, 0.03%)</title><rect x="99.9410%" y="1461" width="0.0307%" height="15" fill="rgb(239,219,30)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (13 samples, 0.03%)</title><rect x="99.9410%" y="1445" width="0.0307%" height="15" fill="rgb(224,196,39)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (13 samples, 0.03%)</title><rect x="99.9410%" y="1429" width="0.0307%" height="15" fill="rgb(205,35,43)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1439.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (13 samples, 0.03%)</title><rect x="99.9410%" y="1413" width="0.0307%" height="15" fill="rgb(228,201,21)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1423.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (13 samples, 0.03%)</title><rect x="99.9410%" y="1397" width="0.0307%" height="15" fill="rgb(237,118,16)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1407.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (13 samples, 0.03%)</title><rect x="99.9410%" y="1381" width="0.0307%" height="15" fill="rgb(241,17,19)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1391.50"></text></g><g><title>mio::waker::Waker::wake (13 samples, 0.03%)</title><rect x="99.9410%" y="1365" width="0.0307%" height="15" fill="rgb(214,10,25)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1375.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (13 samples, 0.03%)</title><rect x="99.9410%" y="1349" width="0.0307%" height="15" fill="rgb(238,37,29)" fg:x="42327" fg:w="13"/><text x="100.1910%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (12 samples, 0.03%)</title><rect x="99.9433%" y="1333" width="0.0283%" height="15" fill="rgb(253,83,25)" fg:x="42328" fg:w="12"/><text x="100.1933%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (12 samples, 0.03%)</title><rect x="99.9433%" y="1317" width="0.0283%" height="15" fill="rgb(234,192,12)" fg:x="42328" fg:w="12"/><text x="100.1933%" y="1327.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (12 samples, 0.03%)</title><rect x="99.9433%" y="1301" width="0.0283%" height="15" fill="rgb(241,216,45)" fg:x="42328" fg:w="12"/><text x="100.1933%" y="1311.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (12 samples, 0.03%)</title><rect x="99.9433%" y="1285" width="0.0283%" height="15" fill="rgb(242,22,33)" fg:x="42328" fg:w="12"/><text x="100.1933%" y="1295.50"></text></g><g><title>[unknown] (10 samples, 0.02%)</title><rect x="99.9481%" y="1269" width="0.0236%" height="15" fill="rgb(231,105,49)" fg:x="42330" fg:w="10"/><text x="100.1981%" y="1279.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_with_graceful_shutdown::{{closure}}::{{closure}} (105 samples, 0.25%)</title><rect x="99.7450%" y="1829" width="0.2479%" height="15" fill="rgb(218,204,15)" fg:x="42244" fg:w="105"/><text x="99.9950%" y="1839.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::run_udp_server::{{closure}} (105 samples, 0.25%)</title><rect x="99.7450%" y="1813" width="0.2479%" height="15" fill="rgb(235,138,41)" fg:x="42244" fg:w="105"/><text x="99.9950%" y="1823.50"></text></g><g><title>torrust_tracker::servers::udp::server::Udp::spawn_request_processor (22 samples, 0.05%)</title><rect x="99.9410%" y="1797" width="0.0519%" height="15" fill="rgb(246,0,9)" fg:x="42327" fg:w="22"/><text x="100.1910%" y="1807.50"></text></g><g><title>tokio::task::spawn::spawn (22 samples, 0.05%)</title><rect x="99.9410%" y="1781" width="0.0519%" height="15" fill="rgb(210,74,4)" fg:x="42327" fg:w="22"/><text x="100.1910%" y="1791.50"></text></g><g><title>tokio::task::spawn::spawn_inner (22 samples, 0.05%)</title><rect x="99.9410%" y="1765" width="0.0519%" height="15" fill="rgb(250,60,41)" fg:x="42327" fg:w="22"/><text x="100.1910%" y="1775.50"></text></g><g><title>tokio::runtime::context::current::with_current (22 samples, 0.05%)</title><rect x="99.9410%" y="1749" width="0.0519%" height="15" fill="rgb(220,115,12)" fg:x="42327" fg:w="22"/><text x="100.1910%" y="1759.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.05%)</title><rect x="99.9410%" y="1733" width="0.0519%" height="15" fill="rgb(237,100,13)" fg:x="42327" fg:w="22"/><text x="100.1910%" y="1743.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (22 samples, 0.05%)</title><rect x="99.9410%" y="1717" width="0.0519%" height="15" fill="rgb(213,55,26)" fg:x="42327" fg:w="22"/><text x="100.1910%" y="1727.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.05%)</title><rect x="99.9410%" y="1701" width="0.0519%" height="15" fill="rgb(216,17,4)" fg:x="42327" fg:w="22"/><text x="100.1910%" y="1711.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (22 samples, 0.05%)</title><rect x="99.9410%" y="1685" width="0.0519%" height="15" fill="rgb(220,153,47)" fg:x="42327" fg:w="22"/><text x="100.1910%" y="1695.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (22 samples, 0.05%)</title><rect x="99.9410%" y="1669" width="0.0519%" height="15" fill="rgb(215,131,9)" fg:x="42327" fg:w="22"/><text x="100.1910%" y="1679.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (22 samples, 0.05%)</title><rect x="99.9410%" y="1653" width="0.0519%" height="15" fill="rgb(233,46,42)" fg:x="42327" fg:w="22"/><text x="100.1910%" y="1663.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (22 samples, 0.05%)</title><rect x="99.9410%" y="1637" width="0.0519%" height="15" fill="rgb(226,86,7)" fg:x="42327" fg:w="22"/><text x="100.1910%" y="1647.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (9 samples, 0.02%)</title><rect x="99.9717%" y="1621" width="0.0213%" height="15" fill="rgb(239,226,21)" fg:x="42340" fg:w="9"/><text x="100.2217%" y="1631.50"></text></g><g><title>tokio::runtime::task::new_task (5 samples, 0.01%)</title><rect x="99.9811%" y="1605" width="0.0118%" height="15" fill="rgb(244,137,22)" fg:x="42344" fg:w="5"/><text x="100.2311%" y="1615.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (5 samples, 0.01%)</title><rect x="99.9811%" y="1589" width="0.0118%" height="15" fill="rgb(211,139,35)" fg:x="42344" fg:w="5"/><text x="100.2311%" y="1599.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (5 samples, 0.01%)</title><rect x="99.9811%" y="1573" width="0.0118%" height="15" fill="rgb(214,62,50)" fg:x="42344" fg:w="5"/><text x="100.2311%" y="1583.50"></text></g><g><title>all (42,352 samples, 100%)</title><rect x="0.0000%" y="1861" width="100.0000%" height="15" fill="rgb(212,113,44)" fg:x="0" fg:w="42352"/><text x="0.2500%" y="1871.50"></text></g><g><title>tokio-runtime-w (42,171 samples, 99.57%)</title><rect x="0.4274%" y="1845" width="99.5726%" height="15" fill="rgb(226,150,43)" fg:x="181" fg:w="42171"/><text x="0.6774%" y="1855.50">tokio-runtime-w</text></g></svg></svg>